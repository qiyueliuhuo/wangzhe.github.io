<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的目标</title>
      <link href="/2020/12/21/%E6%88%91%E7%9A%84%E7%9B%AE%E6%A0%87/"/>
      <url>/2020/12/21/%E6%88%91%E7%9A%84%E7%9B%AE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="原则">原则</h2><ul><li>读书 -&gt; 思考 -&gt; 写作</li><li>知识分享，不断输出内容。</li></ul><h2 id="长期目标">长期目标</h2><h2 id="短期目标">短期目标</h2><ul><li>2020 - 2030年<ul><li>建立领域个人影响力<ul><li>技术</li><li>社交</li><li>投资</li></ul></li><li>收入<ul><li>被动收入</li><li>主动收入</li></ul></li><li>生活<ul><li>感情</li><li>娱乐</li></ul></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【转】你值得有一个更精彩的生命</title>
      <link href="/2020/12/20/%E3%80%90%E8%BD%AC%E3%80%91%E4%BD%A0%E5%80%BC%E5%BE%97%E6%9C%89%E4%B8%80%E4%B8%AA%E6%9B%B4%E7%B2%BE%E5%BD%A9%E7%9A%84%E7%94%9F%E5%91%BD/"/>
      <url>/2020/12/20/%E3%80%90%E8%BD%AC%E3%80%91%E4%BD%A0%E5%80%BC%E5%BE%97%E6%9C%89%E4%B8%80%E4%B8%AA%E6%9B%B4%E7%B2%BE%E5%BD%A9%E7%9A%84%E7%94%9F%E5%91%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>by余秋雨</p><blockquote><p>开始语：寒来暑往，春去秋来，我们的生命在一寸寸的消逝，有多少时光是用来耕耘的，又有多时光我们是用来虚度的，尤其是当青春不再，迟暮日近，我们会为自己的这个不重来的人生收藏那些珍贵的经历，才算拥有一个精彩的生命呢，余秋雨的文章《你值得有一个更精彩的生命》读给你听。</p></blockquote><a id="more"></a><p>魏晋时期的一大好处，是生态和心态的多元。礼教还在流行，而阮籍的放诞行为又被允许，于是人世间也就显得十分宽阔。 s 记得阮籍守丧期间，有一天朋友裴楷前去吊唁，在阮籍母亲的灵堂里哭拜，而阮籍却披散着头发坐着，既不起立也不哭拜，只是两眼发直，表情木然。</p><p>裴楷吊唁出来后，立即有人对他说：“按照礼法，吊唁时主人先哭拜，客人才跟着哭拜。这次我看阮籍根本没有哭拜，你为什么独自哭拜？”</p><p>说这番话的大半是挑拨离间的小人，且不去管它了，我对裴楷的回答却很欣赏，他说：“阮籍是超乎礼法的人，可以不讲礼法；我还在礼法之中，所以遵循礼法。”</p><p>我觉得这位裴楷虽是礼法中人却又颇具魏晋风度。他自己不圆通却愿意让世界圆通。</p><p>既然阮籍如此干脆地扯断了一根根陈旧的世俗经纬而直取人生本义，那么，他当然也不会受制于人际关系的重负。</p><p>他是名人，社会上要交结他的人很多，而这些人中间有很大一部分是以吃食名人为生的：结交名人为的是分享名人，边分享边觊觎，一有风吹草动便告密起哄、兴风作浪，刹那间把名人围啄得累累伤痕。</p><p>阮籍身处乱世，在这方面可谓见多识广。他深知世俗友情的不可靠，因此绝不会被一个似真似幻的朋友圈所迷惑。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201220203731.png" /> 提到朋友圈的问题，我需要说一说我对现在年轻人的理解——他们毕业以后很快就被一个圈子围住了，我所说的圈子不仅仅是指一个人际关系的朋友圈，还指别人的生活标准，它会把你的生命耗费很多；还有朋友圈里的互相攀比，又要把你的生命消耗很多。</p><p>结果很快你会觉得自己的生命不够了，整天疲于对付这些圈子，对付这个钱钟书先生所说的“围城”。一个在教师看来生气勃勃的学生，过几年再看到他，他却成了一个平庸的人。</p><p>所以我始终要提醒大家，你们要不断地设定起点，不断地突破围城，不断地提醒自己，你值得有一个更精彩的生命，即使年纪很大了也是这样，这样的生命就比较有价值。</p><p>现在的年轻人都喜欢成天低头刷微信朋友圈，这样做不仅消耗了信息，也把自己的生命给消耗掉了。因此你一定不要被这个圈子所迷惑，要勇于创造朋友圈以外的生命。</p><p>尽管这个圈子很有魅力，而且被高科技给武装起来了，但是一旦你沉溺于这个圈子里，你的生命格局只会越来越狭小。</p><p>许多人就是整天在这个朋友圈里折腾——你说几句漂亮的话，我讲几句漂亮的话；你晒晒家里发生了什么，我晒晒最近买了什么。</p><p>结果你就被这个圈子缠住了，你不知道这个圈子里边所包裹的是一个永远不可重复的高贵的生命。</p><blockquote><p>结束语：生命的高贵与否无关金钱，无关地位，无关学识，更无关你身在何处，而是在于我们对生命那种发自心底的珍视，是对自我的深刻自省与认同，还有一份沉静的责任。愿我们每个人都能在有限的生命里拥有一场无愧的旅程。     <div id="aplayer-vXdmxeQD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1351183637" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《机器学习》课程作业之Lasso回归&amp;稀疏表示</title>
      <link href="/2020/12/15/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8BLasso%E5%9B%9E%E5%BD%92-%E7%A8%80%E7%96%8F%E8%A1%A8%E7%A4%BA/"/>
      <url>/2020/12/15/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8BLasso%E5%9B%9E%E5%BD%92-%E7%A8%80%E7%96%8F%E8%A1%A8%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="第四周作业">第四周作业</h2><h3 id="作业题1">作业题1</h3><p>试根据授课内容，使用坐标下降法给出 Lasso 问题: <span class="math display">\[\min _{\boldsymbol{\beta}, \beta_{0}} \sum_{i=1}^{n}\left(y_{i}-\boldsymbol{\beta}^{T} \boldsymbol{x}_{\boldsymbol{i}}-\beta_{0}\right)^{2}+\lambda\|\boldsymbol{\beta}\|_{1}\]</span> 求解的详细推导步骤。 <a id="more"></a></p><p>推导如下：</p><p>第零步：设初始<span class="math inline">\(\pmb{\beta}\)</span>为<span class="math inline">\((\pmb{\beta^{(0)}}, \beta_0^{(0)})\)</span></p><p>第一步：将<span class="math inline">\(\beta_0\)</span>与<span class="math inline">\(\pmb{\beta}\)</span> 整合在一起，变成<span class="math inline">\(\pmb{\beta}=(\beta_0,\beta_1,\beta_2...\beta_p)^T\)</span>，那么<span class="math inline">\(\pmb{x_i}\)</span>也变为<span class="math inline">\(p+1\)</span>维，即 <span class="math inline">\(\pmb{x_i}=(x_{i,0}, x_{i,1}, x_{i,2}...x_{i,p})^T\)</span>。那么原式展开为： <span class="math display">\[\mathrm{L}=\sum_{i=1}^{n}\left(y_{i}-\sum_{j=0}^{p} x_{i, j} \beta_{j}\right)^{2}+\lambda \sum_{j=1}^{p}\left|\beta_{j}\right|\]</span> 注：对于正则化项中，没有包括<span class="math inline">\(\beta_0\)</span>。（这是为什么呢？）</p><p>第二步：对<span class="math inline">\(\beta\)</span>求导得： <span class="math display">\[\frac{\partial L}{\partial \beta_{k}}=2 a_{k}+2 b_{k} \beta_{k}+\lambda \operatorname{sign}\left(\beta_{k}\right)，k=1,2,3...\]</span></p><p><span class="math display">\[\frac{\partial L}{\partial \beta_{0}}=2 a_{0}+2 b_{0} \beta_{0}\]</span></p><p><span class="math display">\[\text { 其中 } a_{k}=\sum_{i=1}^{n} x_{i, k}\left(\sum_{j \neq k}^{p} x_{i, j} \beta_{j}-y_{i}\right), \quad b_{k}=\sum_{i=1}^{n} x_{i, k}^{2}\]</span></p><p>第三步： 利 用 $ =0 $得到： <span class="math display">\[\beta_{k}+\frac{1}{b_{k}}\left(a_{k}+\frac{\lambda}{2} \operatorname{sign}\left(\beta_{k}\right)\right)=0\]</span> 对上面式子分三种情况讨论后得到： <span class="math display">\[\beta_{k}=\left\{\begin{aligned}\frac{1}{b_{k}}\left(a_{k}-\frac{\lambda}{2}\right)&lt;0, &amp; a_{k}&gt;\frac{\lambda}{2} \\0, &amp;-\frac{\lambda}{2}&lt;a_{k}&lt;\frac{\lambda}{2} \\-\frac{1}{b_{k}}\left(a_{k}+\frac{\lambda}{2}\right)&gt;0, a_{k}&lt;-\frac{\lambda}{2}\end{aligned}\right.\]</span></p><p><span class="math display">\[\beta_0=-\frac{a_{0}}{b_{0}}\]</span></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>摸索出一种属于自己学习方式</title>
      <link href="/2020/12/11/%E6%91%B8%E7%B4%A2%E5%87%BA%E4%B8%80%E7%A7%8D%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F/"/>
      <url>/2020/12/11/%E6%91%B8%E7%B4%A2%E5%87%BA%E4%B8%80%E7%A7%8D%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E5%AD%A6%E4%B9%A0%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>最近一直在思考的一个问题就是：如何学习。</p><p>费曼学习法。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pytorch源码阅读(一)</title>
      <link href="/2020/12/05/pytorch%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-%E4%B8%80/"/>
      <url>/2020/12/05/pytorch%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>阅读开源代码是提高写代码能力最好的方式之一，现在入坑机器学习领域，在众多框架中选择pytorch框架作为自己基本的深度学习框架，现在开始从最简单的pytorch代码部分阅读，学习下python技巧顺便深入学习下神经网络的代码实践。</p><p>关于阅读源码，我一开始在项目中调用pytorch模块和类，通过pycharm追踪源码，在pycharm中可以直接查看依赖包torch中源码，但是这样也不方便阅读torch源码，一个原因是pycharm中查看依赖包的源码内容，查看源码文件的方式是只读模式，没法在里面注释一些自己理解的东西，另一个原因是通过单步调试阅读代码是最容易理解代码的方式，想了想pytorch源码里面应该有对源码的测试代码可以直接跑起来，然后一步步运行，这样看着更方便。</p><p>从github上下载pytorch代码，通过CONTRIBUTING.md文件中指导编译源码，注意使用：<code>python setup.py develop</code> 以开发模式构建代码。这个过程在我的电脑上要跑将近两小时。。。忘了什么原因导致我跑了两次。。。四个小时没了(呜呜...) <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201206000548.png" /></p><p>先从加载和处理数据源码了解。</p><a id="more"></a><blockquote><p>注：笔者阅读的pytorch版本为1.7.0，torchvision版本为0.6</p></blockquote><h2 id="dataset-相关源码">Dataset 相关源码</h2><h3 id="mnist类">MNIST类</h3><p>类继承图：</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/torchvision.datasets.mnist.png" /></p><p>先来看看最常用的mnist数据集的使用，下面两行使用torchvision中提供的MNIST数据集类定义了两个数据集类，分别为训练数据集和测试数据集，那么为什么需要定义两个同样的数据集呢？其中一个因为是训练和测试使用的数据集不一样；另一个原因是训练和测试时候对应的batch_size大小不一样。下面进一步分析datasets.MNIST代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dataset1 = datasets.MNIST(<span class="string">&#x27;../data&#x27;</span>, train=<span class="literal">True</span>, download=<span class="literal">True</span>,</span><br><span class="line">                       transform=transform)</span><br><span class="line">dataset2 = datasets.MNIST(<span class="string">&#x27;../data&#x27;</span>, train=<span class="literal">False</span>,</span><br><span class="line">                          transform=transform)</span><br><span class="line">train_loader = torch.utils.data.DataLoader(dataset1,**train_kwargs)</span><br><span class="line">test_loader = torch.utils.data.DataLoader(dataset2, **test_kwargs)</span><br></pre></td></tr></table></figure><p>下面的代码来自<code>torchvision.datasets.mnist</code>模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> .vision <span class="keyword">import</span> VisionDataset</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> .utils <span class="keyword">import</span> download_url, download_and_extract_archive, extract_archive, \</span><br><span class="line">    verify_str_arg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MNIST</span>(<span class="params">VisionDataset</span>):</span></span><br><span class="line">    resources = [</span><br><span class="line">        (<span class="string">&quot;http://yann.lecun.com/exdb/mnist/train-images-idx3-ubyte.gz&quot;</span>, <span class="string">&quot;f68b3c2dcbeaaa9fbdd348bbdeb94873&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;http://yann.lecun.com/exdb/mnist/train-labels-idx1-ubyte.gz&quot;</span>, <span class="string">&quot;d53e105ee54ea40749a09fcbcd1e9432&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;http://yann.lecun.com/exdb/mnist/t10k-images-idx3-ubyte.gz&quot;</span>, <span class="string">&quot;9fb629c4189551a2d022fa330f9573f3&quot;</span>),</span><br><span class="line">        (<span class="string">&quot;http://yann.lecun.com/exdb/mnist/t10k-labels-idx1-ubyte.gz&quot;</span>, <span class="string">&quot;ec29112dd5afa0611ce80d1b7f02629c&quot;</span>)</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    training_file = <span class="string">&#x27;training.pt&#x27;</span></span><br><span class="line">    test_file = <span class="string">&#x27;test.pt&#x27;</span></span><br><span class="line">    classes = [<span class="string">&#x27;0 - zero&#x27;</span>, <span class="string">&#x27;1 - one&#x27;</span>, <span class="string">&#x27;2 - two&#x27;</span>, <span class="string">&#x27;3 - three&#x27;</span>, <span class="string">&#x27;4 - four&#x27;</span>,</span><br><span class="line">               <span class="string">&#x27;5 - five&#x27;</span>, <span class="string">&#x27;6 - six&#x27;</span>, <span class="string">&#x27;7 - seven&#x27;</span>, <span class="string">&#x27;8 - eight&#x27;</span>, <span class="string">&#x27;9 - nine&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train_labels</span>(<span class="params">self</span>):</span></span><br><span class="line">        warnings.warn(<span class="string">&quot;train_labels has been renamed targets&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.targets</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_labels</span>(<span class="params">self</span>):</span></span><br><span class="line">        warnings.warn(<span class="string">&quot;test_labels has been renamed targets&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.targets</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train_data</span>(<span class="params">self</span>):</span></span><br><span class="line">        warnings.warn(<span class="string">&quot;train_data has been renamed data&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.data</span><br><span class="line"></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_data</span>(<span class="params">self</span>):</span></span><br><span class="line">        warnings.warn(<span class="string">&quot;test_data has been renamed data&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> self.data</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>类<code>MNIST</code>继承自<code>VisionDataset</code>，从名称可以知道<code>VisionDataset</code>是对流行的视觉数据集的抽象类，我从子类开始分析，后面再阅读分析<code>VisionDataset</code>类。<code>MNIST</code>类前面定义了四个属性，其中<code>training_file</code>、<code>test_file</code>保存将原始Minst数据处理之后的tensor格式的训练和测试数据的文件名。另外有四个方法分别是<code>train_labels</code>、<code>test_labels</code>、<code>train_data</code>、<code>test_data</code>，它们都被<code>@property</code>注解所修饰，<code>@property</code>这种注解装饰器来创建<strong>只读属性</strong>，<span class="citation" data-cites="property装饰器会将">@property装饰器会将</span><strong>方法</strong>转换为相同名称的<strong>只读属性</strong>，可以与所定义的属性配合使用，这样可以防止属性被修改。那么我们就可以通过mnist.train_labels得到实例的私有属性，而实际上该过程调用的是train_labels()函数。上面部分除了<code>@property</code>其他的都很好理解了。下面来看这个类的其余部分：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, root, train=<span class="literal">True</span>, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">             download=<span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="built_in">super</span>(MNIST, self).__init__(root, transform=transform,</span><br><span class="line">                                target_transform=target_transform)</span><br><span class="line">    self.train = train  <span class="comment"># training set or test set</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> download:</span><br><span class="line">        self.download()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> self._check_exists():</span><br><span class="line">        <span class="keyword">raise</span> RuntimeError(<span class="string">&#x27;Dataset not found.&#x27;</span> +</span><br><span class="line">                           <span class="string">&#x27; You can use download=True to download it&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self.train:</span><br><span class="line">        data_file = self.training_file</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        data_file = self.test_file</span><br><span class="line">    self.data, self.targets = torch.load(os.path.join(self.processed_folder, data_file))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span>(<span class="params">self, index</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        index (int): Index</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        tuple: (image, target) where target is index of the target class.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    img, target = self.data[index], <span class="built_in">int</span>(self.targets[index])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># doing this so that it is consistent with all other datasets</span></span><br><span class="line">    <span class="comment"># to return a PIL Image</span></span><br><span class="line">    img = Image.fromarray(img.numpy(), mode=<span class="string">&#x27;L&#x27;</span>)   <span class="comment"># @3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self.transform <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        img = self.transform(img)         <span class="comment"># @1     </span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self.target_transform <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        target = self.target_transform(target)    <span class="comment"># @2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> img, target</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__len__</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">len</span>(self.data)</span><br></pre></td></tr></table></figure><p><code>__init__</code>该类的<strong>构造器(constructor)</strong>函数入参<code>transform</code>和<code>target_transform</code>分别传入对数据图像和标签的预处理，在<strong><span class="citation" data-cites="1和">@1和</span><span class="citation" data-cites="2">@2</span></strong>处可以看到在每一张图像返回前分别对图像和标签进行用户自定义预处理。传入的<code>train</code>参数来决定该MNIST的dataset会返回训练集or测试集中的数据。</p><p><code>__getitem__</code>根据python3中定义，如果在类中定义了<code>__getitem__()</code>方法，那么它的实例对象（假设为P）就可以以P[key]形式取值，当实例对象做P[key]运算时，就会调用类中的<code>__getitem__()</code>方法，这是一个很有意思也很有用的特性。具体到这个类的<code>key</code>为训练样本的<code>idex</code>为<code>int</code>类型代表第几个数据样本。在<strong><span class="citation" data-cites="3">@3</span></strong>处将图像转成PIL图像对象，该PIL对象最终会通过transform预处理为<code>tonsor</code>对象。类<code>MNIST</code>剩余部分最主要就是下载<code>download</code>函数，如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">raw_folder</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> os.path.join(self.root, self.__class__.__name__, <span class="string">&#x27;raw&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">processed_folder</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> os.path.join(self.root, self.__class__.__name__, <span class="string">&#x27;processed&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@property</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">class_to_idx</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> &#123;_class: i <span class="keyword">for</span> i, _class <span class="keyword">in</span> <span class="built_in">enumerate</span>(self.classes)&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_check_exists</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (os.path.exists(os.path.join(self.processed_folder,</span><br><span class="line">                                        self.training_file)) <span class="keyword">and</span></span><br><span class="line">            os.path.exists(os.path.join(self.processed_folder,</span><br><span class="line">                                        self.test_file)))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Download the MNIST data if it doesn&#x27;t exist in processed_folder already.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self._check_exists():         <span class="comment"># @4</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    os.makedirs(self.raw_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    os.makedirs(self.processed_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># download files</span></span><br><span class="line">    <span class="keyword">for</span> url, md5 <span class="keyword">in</span> self.resources:</span><br><span class="line">        filename = url.rpartition(<span class="string">&#x27;/&#x27;</span>)[<span class="number">2</span>]</span><br><span class="line">        download_and_extract_archive(url, download_root=self.raw_folder, filename=filename, md5=md5)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># process and save as torch files</span></span><br><span class="line">    print(<span class="string">&#x27;Processing...&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    training_set = (</span><br><span class="line">        read_image_file(os.path.join(self.raw_folder, <span class="string">&#x27;train-images-idx3-ubyte&#x27;</span>)),</span><br><span class="line">        read_label_file(os.path.join(self.raw_folder, <span class="string">&#x27;train-labels-idx1-ubyte&#x27;</span>))</span><br><span class="line">    )</span><br><span class="line">    test_set = (</span><br><span class="line">        read_image_file(os.path.join(self.raw_folder, <span class="string">&#x27;t10k-images-idx3-ubyte&#x27;</span>)),</span><br><span class="line">        read_label_file(os.path.join(self.raw_folder, <span class="string">&#x27;t10k-labels-idx1-ubyte&#x27;</span>))</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(self.processed_folder, self.training_file), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        torch.save(training_set, f)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(self.processed_folder, self.test_file), <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        torch.save(test_set, f)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&#x27;Done!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extra_repr</span>(<span class="params">self</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Split: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;Train&quot;</span> <span class="keyword">if</span> self.train <span class="keyword">is</span> <span class="literal">True</span> <span class="keyword">else</span> <span class="string">&quot;Test&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>download</code>函数下载原始mnist数据并将训练图像数据、训练标签数据存储在一个<code>training_file</code>文件中，将测试图像数据、测试标签数据存在<code>test_file</code>文件中，<strong><span class="citation" data-cites="4">@4</span></strong>处可以看到当<code>processed_folder</code>目录下存在这两个文件，那么就不会通过网络下载，直接读取本地训练测试数据文件。另外，像<code>download_and_extract_archive</code>函数的具体实现，并没有在上面给出，这个就是更加细节的代码实现，此次代码阅读会忽略很多具体细节实现，专注于大的<strong>框架实现</strong>。</p><p><code>MNIST</code>类继承自<code>VisionDataset</code>类，下面我们看看这个类中抽象出了哪些功能。</p><h3 id="visiondataset类">VisionDataset类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VisionDataset</span>(<span class="params">data.Dataset</span>):</span></span><br><span class="line">    _repr_indent = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, root, transforms=<span class="literal">None</span>, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(root, torch._six.string_classes):</span><br><span class="line">            root = os.path.expanduser(root)</span><br><span class="line">        self.root = root</span><br><span class="line"></span><br><span class="line">        has_transforms = transforms <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">        has_separate_transform = transform <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">or</span> target_transform <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> has_transforms <span class="keyword">and</span> has_separate_transform:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;Only transforms or transform/target_transform can &quot;</span></span><br><span class="line">                             <span class="string">&quot;be passed as argument&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># for backwards-compatibility                              @5</span></span><br><span class="line">        self.transform = transform</span><br><span class="line">        self.target_transform = target_transform</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> has_separate_transform:</span><br><span class="line">            transforms = StandardTransform(transform, target_transform)   <span class="comment">#  @6</span></span><br><span class="line">        self.transforms = transforms</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__len__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        head = <span class="string">&quot;Dataset &quot;</span> + self.__class__.__name__</span><br><span class="line">        body = [<span class="string">&quot;Number of datapoints: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.__len__())]</span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            body.append(<span class="string">&quot;Root location: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.root))</span><br><span class="line">        body += self.extra_repr().splitlines()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">hasattr</span>(self, <span class="string">&quot;transforms&quot;</span>) <span class="keyword">and</span> self.transforms <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            body += [<span class="built_in">repr</span>(self.transforms)]</span><br><span class="line">        lines = [head] + [<span class="string">&quot; &quot;</span> * self._repr_indent + line <span class="keyword">for</span> line <span class="keyword">in</span> body]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;\n&#x27;</span>.join(lines)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_format_transform_repr</span>(<span class="params">self, transform, head</span>):</span></span><br><span class="line">        lines = transform.__repr__().splitlines()</span><br><span class="line">        <span class="keyword">return</span> ([<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(head, lines[<span class="number">0</span>])] +</span><br><span class="line">                [<span class="string">&quot;&#123;&#125;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot; &quot;</span> * <span class="built_in">len</span>(head), line) <span class="keyword">for</span> line <span class="keyword">in</span> lines[<span class="number">1</span>:]])</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extra_repr</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p><code>VisionDataset</code>类中在<strong><span class="citation" data-cites="5">@5</span></strong>处注释向后兼容，可以看到在<strong>构造器（constructor）</strong>的入参有<code>transforms</code>、<code>transform</code>、<code>target_transform</code>三个预处理变量，那么哪一种是方式是重构后新引入的预处理方式呢？其实从<strong><span class="citation" data-cites="6">@6</span></strong>处就可以知道，为了兼容<code>transform</code>、<code>target_transform</code>传入方式，将它们两个构造为<code>StandardTransform</code>，也就是说重构后，希望用<code>transforms</code>(注意有个s)入参取代原有的方式。并且，机智的我（嘿嘿）通过查看该文件的修改历史，如下图，就可以看到源码作者的重构的意图。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201210142514.png" /></p><p>再来看看<code>VisionDataset</code>类中<code>__repr__()</code>的作用，简单理解就是，python中定义当输出<code>print(instance)</code>时，等同于执行<code>print(instance.__repr__())</code>，这样用户就可以通过实现自己的<code>__repr__</code>函数来控制我们想要的信息。默认情况下，<code>__repr__()</code> 会返回和调用者有关的 “类名+object at+内存地址”信息。另外，若调用<code>repr(instance)</code>也会执行<code>__repr__()</code>函数。</p><p><code>VisionDataset</code>类继承自<code>data.Dataset</code>类，下面我们看看这个类中有哪些属性和方法。</p><h3 id="dataset">Dataset</h3><p><code>torch.utils.data.dataset</code>模块中定义了几个数据类，是对pytorch搭建神经网络<strong>训练和测试</strong>所需要的数据集的<strong>封装和抽象</strong>。其中<code>Dataset</code>类是所有数据集类的父类，那么来看看这个类中定义了什么内容吧~</p><p>下面代码是我从pytorch源代码中拷贝过来的，省略了一些模块和类的导入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">T_co = TypeVar(<span class="string">&#x27;T_co&#x27;</span>, covariant=<span class="literal">True</span>)</span><br><span class="line">T = TypeVar(<span class="string">&#x27;T&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dataset</span>(<span class="params">Generic[T_co]</span>):</span></span><br><span class="line">    <span class="string">r&quot;&quot;&quot;An abstract class representing a :class:`Dataset`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    All datasets that represent a map from keys to data samples should subclass</span></span><br><span class="line"><span class="string">    it. All subclasses should overwrite :meth:`__getitem__`, supporting fetching a</span></span><br><span class="line"><span class="string">    data sample for a given key. Subclasses could also optionally overwrite</span></span><br><span class="line"><span class="string">    :meth:`__len__`, which is expected to return the size of the dataset by many</span></span><br><span class="line"><span class="string">    :class:`~torch.utils.data.Sampler` implementations and the default options</span></span><br><span class="line"><span class="string">    of :class:`~torch.utils.data.DataLoader`.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .. note::</span></span><br><span class="line"><span class="string">      :class:`~torch.utils.data.DataLoader` by default constructs a index</span></span><br><span class="line"><span class="string">      sampler that yields integral indices.  To make it work with a map-style</span></span><br><span class="line"><span class="string">      dataset with non-integral indices/keys, a custom sampler must be provided.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__getitem__</span>(<span class="params">self, index</span>) -&gt; T_co:</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add__</span>(<span class="params">self, other: <span class="string">&#x27;Dataset[T_co]&#x27;</span></span>) -&gt; &#x27;ConcatDataset[T_co]&#x27;:</span></span><br><span class="line">        <span class="keyword">return</span> ConcatDataset([self, other])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>前两行定义两个用户自定义泛型，这种泛型编程自python3.5起开始引入到python中，有点类似于c++中泛型编程（不怎么用，忘得差不多了），c++中泛型会在编译器做类型检查和替换，属于强制类型检查，而在python中因为python类型都是弱类型，所以这种泛型编程更多的是给静态类型检测工具提供说明，帮助我们在代码编写阶段正确使用和传递python变量。目前，先忽略这些泛型类型。</p><p>在<code>Dataset</code>类中定义了两个基本函数，<code>__getitem__</code>实现key-value结构，<code>__add__</code>定义两个数据集叠加的操作。</p><p>下来我们来看看<code>torchvision</code>中其他的<code>dataset</code>。</p><p>类继承图：</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/torchvision.datasets.imagenet.png" /></p><h3 id="imagefolder">ImageFolder</h3><p>下面源码摘抄自<code>torchvision.datasets.folder</code>模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageFolder</span>(<span class="params">DatasetFolder</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;A generic data loader where the images are arranged in this way: ::</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        root/dog/xxx.png</span></span><br><span class="line"><span class="string">        root/dog/xxy.png</span></span><br><span class="line"><span class="string">        root/dog/xxz.png</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        root/cat/123.png</span></span><br><span class="line"><span class="string">        root/cat/nsdf3.png</span></span><br><span class="line"><span class="string">        root/cat/asd932_.png</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        root (string): Root directory path.</span></span><br><span class="line"><span class="string">        transform (callable, optional): A function/transform that  takes in an PIL image</span></span><br><span class="line"><span class="string">            and returns a transformed version. E.g, ``transforms.RandomCrop``</span></span><br><span class="line"><span class="string">        target_transform (callable, optional): A function/transform that takes in the</span></span><br><span class="line"><span class="string">            target and transforms it.</span></span><br><span class="line"><span class="string">        loader (callable, optional): A function to load an image given its path.</span></span><br><span class="line"><span class="string">        is_valid_file (callable, optional): A function that takes path of an Image file</span></span><br><span class="line"><span class="string">            and check if the file is a valid file (used to check of corrupt files)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     Attributes:</span></span><br><span class="line"><span class="string">        classes (list): List of the class names.</span></span><br><span class="line"><span class="string">        class_to_idx (dict): Dict with items (class_name, class_index).</span></span><br><span class="line"><span class="string">        imgs (list): List of (image path, class_index) tuples</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, root, transform=<span class="literal">None</span>, target_transform=<span class="literal">None</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                 loader=default_loader, is_valid_file=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="built_in">super</span>(ImageFolder, self).__init__(root, loader, IMG_EXTENSIONS <span class="keyword">if</span> is_valid_file <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="literal">None</span>,</span><br><span class="line">                                          transform=transform,</span><br><span class="line">                                          target_transform=target_transform,</span><br><span class="line">                                          is_valid_file=is_valid_file)</span><br><span class="line">        self.imgs = self.samples</span><br></pre></td></tr></table></figure><p><code>ImageFolder</code>是一个通用的图像数据集类，它要求数据按照：</p><ul><li><p>root/label01/xxx.png</p></li><li><p>root/label01/xxy.png</p></li><li><p>root/label01/xxz.png</p></li><li><p>root/label02/123.png</p></li><li><p>root/label02/nsdf3.png</p></li><li><p>root/label02/asd932_.png</p></li></ul><p>的格式存放。这是分类数据集的数据和标签表示的另一种方式，通过<strong>目录名</strong>当作标签来存放图像数据，对于制作<strong>自定义数据集</strong>还是挺方便的。</p><p><code>ImageFolder</code>继承自<code>DatasetFolder</code>，从名称就可以知道<code>ImageFolder</code>是类<code>DatasetFolder</code>的具体化，它只用来处理图像数据集，一般处理<code>IMG_EXTENSIONS = ('.jpg', '.jpeg', '.png', '.ppm', '.bmp', '.pgm', '.tif', '.tiff', '.webp')</code>中的图像格式。<code>ImageFolder</code>读取数据集后，得到三个属性：<code>classes、class_to_idx、imgs</code>。</p><h2 id="sampler-相关源码">Sampler 相关源码</h2><p>源码位于 <code>torch/utils/data/sampler.py</code>，那么为什么要有<code>Sampler</code>相关类呢？我觉得可以这样理解：Dataset是为数据的总体，每次训练或者测试要从总体中随机或顺序抽取一个样本或者一批样本，那么不同的<code>Sampler</code>子类就表示从数据集中不同的抽取方式。</p><ul><li><code>Sampler</code>：所有Sampler的父类。</li><li><code>SequentialSampler</code>：顺序依次获取下标。</li><li><code>RandomSampler</code>：乱序获取下标。</li><li><code>SubsetRandomSampler</code>：某个子集内乱序获取下标。</li><li><code>WeightedRandomSampler</code>：为每个样本设置权重，权重大表示获取概率高。</li><li><code>BatchSampler</code>：即将若干个样本形成一个batch。</li></ul><h3 id="sampler">Sampler</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sampler</span>(<span class="params">Generic[T_co]</span>):</span></span><br><span class="line">    <span class="string">r&quot;&quot;&quot;Base class for all Samplers.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Every Sampler subclass has to provide an :meth:`__iter__` method, providing a</span></span><br><span class="line"><span class="string">    way to iterate over indices of dataset elements, and a :meth:`__len__` method</span></span><br><span class="line"><span class="string">    that returns the length of the returned iterators.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    .. note:: The :meth:`__len__` method isn&#x27;t strictly required by</span></span><br><span class="line"><span class="string">              :class:`~torch.utils.data.DataLoader`, but is expected in any</span></span><br><span class="line"><span class="string">              calculation involving the length of a :class:`~torch.utils.data.DataLoader`.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, data_source: Optional[Sized]</span>) -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>) -&gt; Iterator[T_co]:</span></span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">    <span class="comment"># NOTE [ Lack of Default `__len__` in Python Abstract Base Classes ]</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Many times we have an abstract class representing a collection/iterable of</span></span><br><span class="line">    <span class="comment"># data, e.g., `torch.utils.data.Sampler`, with its subclasses optionally</span></span><br><span class="line">    <span class="comment"># implementing a `__len__` method. In such cases, we must make sure to not</span></span><br><span class="line">    <span class="comment"># provide a default implementation, because both straightforward default</span></span><br><span class="line">    <span class="comment"># implementations have their issues:</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#   + `return NotImplemented`:</span></span><br><span class="line">    <span class="comment">#     Calling `len(subclass_instance)` raises:</span></span><br><span class="line">    <span class="comment">#       TypeError: &#x27;NotImplementedType&#x27; object cannot be interpreted as an integer</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#   + `raise NotImplementedError()`:</span></span><br><span class="line">    <span class="comment">#     This prevents triggering some fallback behavior. E.g., the built-in</span></span><br><span class="line">    <span class="comment">#     `list(X)` tries to call `len(X)` first, and executes a different code</span></span><br><span class="line">    <span class="comment">#     path if the method is not found or `NotImplemented` is returned, while</span></span><br><span class="line">    <span class="comment">#     raising an `NotImplementedError` will propagate and and make the call</span></span><br><span class="line">    <span class="comment">#     fail where it could have use `__iter__` to complete the call.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># Thus, the only two sensible things to do are</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#   + **not** provide a default `__len__`.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#   + raise a `TypeError` instead, which is what Python uses when users call</span></span><br><span class="line">    <span class="comment">#     a method that is not defined on an object.</span></span><br><span class="line">    <span class="comment">#     (@ssnl verifies that this works on at least Python 3.7.)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《机器学习》课程作业之支持向量机</title>
      <link href="/2020/12/02/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8B%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/"/>
      <url>/2020/12/02/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8B%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="第三周作业">第三周作业</h2><h3 id="作业题1">作业题1</h3><p>试根据SVM授课内容，推导软-SVM主问题的对偶问题。<br> 软-SVM 主问题: <span class="math display">\[\min w^{T} w / 2+\mathrm{C} \sum_{i=1}^{n} \epsilon_{i}\]</span> 约束 <span class="math display">\[\begin{array}{c}y_{i}\left(w^{T} x_{i}+b\right) \geq 1-\epsilon_{i} \\\epsilon_{i} \geq 0\end{array}\]</span> <strong>推理如下：</strong><br> 软-SVM主问题是最优化问题，其对应的拉格朗日函数是 <span class="math display">\[L(w, b, \epsilon, \alpha, \mu) \equiv \frac{1}{2}\|w\|^{2}+C \sum_{i=1}^{N} \epsilon_{i}-\sum_{i=1}^{N} \alpha_{i}\left(y_{i}\left(w \cdot x_{i}+b\right)-1+\epsilon_{i}\right)-\sum_{i=1}^{N} \mu_{i} \epsilon_{i}\]</span> 对偶问题是拉格朗日函数的极大极小问题. 首先求 <span class="math inline">\(L(w, b, \epsilon, \alpha, \mu)\)</span> 对 <span class="math inline">\(w, b, \epsilon\)</span> 的极小, 由 <span class="math display">\[\begin{array}{l}\nabla_{w} L(w, b, \epsilon, \alpha, \mu)=w-\sum_{i=1}^{N} \alpha_{i} y_{i} x_{i}=0 \\\nabla_{b} L(w, b, \epsilon, \alpha, \mu)=-\sum_{i=1}^{N} \alpha_{i} y_{i}=0 \\\nabla_{\epsilon_{i}} L(w, b, \epsilon, \alpha, \mu)=C-\alpha_{i}-\mu_{i}=0\end{array}\]</span> 将上面三式代入原最优化问题的拉格朗日函数，得 <span class="math display">\[\min _{w, b, \epsilon} L(w, b, \epsilon, \alpha, \mu)=-\frac{1}{2} \sum_{i=1}^{N} \sum_{j=1}^{N} \alpha_{i} \alpha_{j} y_{i} y_{j}\left(x_{i} \cdot x_{j}\right)+\sum_{i=1}^{N} \alpha_{i}\]</span></p><p>再对 <span class="math inline">\(\min _{w, b, \epsilon} L(w, b, \epsilon, \alpha, \mu)\)</span> 求 <span class="math inline">\(\alpha\)</span> 的极大，即得对偶问题: <span class="math display">\[\max _{\alpha}-\frac{1}{2} \sum_{i=1}^{N} \sum_{j=1}^{N} \alpha_{i} \alpha_{j} y_{i} y_{j}\left(x_{i} \cdot x_{j}\right)+\sum_{i=1}^{N} \alpha_{i}\]</span> <span class="math display">\[\begin{array}{ll}\text { s.t. } &amp; \sum_{i=1}^{N} \alpha_{i} y_{i}=0 \\&amp; C-\alpha_{i}-\mu_{i}=0 \\&amp; \alpha_{i} \geqslant 0 \\&amp; \mu_{i} \geqslant 0, \quad i=1,2, \cdots, N\end{array}\]</span> 利用上面约束条件中等式消去<span class="math inline">\(\mu\)</span>，得 <span class="math display">\[\begin{array}{ll}\min_{\alpha} &amp; \frac{1}{2} \sum_{i=1}^{N} \sum_{j=1}^{N} \alpha_{i} \alpha_{j} y_{i} y_{j}\left(x_{i} \cdot x_{j}\right)-\sum_{i=1}^{N} \alpha_{i} \\\text { s.t. } &amp; \sum_{i=1}^{N} \alpha_{i} y_{i}=0 \\&amp; 0 \leqslant \alpha_{i} \leqslant C, \quad i=1,2, \cdots, N\end{array}\]</span> <strong>推理完毕</strong></p><h3 id="作业题2">作业题2</h3><h4 id="运行结果">运行结果</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">andy@ubuntu:~/workplace/machineLearning/libsvm-3.24/tools$ python easy.py spamTrainSvm.txt spamTestSvm.txt </span><br><span class="line">Scaling training data...</span><br><span class="line">Cross validation...</span><br><span class="line">Best c=8.0, g=0.001953125 CV rate=97.95</span><br><span class="line">Training...</span><br><span class="line">Output model: spamTrainSvm.txt.model</span><br><span class="line">Scaling testing data...</span><br><span class="line">Testing...</span><br><span class="line">Accuracy = 99.1% (991/1000) (classification)</span><br><span class="line">Output prediction: spamTestSvm.txt.predict</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201202232845.png" /></p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《机器学习》课程作业之神经网络反向传播</title>
      <link href="/2020/12/02/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8B%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/"/>
      <url>/2020/12/02/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8B%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="第二周作业">第二周作业</h2><h3 id="作业题1">作业题1</h3><p>试根据神经网络的授课内容，给出<strong>多分类问题</strong>的四个反向传播方程。其中损 失函数采用交叉熵损失函数，激活函数使用 ReLU 激活函数(也就是说，图中的 每一个神经元(紫圈表示)的运算=线性组合+ReLU)(5分)</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/IMG_0014.jpg" /></p><h3 id="作业题2">作业题2</h3><p>在第一题的基础上，实现一个手写数字识别程序，数据在压缩文件neural-networks-and-deep-learning-master中。其中，如下图所示: <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201202165407.png" /> 要求神经网络包含一个隐层，隐层的神经元个数为15。</p><h4 id="python实现">python实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在第一题的基础上，实现一个手写数字识别程序，数据在压缩文件</span></span><br><span class="line"><span class="string">neural-networks-and-deep-learning-master中。其中，如下图所示:</span></span><br><span class="line"><span class="string">要求神经网络包含一个隐层，隐层的神经元个数为15。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cross_entropy_error</span>(<span class="params">y, t</span>):</span></span><br><span class="line">    <span class="keyword">if</span> y.ndim == <span class="number">1</span>:</span><br><span class="line">        t = t.reshape(<span class="number">1</span>, t.size)</span><br><span class="line">        y = y.reshape(<span class="number">1</span>, y.size)</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> t.size == y.size:</span><br><span class="line">        t = t.argmax(axis=<span class="number">1</span>)</span><br><span class="line">             </span><br><span class="line">    batch_size = y.shape[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> -np.<span class="built_in">sum</span>(np.log(y[np.arange(batch_size), t] + <span class="number">1e-7</span>)) / batch_size</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">softmax_loss</span>(<span class="params">X, t</span>):</span></span><br><span class="line">    y = softmax(X)</span><br><span class="line">    <span class="keyword">return</span> cross_entropy_error(y, t)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">softmax</span>(<span class="params">x</span>):</span></span><br><span class="line">    x = x - np.<span class="built_in">max</span>(x, axis=-<span class="number">1</span>, keepdims=<span class="literal">True</span>)   </span><br><span class="line">    <span class="keyword">return</span> np.exp(x) / np.<span class="built_in">sum</span>(np.exp(x), axis=-<span class="number">1</span>, keepdims=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_change_one_hot_label</span>(<span class="params">X</span>):</span></span><br><span class="line">    T = np.zeros((X.size, <span class="number">10</span>))</span><br><span class="line">    <span class="keyword">for</span> idx, row <span class="keyword">in</span> <span class="built_in">enumerate</span>(T):</span><br><span class="line">        row[X[idx]] = <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> T</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_mnist</span>(<span class="params">normalize=<span class="literal">True</span>, flatten=<span class="literal">True</span>, one_hot_label=<span class="literal">False</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;读入MNIST数据集</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Parameters</span></span><br><span class="line"><span class="string">    ----------</span></span><br><span class="line"><span class="string">    normalize : 将图像的像素值正规化为0.0~1.0</span></span><br><span class="line"><span class="string">    one_hot_label : </span></span><br><span class="line"><span class="string">        one_hot_label为True的情况下，标签作为one-hot数组返回</span></span><br><span class="line"><span class="string">        one-hot数组是指[0,0,1,0,0,0,0,0,0,0]这样的数组</span></span><br><span class="line"><span class="string">    flatten : 是否将图像展开为一维数组</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    Returns</span></span><br><span class="line"><span class="string">    -------</span></span><br><span class="line"><span class="string">    (训练图像, 训练标签), (测试图像, 测试标签)</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    save_file = <span class="string">&#x27;source/_posts/机器学习实战/datasets/mnist.pkl&#x27;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(save_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        dataset = pickle.load(f)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> normalize:</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> (<span class="string">&#x27;train_img&#x27;</span>, <span class="string">&#x27;test_img&#x27;</span>):</span><br><span class="line">            dataset[key] = dataset[key].astype(np.float32)</span><br><span class="line">            dataset[key] /= <span class="number">255.0</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span> one_hot_label:</span><br><span class="line">        dataset[<span class="string">&#x27;train_label&#x27;</span>] = _change_one_hot_label(dataset[<span class="string">&#x27;train_label&#x27;</span>])</span><br><span class="line">        dataset[<span class="string">&#x27;test_label&#x27;</span>] = _change_one_hot_label(dataset[<span class="string">&#x27;test_label&#x27;</span>])</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> flatten:</span><br><span class="line">         <span class="keyword">for</span> key <span class="keyword">in</span> (<span class="string">&#x27;train_img&#x27;</span>, <span class="string">&#x27;test_img&#x27;</span>):</span><br><span class="line">            dataset[key] = dataset[key].reshape(-<span class="number">1</span>, <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (dataset[<span class="string">&#x27;train_img&#x27;</span>], dataset[<span class="string">&#x27;train_label&#x27;</span>]), (dataset[<span class="string">&#x27;test_img&#x27;</span>], dataset[<span class="string">&#x27;test_label&#x27;</span>]) </span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Relu</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.mask = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        self.mask = (x &lt;= <span class="number">0</span>)</span><br><span class="line">        out = x.copy()</span><br><span class="line">        out[self.mask] = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">backward</span>(<span class="params">self, dout</span>):</span></span><br><span class="line">        dout[self.mask] = <span class="number">0</span></span><br><span class="line">        dx = dout</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dx</span><br><span class="line"><span class="comment"># 实现Affine层   Affine:仿射   仿射变换  </span></span><br><span class="line"><span class="comment"># 注意： array([2, 3, 4])  既不要理解为行向量也不要理解为列向量，而是理解为numpy中的数组   ng尽量避免使用</span></span><br><span class="line"><span class="comment"># 已经自己推导了</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Affine</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, W, b</span>):</span></span><br><span class="line">        self.W =W</span><br><span class="line">        self.b = b</span><br><span class="line">        </span><br><span class="line">        self.x = <span class="literal">None</span></span><br><span class="line">        self.original_x_shape = <span class="literal">None</span></span><br><span class="line">        self.dW = <span class="literal">None</span></span><br><span class="line">        self.db = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        self.original_x_shape = x.shape</span><br><span class="line">        x = x.reshape(x.shape[<span class="number">0</span>], -<span class="number">1</span>)</span><br><span class="line">        self.x = x</span><br><span class="line"></span><br><span class="line">        out = np.dot(self.x, self.W) + self.b</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> out</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">backward</span>(<span class="params">self, dout</span>):</span></span><br><span class="line">        dx = np.dot(dout, self.W.T)</span><br><span class="line">        self.dW = np.dot(self.x.T, dout)</span><br><span class="line">        self.db = np.<span class="built_in">sum</span>(dout, axis=<span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        dx = dx.reshape(*self.original_x_shape) </span><br><span class="line">        <span class="keyword">return</span> dx</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SoftmaxWithLoss</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.loss = <span class="literal">None</span></span><br><span class="line">        self.y = <span class="literal">None</span> </span><br><span class="line">        self.t = <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, x, t</span>):</span></span><br><span class="line">        self.t = t</span><br><span class="line">        self.y = softmax(x)</span><br><span class="line">        self.loss = cross_entropy_error(self.y, self.t)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> self.loss</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">backward</span>(<span class="params">self, dout=<span class="number">1</span></span>):</span></span><br><span class="line">        batch_size = self.t.shape[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> self.t.size == self.y.size: </span><br><span class="line">            dx = (self.y - self.t) / batch_size</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dx = self.y.copy()</span><br><span class="line">            dx[np.arange(batch_size), self.t] -= <span class="number">1</span></span><br><span class="line">            dx = dx / batch_size</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> dx</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoLayerNet</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, input_size, hidden_size, output_size, weight_init_std = <span class="number">0.01</span></span>):</span></span><br><span class="line">        <span class="comment"># 参数初始化</span></span><br><span class="line">        self.params = &#123;&#125;</span><br><span class="line">        self.params[<span class="string">&#x27;W1&#x27;</span>] = weight_init_std * np.random.randn(input_size, hidden_size)</span><br><span class="line">        self.params[<span class="string">&#x27;b1&#x27;</span>] = np.zeros(hidden_size)</span><br><span class="line">        self.params[<span class="string">&#x27;W2&#x27;</span>] = weight_init_std * np.random.randn(hidden_size, output_size) </span><br><span class="line">        self.params[<span class="string">&#x27;b2&#x27;</span>] = np.zeros(output_size)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 生成各层</span></span><br><span class="line">        self.layers = OrderedDict()</span><br><span class="line">        self.layers[<span class="string">&#x27;Affine1&#x27;</span>] = Affine(self.params[<span class="string">&#x27;W1&#x27;</span>], self.params[<span class="string">&#x27;b1&#x27;</span>])</span><br><span class="line">        self.layers[<span class="string">&#x27;Relu1&#x27;</span>] = Relu()</span><br><span class="line">        self.layers[<span class="string">&#x27;Affine2&#x27;</span>] = Affine(self.params[<span class="string">&#x27;W2&#x27;</span>], self.params[<span class="string">&#x27;b2&#x27;</span>])</span><br><span class="line"></span><br><span class="line">        self.lastLayer = SoftmaxWithLoss()</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> self.layers.values():</span><br><span class="line">            x = layer.forward(x)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">loss</span>(<span class="params">self, x, t</span>):</span></span><br><span class="line">        y = self.predict(x)</span><br><span class="line">        <span class="keyword">return</span> self.lastLayer.forward(y, t)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">accuracy</span>(<span class="params">self, x, t</span>):</span></span><br><span class="line">        y = self.predict(x)</span><br><span class="line">        y = np.argmax(y, axis=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> t.ndim != <span class="number">1</span> : t = np.argmax(t, axis=<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        accuracy = np.<span class="built_in">sum</span>(y == t) / <span class="built_in">float</span>(x.shape[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> accuracy</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">backward</span>(<span class="params">self, x, t</span>):</span></span><br><span class="line">        <span class="comment"># forward</span></span><br><span class="line">        self.loss(x, t)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># backward</span></span><br><span class="line">        dout = <span class="number">1</span></span><br><span class="line">        dout = self.lastLayer.backward(dout)</span><br><span class="line">        </span><br><span class="line">        layers = <span class="built_in">list</span>(self.layers.values())</span><br><span class="line">        layers.reverse()</span><br><span class="line">        <span class="keyword">for</span> layer <span class="keyword">in</span> layers:</span><br><span class="line">            dout = layer.backward(dout)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 設定</span></span><br><span class="line">        grads = &#123;&#125;</span><br><span class="line">        grads[<span class="string">&#x27;W1&#x27;</span>], grads[<span class="string">&#x27;b1&#x27;</span>] = self.layers[<span class="string">&#x27;Affine1&#x27;</span>].dW, self.layers[<span class="string">&#x27;Affine1&#x27;</span>].db</span><br><span class="line">        grads[<span class="string">&#x27;W2&#x27;</span>], grads[<span class="string">&#x27;b2&#x27;</span>] = self.layers[<span class="string">&#x27;Affine2&#x27;</span>].dW, self.layers[<span class="string">&#x27;Affine2&#x27;</span>].db</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> grads</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run2</span>():</span></span><br><span class="line">    <span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">    </span><br><span class="line">    is_visdom = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    (x_train, t_train), (x_test, t_test) = load_mnist(normalize=<span class="literal">True</span>, one_hot_label=<span class="literal">True</span>)</span><br><span class="line">    hidden_size = <span class="number">15</span></span><br><span class="line">    network = TwoLayerNet(input_size=<span class="number">784</span>, hidden_size=hidden_size, output_size=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    iters_num = <span class="number">50000</span></span><br><span class="line">    train_size = x_train.shape[<span class="number">0</span>]</span><br><span class="line">    batch_size = <span class="number">100</span></span><br><span class="line">    learning_rate = <span class="number">0.1</span></span><br><span class="line"></span><br><span class="line">    train_loss_list = []</span><br><span class="line">    train_acc_list = []</span><br><span class="line">    test_acc_list = []</span><br><span class="line"></span><br><span class="line">    iter_per_epoch = <span class="built_in">max</span>(train_size / batch_size, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将窗口类实例化</span></span><br><span class="line">    viz = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> is_visdom:</span><br><span class="line">        <span class="keyword">import</span> visdom</span><br><span class="line">        viz = visdom.Visdom(raise_exceptions=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建窗口并初始化</span></span><br><span class="line">    <span class="keyword">from</span> time <span class="keyword">import</span> strftime, localtime</span><br><span class="line">    win_name = strftime(<span class="string">&quot;%a, %d %b %H:%M:%S&quot;</span>, localtime()) + <span class="string">&#x27; -- accuracy&#x27;</span></span><br><span class="line">    title = <span class="string">&#x27;hidden_size: &#x27;</span> + <span class="built_in">str</span>(hidden_size) + <span class="string">&#x27; -- accuracy&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> is_visdom: viz.line([[<span class="number">0.</span>,<span class="number">0.</span>]], [<span class="number">0</span>], win=win_name, opts=<span class="built_in">dict</span>(title=title, legend=[<span class="string">&#x27;train_acc&#x27;</span>, <span class="string">&#x27;test_acc&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(iters_num):</span><br><span class="line">        batch_mask = np.random.choice(train_size, batch_size)</span><br><span class="line">        x_batch = x_train[batch_mask]</span><br><span class="line">        t_batch = t_train[batch_mask]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 反向传播（backward里面会正向传播一次）</span></span><br><span class="line">        grad = network.backward(x_batch, t_batch)   </span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 更新</span></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> (<span class="string">&#x27;W1&#x27;</span>, <span class="string">&#x27;b1&#x27;</span>, <span class="string">&#x27;W2&#x27;</span>, <span class="string">&#x27;b2&#x27;</span>):</span><br><span class="line">            network.params[key] -= learning_rate * grad[key]</span><br><span class="line">        </span><br><span class="line">        loss = network.loss(x_batch, t_batch)</span><br><span class="line">        train_loss_list.append(loss)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> i % iter_per_epoch == <span class="number">0</span>:</span><br><span class="line">            train_acc = network.accuracy(x_train, t_train)</span><br><span class="line">            test_acc = network.accuracy(x_test, t_test)</span><br><span class="line">            train_acc_list.append(train_acc)</span><br><span class="line">            test_acc_list.append(test_acc)</span><br><span class="line">            print(<span class="built_in">str</span>(<span class="built_in">int</span>(i / iter_per_epoch)) + <span class="string">&quot;. &quot;</span> + <span class="string">&quot;train acc, test acc | &quot;</span> + <span class="built_in">str</span>(train_acc) + <span class="string">&quot;, &quot;</span> + <span class="built_in">str</span>(test_acc))</span><br><span class="line">            <span class="keyword">if</span> is_visdom: viz.line([[train_acc, test_acc]], [<span class="built_in">int</span>(i / iter_per_epoch)],win=win_name, update=<span class="string">&#x27;append&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="运行结果">运行结果</h4><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201202171430.png" /></p><h2 id="总结">总结</h2><p>编程实现大部分参考了 [日］斋藤康毅《深度学习入门》 书中代码。手写数字识别神经网络入门Hello World。该程序通过visdom将训练过程实时显示出来，可以直观清楚得看到训练的精度随着训练epoch增加而提升，经过70epoch后，可以明显看到模型在训练集上精度仍然在提升，然而在测试集上精度并没有增加，这时模型慢慢过拟合。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《机器学习》课程作业之逻辑回归</title>
      <link href="/2020/12/02/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8B%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/"/>
      <url>/2020/12/02/%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A%E4%B9%8B%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="第一周作业">第一周作业</h2><h3 id="作业题1">作业题1</h3><p>试根据逻辑回归的授课内容，推导以下公式(5分):</br> 假设 <span class="math display">\[L(\theta)=\prod_{i=1}^{n} P\left(y_{i} \mid x_{i} ; \theta\right)=\prod_{i=1}^{n}\left(f_{\theta}\left(x_{i}\right)\right)^{y_{i}}\left(1-f_{\theta}\left(x_{i}\right)\right)^{1-y_{i}} \]</span> 请证明:<span class="math inline">\(\ln L(\theta)=\sum_{i=1}^{n}\left(\left(y_{i} * \theta^{T} * x_{i}\right)-\ln \left(1+e^{\theta^{T} * x_{i}}\right)\right)\)</span>成立。</p><p>证明： <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/IMG_0013.jpg" /></p><h3 id="作业题2">作业题2</h3><p>对于文档“ex2data2”中的数据(每一行表示一个样本，每一行有三个数值， 其中前两个值代表输入属性 x， 最后一个值代表标签 y)，请使用逻辑回归模型训 练一个分类器，并对结果进行可视化(5 分)。注 1:编程 语言不限;注 2:可视 化过程中，请使用不同颜色或形状区分“0”类和“1”类数据，并画出决策方程， 如下图 给出一个示例: <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201115160053.png" /></p><h4 id="python实现">python实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">实现《机器学习》课程-庞善民主讲 课程代码</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">第一周作业：</span></span><br><span class="line"><span class="string">对于文档“ex2data2”中的数据(每一行表示一个样本，每一行有三个数值， 其中前两个值代表输入属性 x，</span></span><br><span class="line"><span class="string">最后一个值代表标签 y)，请使用逻辑回归模型训 练一个分类器，并对结果进行可视化(5 分)。注 1:编程</span></span><br><span class="line"><span class="string">语言不限;注 2:可视 化过程中，请使用不同颜色或形状区分“0”类和“1”类数据，并画出决策方程， 如下图</span></span><br><span class="line"><span class="string">给出一个示例:</span></span><br><span class="line"><span class="string">![](https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201115160053.png)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">doc = <span class="built_in">open</span>(<span class="string">&#x27;source/_posts/机器学习/result.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">F</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span>(<span class="params">z</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> / (<span class="number">1</span> + np.exp(-z))</span><br><span class="line">    <span class="comment"># 交叉熵误差 二分类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cross_entropy</span>(<span class="params">a, y_</span>):</span></span><br><span class="line">        lnL = <span class="number">0</span> </span><br><span class="line">        bs = a.size</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(bs):</span><br><span class="line">            lnL += np.log(a[idx] +  <span class="number">1e-10</span>) <span class="keyword">if</span> y_[idx] == <span class="number">1</span> <span class="keyword">else</span> np.log(<span class="number">1</span> - a[idx] + <span class="number">1e-10</span>) </span><br><span class="line">        <span class="keyword">return</span> lnL/bs</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f1</span>(<span class="params">preds, labels</span>):</span></span><br><span class="line">        TP, FN, FP, TN = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        m = <span class="built_in">len</span>(preds)</span><br><span class="line">        <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">            <span class="keyword">if</span> preds[idx] == <span class="number">1</span> <span class="keyword">and</span> labels[idx] == <span class="number">1</span>:</span><br><span class="line">                TP += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> preds[idx] == <span class="number">0</span> <span class="keyword">and</span> labels[idx] == <span class="number">1</span>:</span><br><span class="line">                FN += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> preds[idx] == <span class="number">1</span> <span class="keyword">and</span> labels[idx] == <span class="number">0</span>:</span><br><span class="line">                FP += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> preds[idx] == <span class="number">0</span> <span class="keyword">and</span> labels[idx] == <span class="number">0</span>:</span><br><span class="line">                TN += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * TP / (m + TP - TN)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">目前只支持二分类</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LogisticRegressionModel</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self._train = <span class="literal">False</span></span><br><span class="line">        self.parameters = &#123;&#125;</span><br><span class="line">        self.d_parameters = &#123;&#125;</span><br><span class="line">        self.parameters[<span class="string">&#x27;theta&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">        self.d_parameters[<span class="string">&#x27;theta&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    input data</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self, x</span>):</span></span><br><span class="line">        xp = x.copy()</span><br><span class="line">        y_ = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> self._train:</span><br><span class="line">            xp, y_ = xp</span><br><span class="line">        <span class="keyword">if</span> self.parameters[<span class="string">&#x27;theta&#x27;</span>] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.parameters[<span class="string">&#x27;theta&#x27;</span>] = np.ndarray((xp.shape[<span class="number">1</span>] + <span class="number">1</span>,))</span><br><span class="line">        theta = self.parameters[<span class="string">&#x27;theta&#x27;</span>]</span><br><span class="line">        xp = np.insert(xp, <span class="number">0</span>, <span class="number">1</span>, axis=<span class="number">1</span>) <span class="comment"># 增加x_0=1</span></span><br><span class="line">        z = xp @ theta.T </span><br><span class="line">        a = F.sigmoid(z)</span><br><span class="line">        possibility = a.copy()</span><br><span class="line">        classes = np.int64(possibility&gt;<span class="number">0.5</span>)</span><br><span class="line">        possibility[possibility&lt;=<span class="number">0.5</span>] = <span class="number">1</span> - possibility[possibility&lt;=<span class="number">0.5</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self._train:</span><br><span class="line">            <span class="keyword">return</span> classes, possibility</span><br><span class="line">        <span class="keyword">if</span> self._train:</span><br><span class="line">            <span class="comment"># 对数似然（交叉熵？）</span></span><br><span class="line">            train_score = F.cross_entropy(a, y_)</span><br><span class="line">            self.d_parameters[<span class="string">&#x27;theta&#x27;</span>] =  ((y_ - a) @ xp)/a.size</span><br><span class="line">            <span class="comment"># check gradient</span></span><br><span class="line">            check_theta = theta.copy()</span><br><span class="line">            dx = <span class="number">1e-10</span></span><br><span class="line">            check_theta[<span class="number">0</span>] += dx</span><br><span class="line">            <span class="keyword">assert</span> <span class="built_in">abs</span>((F.cross_entropy(F.sigmoid(xp @ check_theta), y_) - F.cross_entropy(F.sigmoid(xp @ theta), y_))/dx - \</span><br><span class="line">                        self.d_parameters[<span class="string">&#x27;theta&#x27;</span>][<span class="number">0</span>]) &lt; <span class="number">1e-4</span></span><br><span class="line">            <span class="keyword">return</span> classes, possibility, train_score</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">evaluate</span>(<span class="params">self, preds, labels</span>):</span></span><br><span class="line">        <span class="comment"># error   accuracy   f1</span></span><br><span class="line">        <span class="keyword">return</span> np.<span class="built_in">sum</span>(preds != labels) / <span class="built_in">len</span>(preds), np.<span class="built_in">sum</span>(preds == labels) / <span class="built_in">len</span>(preds), F.f1(preds, labels)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span>(<span class="params">self</span>):</span></span><br><span class="line">        self._train = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">train</span>(<span class="params">self</span>):</span></span><br><span class="line">        self._train = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Batch Gradient Descent</span></span><br><span class="line"><span class="string">采用整个训练集的数据</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BGD</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, lr</span>):</span></span><br><span class="line">        self.lr = lr</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span>(<span class="params">self, parameters, d_parameters</span>):</span></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> parameters.keys():</span><br><span class="line">            parameters[key] += self.lr * d_parameters[key]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Datasets</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, dataPath=<span class="string">&#x27;source/_posts/机器学习/ex2data2.txt&#x27;</span>, batchsize=<span class="number">16</span></span>):</span></span><br><span class="line">        <span class="comment"># datasets  train_set, train_labels, test_set, test_labels</span></span><br><span class="line">        self.datasets = np.ndarray((<span class="number">4</span>,), dtype=np.ndarray)</span><br><span class="line">        self.batchsize = batchsize</span><br><span class="line">        self.count = -<span class="number">1</span></span><br><span class="line">        self.num = <span class="number">0</span></span><br><span class="line">        data_all, labels_all = <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">with</span> Path(dataPath).<span class="built_in">open</span>() <span class="keyword">as</span> f:</span><br><span class="line">            line = f.readline()</span><br><span class="line">            <span class="keyword">while</span> line:</span><br><span class="line">                self.num += <span class="number">1</span></span><br><span class="line">                line = line[:-<span class="number">1</span>]</span><br><span class="line">                line_datas = line.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">                data_all = np.array([[line_datas[<span class="number">0</span>], line_datas[<span class="number">1</span>]]], dtype=np.float32) <span class="keyword">if</span> data_all <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> np.append(data_all, np.array([[line_datas[<span class="number">0</span>], line_datas[<span class="number">1</span>]]], dtype=np.float32),axis=<span class="number">0</span>)</span><br><span class="line">                labels_all = np.array([line_datas[<span class="number">2</span>]], dtype=np.float32) <span class="keyword">if</span> labels_all <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">else</span> np.append(labels_all, np.float32(line_datas[<span class="number">2</span>]))</span><br><span class="line">                line = f.readline()</span><br><span class="line">        index = [idx <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data_all))]</span><br><span class="line">        np.random.seed(<span class="number">3</span>)</span><br><span class="line">        np.random.shuffle(index) <span class="comment"># 打乱索引</span></span><br><span class="line">        data_all = data_all[index]</span><br><span class="line">        labels_all = labels_all[index]</span><br><span class="line">        self.origin_datasets = np.ndarray((<span class="number">2</span>,), dtype=np.ndarray)</span><br><span class="line">        self.origin_datasets[<span class="number">0</span>] = data_all</span><br><span class="line">        self.origin_datasets[<span class="number">1</span>] = labels_all</span><br><span class="line"></span><br><span class="line">        split = <span class="built_in">int</span>(<span class="built_in">len</span>(data_all) * <span class="number">0.8</span>)</span><br><span class="line">        self.datasets[<span class="number">0</span>] = data_all[:split]</span><br><span class="line">        self.datasets[<span class="number">1</span>] = labels_all[:split]</span><br><span class="line">        self.datasets[<span class="number">2</span>] = data_all[split:]</span><br><span class="line">        self.datasets[<span class="number">3</span>] = labels_all[split:]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__next__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.count += <span class="number">1</span></span><br><span class="line">        train_set = self.datasets[<span class="number">0</span>]</span><br><span class="line">        trian_labels = self.datasets[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> self.batchsize &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 约定batchsize &lt;= 0 则返回所有训练数据集</span></span><br><span class="line">            <span class="keyword">if</span> self.count &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">raise</span> StopIteration</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> train_set, trian_labels</span><br><span class="line">        <span class="keyword">if</span> self.count &gt;= math.ceil(<span class="built_in">len</span>(self.datasets[<span class="number">0</span>])/self.batchsize):</span><br><span class="line">            <span class="keyword">raise</span> StopIteration</span><br><span class="line">        <span class="keyword">return</span> train_set[self.count*self.batchsize:(self.count+<span class="number">1</span>)*self.batchsize], \</span><br><span class="line">               trian_labels[self.count*self.batchsize:(self.count+<span class="number">1</span>)*self.batchsize]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__call__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.origin_datasets, self.datasets[<span class="number">0</span>], self.datasets[<span class="number">1</span>], self.datasets[<span class="number">2</span>], self.datasets[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__iter__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># 该函数会由iter函数调用 返回一个可以迭代的对象</span></span><br><span class="line">        self.count = -<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_test_set</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.datasets[<span class="number">2</span>], self.datasets[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run1</span>():</span></span><br><span class="line">    <span class="comment"># 根据数据可视化图知，需将二维数据映射到高维空间</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># x1_cubic = datasets[0][:,0]**2</span></span><br><span class="line">    <span class="comment"># x2_cubic = datasets[0][:,1]**2</span></span><br><span class="line">    <span class="comment"># datasets[0] = np.column_stack((datasets[0], x1_square, x2_square, x1_cubic, x2_cubic))</span></span><br><span class="line">    model = LogisticRegressionModel()</span><br><span class="line">    optimizer = BGD(lr=<span class="number">1</span>)</span><br><span class="line">    epochs = <span class="number">10000</span></span><br><span class="line">    model.train()</span><br><span class="line">    datasets = Datasets(batchsize=<span class="number">0</span>)</span><br><span class="line">    test_set, test_labels = datasets.get_test_set()</span><br><span class="line">    test_set = np.column_stack((test_set, test_set[:,<span class="number">0</span>]**<span class="number">2</span>, test_set[:,<span class="number">1</span>]**<span class="number">2</span>, test_set[:,<span class="number">0</span>] * test_set[:,<span class="number">1</span>])) <span class="comment">#  test_set[:,0]**3, test_set[:,1]**3))</span></span><br><span class="line">    best_f1 = <span class="number">0</span></span><br><span class="line">    best_result = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(epochs):</span><br><span class="line">        print(<span class="string">&#x27;%d/%d epoch: &#x27;</span> % (epoch + <span class="number">1</span>, epochs))</span><br><span class="line">        <span class="keyword">for</span> train_set, train_labels <span class="keyword">in</span> datasets:</span><br><span class="line">            train_set = np.column_stack((train_set, train_set[:,<span class="number">0</span>]**<span class="number">2</span>, \</span><br><span class="line">                        train_set[:,<span class="number">1</span>]**<span class="number">2</span>, train_set[:,<span class="number">0</span>] * train_set[:,<span class="number">1</span>])) <span class="comment">#, train_set[:,0]**3, train_set[:,1]**3))</span></span><br><span class="line">            train_data = np.ndarray((<span class="number">2</span>,), dtype=np.ndarray)</span><br><span class="line">            train_data[<span class="number">0</span>] = train_set</span><br><span class="line">            train_data[<span class="number">1</span>] = train_labels</span><br><span class="line">            classes, possibility, train_score = model(train_data)</span><br><span class="line">            optimizer.update(model.parameters, model.d_parameters)</span><br><span class="line">            print(<span class="string">&#x27;train_score: %f&#x27;</span> % train_score)</span><br><span class="line">        test_classes_pred, _, _, = model([test_set, test_labels])</span><br><span class="line">        err, acc, f1 = model.evaluate(test_classes_pred, test_labels)</span><br><span class="line">        <span class="keyword">if</span> f1 &gt; best_f1:</span><br><span class="line">            best_result[<span class="string">&#x27;err&#x27;</span>] = err.copy()</span><br><span class="line">            best_result[<span class="string">&#x27;acc&#x27;</span>] = acc.copy()</span><br><span class="line">            best_result[<span class="string">&#x27;f1&#x27;</span>] = f1</span><br><span class="line">            best_f1 = f1</span><br><span class="line">            best_result[<span class="string">&#x27;parameters&#x27;</span>] = <span class="built_in">str</span>(model.parameters.copy())</span><br><span class="line">        print(<span class="string">&#x27;error: %f, accuracy: %f, f1: %f&#x27;</span> % (err, acc, f1))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&#x27;best --  error: %f, accuracy: %f, f1: %f&#x27;</span> % (best_result[<span class="string">&#x27;err&#x27;</span>], best_result[<span class="string">&#x27;acc&#x27;</span>], best_result[<span class="string">&#x27;f1&#x27;</span>]), file=doc)</span><br><span class="line">    print(best_result[<span class="string">&#x27;parameters&#x27;</span>], file=doc)</span><br><span class="line">    print(<span class="string">&#x27;best --  error: %f, accuracy: %f, f1: %f&#x27;</span> % (best_result[<span class="string">&#x27;err&#x27;</span>], best_result[<span class="string">&#x27;acc&#x27;</span>], best_result[<span class="string">&#x27;f1&#x27;</span>]))</span><br><span class="line">    print(best_result[<span class="string">&#x27;parameters&#x27;</span>])</span><br><span class="line">    plt.title(<span class="string">u&#x27;figure&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.xlabel(<span class="string">&#x27;x_1&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;x_2&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    origin_datasets, train_set, train_labels, test_set, test_labels  = datasets()</span><br><span class="line">    plt.scatter(train_set[train_labels==<span class="number">1</span>][:,<span class="number">0</span>], train_set[train_labels==<span class="number">1</span>][:,<span class="number">1</span>], s=<span class="number">20</span>, marker=<span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">    plt.scatter(train_set[train_labels!=<span class="number">1</span>][:,<span class="number">0</span>], train_set[train_labels!=<span class="number">1</span>][:,<span class="number">1</span>], s=<span class="number">20</span>, marker=<span class="string">&#x27;o&#x27;</span>)</span><br><span class="line">    plt.scatter(test_set[:,<span class="number">0</span>], test_set[:,<span class="number">1</span>], s=<span class="number">50</span>, marker=<span class="string">&#x27;p&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 方程  0 = theta_0 + theta_1 * x1 + theta_2 * x2 + theta_3 * x1^2 + theta_4 * x2^2 + theta_5 * x1 * x2</span></span><br><span class="line">    </span><br><span class="line">    x1 = np.arange(-<span class="number">1</span>, <span class="number">1</span>, <span class="number">0.00001</span>)</span><br><span class="line">    theta = model.parameters[<span class="string">&#x27;theta&#x27;</span>]</span><br><span class="line">    a = theta[<span class="number">4</span>]</span><br><span class="line">    b = theta[<span class="number">2</span>] + theta[<span class="number">5</span>] * x1</span><br><span class="line">    c = theta[<span class="number">0</span>] + theta[<span class="number">1</span>] * x1 + theta[<span class="number">3</span>] * (x1**<span class="number">2</span>)</span><br><span class="line">    retain = b**<span class="number">2</span>-<span class="number">4</span>*a*c &gt;= <span class="number">0</span></span><br><span class="line">    x1 = x1[retain]</span><br><span class="line">    b = theta[<span class="number">2</span>] + theta[<span class="number">5</span>] * x1</span><br><span class="line">    c = theta[<span class="number">0</span>] + theta[<span class="number">1</span>] * x1 + theta[<span class="number">3</span>] * (x1**<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    x2_down = ((-b+np.sqrt(b**<span class="number">2</span>-<span class="number">4</span>*a*c))/(<span class="number">2</span>*a))</span><br><span class="line">    x2_up = ((-b-np.sqrt(b**<span class="number">2</span>-<span class="number">4</span>*a*c))/(<span class="number">2</span>*a))</span><br><span class="line">    plt.plot(x1, x2_up, linewidth = <span class="string">&#x27;1&#x27;</span>, color=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    plt.plot(x1, x2_down, linewidth = <span class="string">&#x27;1&#x27;</span>, color=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(&#x27;theta: &#x27; + str(model.parameters[&#x27;theta&#x27;]))</span></span><br><span class="line">    plt.legend(labels=[<span class="string">&#x27;border&#x27;</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 测试1.0  1.0 数据</span></span><br><span class="line">    <span class="comment"># test0 = np.array([[1.0, 1.0, 1.0, 1.0, 1.0]], dtype=np.float32)</span></span><br><span class="line">    <span class="comment"># model.predict()</span></span><br><span class="line">    <span class="comment"># classes, possibility = model(test0)</span></span><br><span class="line">    <span class="comment"># print(classes)</span></span><br><span class="line">    <span class="comment"># print(possibility)</span></span><br><span class="line">    </span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure><h4 id="运行结果">运行结果：</h4><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">best --  error: <span class="number">0.166667</span>, accuracy: <span class="number">0.833333</span>, f1: <span class="number">0.857143</span></span><br><span class="line">&#123;&#x27;theta&#x27;: array([  <span class="number">4.90069183</span>,   <span class="number">3.14739206</span>,   <span class="number">3.76928051</span>, -<span class="number">12.15848288</span>,</span><br><span class="line">       -<span class="number">10.98386797</span>,  -<span class="number">6.24150969</span>])&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201202121057.png" /></p><h2 id="总结">总结</h2><p>写程序，然后调试太费时间了了了了了，尤其是不去调现成的包，手动实现每个细节。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Yolo解读</title>
      <link href="/2020/11/23/Yolo%E8%A7%A3%E8%AF%BB/"/>
      <url>/2020/11/23/Yolo%E8%A7%A3%E8%AF%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="yolo">Yolo</h2><blockquote><p>目标检测是计算机视觉中比较简单的任务，用来在一张图像中找到<strong>某些特定的物体</strong>，目标检测不仅要求我们识别这些物体的<strong>种类</strong>，同时要求我们标出这些物体的<strong>位置</strong>。显然，类别是离散数据，位置是连续数据。</p></blockquote><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200728194822.png" /></p><p>YOLO的全称是you only look once，指<strong>只需要</strong>浏览一次就可以识别出图中的物体的类别和位置。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201123161939.png" /></p><p>将图片分为个单元格(原文中S=7)，之后的输出是以单元格为单位进行的： 1.如果一个object的中心落在某个单元格上，那么这个单元格负责预测这个物体。 2.每个单元格需要预测B个bbox值(bbox值包括坐标和宽高，原文中B=2)，同时为每个bbox值预测一个置信度(confidence scores)。也就是每个单元格需要预测B×(4+1)个值。 3.每个单元格需要预测C(物体种类个数，原文C=20，这个与使用的数据库有关)个条件概率值. 所以，最后网络的输出维度为<span class="math inline">\(S*S*(B*5+C)\)</span>，这里虽然每个单元格负责预测一种物体(这也是这篇文章的问题，当有小物体时可能会有问题)，但是每个单元格可以预测多个bbox值(这里可以认为有多个不同形状的bbox，为了更准确的定位出物体，如下图所示)。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201123162719.png" /></p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201123163700.png" /></p><p><a href="https://zhuanlan.zhihu.com/p/24916786?utm_source=qq&amp;utm_medium=social" class="uri">https://zhuanlan.zhihu.com/p/24916786?utm_source=qq&amp;utm_medium=social</a></p><h2 id="yolov4">YOLOv4</h2><h3 id="目标检测结构">目标检测结构</h3><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201124092615.png" /></p><p><strong>Input：{Image, Patches, Image Pyramid,...}</strong></p><p><strong>Backbone: {VGG16, VGG19, ResNet-50, ResNeXt-101, Darknet53, 轻量级：SqueezeNet, MobilenetV1,2,3, ShuffleNet1,2}</strong></p><p><strong>Neck: {FPN, PAN, NAS-FPN, BiFPN, ASFF, SFAM, SPP, ASPP in deeplabV3+, RFB, SAM}</strong></p><p><strong>Head:</strong>            <strong>Dense Prediction(one-stage): {RPN, YOLO, SSD, Retinanet, FCOS,...}</strong>            <strong>Sparse Prediction(two-stage): {Faster R-CNN, R-FCN,...}</strong></p><ul><li><strong>Input</strong>: 算法的输入。</li><li><strong>Backbone</strong>: 图像浅层特征（low-level）提取，如边缘，颜色，纹理等。</li><li><strong>Neck</strong>: 对backbone提取到的浅层特征（low-level feature）进行聚合，进一步增强加工，使得学到的特征满足特定场景下识别特征。</li><li><strong>Head</strong>: 整合图像特征，输出想要的结果形式。</li></ul><p><strong>Object Detection = Backbone + Neck + Head</strong></p><h3 id="cnn中通常方法技巧">CNN中通常方法(技巧)</h3><ul><li><p><strong>Activations</strong>: ReLU, leaky-ReLU, parametric-ReLU, ReLU6, SELU, Swish, or Mish</p></li><li><p><strong>Bounding box regression loss</strong>: MSE, IoU, GIoU, CIoU, DIoU</p></li><li><p><strong>Data augmentation</strong>: CutOut, MixUp, CutMix</p></li><li><p><strong>Regularization method</strong>: DropOut, DropPath, Spatial DropOut, or DropBlock</p></li><li><p><strong>Normalization of the network activations by their mean and variance</strong>: Batch Normalization (BN), Cross-GPU Batch Normalization (CGBN or SyncBN), Filter Response Normalization (FRN), or Cross-Iteration Batch Normalization (CBN)</p></li><li><p><strong>Skip-connections</strong>: Residual connections, Weighted residual connections, Multi-input weighted residual connections, or Cross stage partial connections (CSP)</p></li></ul><h3 id="activations">Activations</h3><p>激活函数: ReLu,LRelu, PReLU, SELU, ReLu6, ==Swish, Mish==</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/image-20201126233012193.png" /></p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201126232825.png" /></p><h3 id="bounding-box-regression-loss">Bounding box regression loss</h3><p>前面介绍的目标检测，简单来说就是需要在一张图像中检测到目标物，如猫、狗等，那么它们具体在这张图像的哪里，需要通过一个矩形框将它们的边界框出来。给定一张图像，为了精确衡量目标物位置，即矩形边界框的位置，我们自然而然得想到：通过坐标系中矩形左上点和右下点来衡量矩形（目标）的位置。在图像领域常见的坐标系是以图像（或屏幕）的左上角为坐标原点，向右和向下分别为<span class="math inline">\(x\)</span>和<span class="math inline">\(y\)</span>轴的正方向。这里的目标物矩形框就是Bounding box（BBox）。另外，常见的描述BBox的方式有两种，一种是BBox的左上点和右下点，即<span class="math inline">\(\left\{x_{\text {center}}, y_{\text {center}}\right.\)</span>, <span class="math inline">\(w, h\}\)</span>， 另一种是BBox的中心点坐标以及高度和宽度，即<span class="math inline">\(\left\{x_{\text {center}}, y_{\text {center}}, w, h\right\}\)</span>。当然，还有通过基于锚框（anchor-based method）的偏移量来描述BBox的位置，即<span class="math inline">\(\left\{x_{\text {center_offset }}, y_{\text {center_offset }}, w_{\text {offset}}, h_{\text {offset}}\right\}\)</span>。总的来说，需要四个变量衡量BBox的位置信息。</p><p>不同于分类问题需要求得离散的类别信息，由于BBox位置坐标的连续性，将求解BBox位置的问题建模为一个回归问题，那么为了使得深度网络朝着预测正确的BBox的参数方向更新，在损失函数(loss function)中增加Bounding box regression loss（边界框回归损失项）。</p><p>常见的Bounding box regression loss有以下几种：</p><ul><li><strong>MAE（L1 loss)</strong> <span class="math display">\[\text{L1 loss} = \frac{1}{m} \sum_{i=1}^{m}|\left(y_{i}-\hat{y}_{i}\right)|\]</span></li><li><strong>MSE（L2 loss）</strong></li></ul><p><span class="math display">\[\text{L2 loss} =\frac{1}{m} \sum_{i=1}^{m}\left(y_{i}-\hat{y}_{i}\right)^{2}\]</span></p><ul><li><strong>Smooth L1 loss</strong></li></ul><p><span class="math display">\[\operatorname{smooth}_{L_{1}}(x)=\left\{\begin{array}{ll}0.5 x^{2} &amp; \text { if }|x|&lt;1 \\|x|-0.5 &amp; \text { otherwise }\end{array}\right.\]</span></p><ul><li><strong>IoU loss</strong></li></ul><p><span class="math display">\[\text{IoU}=\frac{|A \cap B|}{|A \cup B|}\]</span></p><p><span class="math display">\[\text { IoU loss }=-\ln \frac{\text {Intersection}(A, B)}{\text {Union }(A, B)}\]</span></p><ul><li><strong>GIoU loss</strong><ul><li><strong>Ｃ</strong>为包住它们的最小方框</li></ul></li></ul><p><span class="math display">\[\text{GIoU}=\text{IoU}-\frac{|C \backslash(A \cup B)|}{|C|}\]</span></p><p><span class="math display">\[\text{GIoU loss} = 1-GIoU\]</span></p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201201124029.png" style="zoom:50%;" /></p><ul><li><strong>DIoU loss</strong><ul><li>将目标与anchor之间的<strong>距离，重叠率以及尺度</strong>都考虑进去</li></ul></li></ul><p><span class="math display">\[D I o U=I o U-\frac{\rho^{2}\left(b, b^{g t}\right)}{c^{2}}\]</span></p><p>其中， <span class="math inline">\(b\)</span>， <span class="math inline">\(b^{gt}\)</span>分别代表了预测框和真实框的中心点，且<span class="math inline">\(\rho\)</span>代表的是计算两个中心点间的欧式距离。 <span class="math inline">\(c\)</span>代表的是能够同时包含预测框和真实框的<strong>最小闭包区域</strong>的对角线距离。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201201152000.png" /></p><ul><li><strong>CIoU loss</strong></li></ul><p><span class="math display">\[\text{CIoU loss}=1-I o U+\frac{\rho^{2}\left(\mathbf{b}, \mathbf{b}^{g t}\right)}{c^{2}}+\alpha v\]</span></p><p><span class="math display">\[v=\frac{4}{\pi^{2}}\left(\arctan \frac{w^{g t}}{h^{g t}}-\arctan \frac{w}{h}\right)^{2}\]</span></p><p><span class="math display">\[\alpha=\frac{v}{(1-I o U)+v}\]</span></p><h3 id="data-augmentation">Data Augmentation</h3><p>参考：https://www.pianshen.com/article/69351399936/</p><ul><li><strong>Random Erase</strong>：对图像中随机选取一个矩形区域用特定的值(随机值或者数据均值)进行覆盖。</li><li><strong>Cutout</strong>：在图像中随机裁剪矩形区域，并用0来填充。</li><li><strong>Hide and Seek</strong>：将图像分割成一个由 SxS 图像补丁组成的网格，根据概率设置随机隐藏一些补丁(区域）。</li></ul><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201126153932.png" /></p><ul><li><p><strong>Grid Mask</strong>：与Hide-and-seek类似，也是先对图像划分网格，有<strong>规律地、均匀地</strong>选取部分区域进行填充。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201126155406.png" /></p></li></ul><p><strong>Why？</strong></p><blockquote><p>This technique encourages the network to better utilize the full context of the image, rather than relying on the presence of a small set of specific visual features.</p></blockquote><ul><li><strong>MixUp</strong>：输入两张图像，对两张图像和对应标签进行线性叠加。</li></ul><figure><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snipaste_2020-11-26_18-00-21.jpg" alt="Snipaste_2020-11-26_18-00-21" /><figcaption aria-hidden="true">Snipaste_2020-11-26_18-00-21</figcaption></figure><ul><li><p><strong>Cutmix</strong>：将一部分区域cut掉但不填充0像素而是随机填充训练集中的其他数据的区域像素值，分类结果按一定的比例分配</p><figure><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201126184228.png" alt="20201126184228" /><figcaption aria-hidden="true">20201126184228</figcaption></figure></li><li><p>上述算法是在图像中裁剪矩形区域并填充，那么算法在<strong>feature map上</strong>裁剪并填充的叫做DropOut、DropConnect、DropBlock。</p></li></ul><h3 id="regularization-method">Regularization method</h3><ul><li><strong>DropOut</strong></li></ul><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201204232542.png" /></p><ul><li><strong>DropPath</strong></li></ul><h3 id="yolov4目标">YOLOv4目标</h3><p><strong>在输入网络分辨率，卷积层数，参数数之间找到最佳平衡。</strong></p><h3 id="yolov4框架">YOLOv4框架</h3><ul><li><strong>Backbone：CSPDarknet53</strong></li><li><strong>Neck：SPP，PAN</strong></li><li><strong>Head：YOLOv3</strong></li></ul><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201210205340.png" /></p><h3 id="yolov4技巧">YOLOv4技巧</h3><ul><li><strong>用于backbone的BoF：CutMix和Mosaic数据增强，DropBlock正则化，Class label smoothing</strong></li><li><strong>用于backbone的BoS：Mish激活函数，CSP，MiWRC</strong></li><li><strong>用于检测器的BoF：CIoU-loss，CmBN，DropBlock正则化，Mosaic数据增强，Self-Adversarial 训练，消除网格敏感性，对单个ground-truth使用多个anchor，Cosine annealing scheduler，最佳超参数，Random training shapes</strong></li><li><strong>用于检测器的BoS：Mish激活函数，SPP，SAM，PAN，DIoU-NMS</strong></li></ul><h3 id="bag-of-freebies">Bag-of-Freebies</h3><blockquote><p>什么叫Bag of freebies?字面上的意思就是免费赠品。在目标检测中是指:用一些比较有用的训练技巧来训练模型，从而使得模型取得更好的准确率但是不增加模型的复杂度，也就不增加推理(inference)是的计算量(cost)。在目标检测中，提到bag of freebies，首先 会想到的 就是Data augmentation。</p></blockquote><h4 id="mosaic-data-augmentation">Mosaic Data Augmentation</h4><figure><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snipaste_2020-11-27_10-21-09.jpg" alt="Snipaste_2020-11-27_10-21-09" /><figcaption aria-hidden="true">Snipaste_2020-11-27_10-21-09</figcaption></figure><p><strong>Why?</strong></p><ul><li>一次整合了4张图片，相较于只整合了两张的CutMix，这使得模型能够检测到更多的物体。</li><li>同时在计算BN的时候，一次相当于计算了四张，那么就减少了对大 batch-size的依赖。</li></ul><h4 id="自对抗训练sat">自对抗训练(SAT)</h4><blockquote><p>自我对抗训练（SAT）是一种新的数据增强技术，它分为两个前后两个阶段。在第一阶段，神经网络改变原始图像而不是网络权值。以这种方式，神经网络对自身进行对抗性攻击，改变原始图像，以制造图像上没有所需对象的欺骗。在第二阶段，训练神经网络以正常的方式检测修改后的图像上的目标。这个方法，是图像风格化的主要方法，让网络反向更新图像来风格化图像。</p></blockquote><figure><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snipaste_2020-11-28_20-35-42.jpg" alt="Snipaste_2020-11-28_20-35-42" /><figcaption aria-hidden="true">Snipaste_2020-11-28_20-35-42</figcaption></figure><p>使用对抗生成可以改善学习的决策边界中的薄弱环节，提高模型的鲁棒性。因此这种数据增强方式被越来越多的对象检测框架运用。</p><h4 id="dropblock正则化">DropBlock正则化</h4><blockquote><p>Dropout被广泛地用作全连接层的正则化技术，但是对于卷积层，通常不太有效。Dropout在卷积层不work的原因可能是由于卷积层的特征图中相邻位置元素在空间上共享语义信息，所以尽管某个单元被dropout掉，但与其相邻的元素依然可以保有该位置的语义信息，信息仍然可以在卷积网络中流通。因此，针对卷积网络，我们需要一种结构形式的dropout来正则化，即按块来丢弃。在本文中，我们引入DropBlock，这是一种结构化的Dropout形式，它将feature map相邻区域中的单元放在一起drop掉。大量实验表明，DropBlock在卷积网络的正则化中比dropout有更好的性能。</p></blockquote><figure><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201127114847.png" alt="20201127114847" /><figcaption aria-hidden="true">20201127114847</figcaption></figure><h4 id="class-label-smoothing类标签平滑">Class label smoothing(类标签平滑)</h4><blockquote><p>label smoothing也是一种正则化策略，一种在分类问题中，防止过拟合的方法，而且是分类问题中错误标注的一种解决方法。</p></blockquote><ul><li>公式 <span class="math display">\[q_{i}=\left\{\begin{array}{ll}1-\varepsilon &amp; \text { if } i=y \\\varepsilon /(K-1) &amp; \text { otherwise }\end{array}\right.\]</span></li></ul><p><span class="math display">\[\operatorname{Loss}_{i}=\left\{\begin{array}{l}(1-\varepsilon)^{*} \operatorname{Loss}, \text {if }(i=y) \\\varepsilon^{*} \operatorname{Loss}, \text {if }(i \neq y)\end{array}\right.\]</span></p><ul><li>例如二分类中</li></ul><p>假设我们的分类只有两个，一个是猫一个不是猫，分别用1和0表示。Label Smoothing的工作原理是对原来的[0 1]这种标注做一个改动，假设我们给定Label Smoothing的值为<span class="math inline">\(\varepsilon\)</span>为0.1： <span class="math display">\[[0,1] \times(1-0.1)+0.1 / 2=[0.05,0.95]\]</span> 可以看到，原来的<span class="math inline">\([0,1]\)</span>编码变成了<span class="math inline">\([0.05,0.95]\)</span>。</p><h3 id="bag-of-specials">Bag-of-Specials</h3><h4 id="activations-1">Activations</h4><h5 id="mish激活函数">Mish激活函数</h5><ul><li><p>函数表达式： <span class="math display">\[\begin{array}{c}f(x)=x * \tanh (\text {softplus}(x)) \\\text { 其中: } \tanh (x)=\left(e^{x}-e^{-x}\right) /\left(e^{x}+e^{-x}\right) \\\text { softplus }(x)=\log \left(1+e^{x}\right)\end{array}\]</span></p></li><li><p>pytorch代码实现</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> torch</span><br><span class="line"><span class="keyword">import</span> torch.nn <span class="keyword">as</span> nn</span><br><span class="line"><span class="keyword">import</span> torch.nn.functional <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mish</span>(<span class="params">nn.Module</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        print(<span class="string">&quot;Mish activation loaded...&quot;</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self,x</span>):</span></span><br><span class="line">        x = x * (torch.tanh(F.softplus(x)))</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line"></span><br><span class="line">mish = Mish()</span><br><span class="line">x = torch.linspace(-<span class="number">10</span>,<span class="number">10</span>,<span class="number">1000</span>)</span><br><span class="line">y = mish(x)</span><br><span class="line"> </span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p><strong>Why?</strong></p><ul><li>无上界：可以防止网络饱和也就是梯度消失。</li><li>有下界：提升网络的正则化效果。</li><li>平滑：首先在0值点连续相比ReLU可以减少一些不可预料的问题，其次可以使网络更容易优化并且提高泛化性能。</li><li>非单调：可以使一些小的负输入也被保留为负输出，提高网络的可解释能力和梯度流。</li></ul><h4 id="cross-stage-partial-connectionscsp">Cross stage partial connections(CSP)</h4><blockquote><p>为了提升精度，主干网络经常被设计的很深，一方面增强模型的表达力，另一方面增大了感受野，然后随着网络变深，训练难度也会随之增大，所以会在网络中加入一些 skip-connection。YOLOV4的主干网络采用的是CSPDarknet53，这里来简单梳理一下这个bakebone</p></blockquote><h5 id="dense-block">Dense Block</h5><p>自从<strong>resnet</strong>将残差概念带入到CNN之后，稠密连接已经被证实对于提升网络表达能力有效果。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201127175115.png" /></p><p>一个Dense Block可以包含多个卷积层，如上图所示的<span class="math inline">\(H_i\)</span>。每一个卷积层(Hi)中包括卷积层，BN层，ReLU等。除了输入层以外，其他的所有Block的输入都来自于前面所有的Block，所以这样特征图的数量就会变大，这个概念就被称为<strong>增长率(growth rate)</strong>。</p><p>在多个Dense Block之间加上卷积和池化之后，就可以组成Dense Net：</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201127175436.png" /></p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201127175453.png" /></p><p><strong><a href="https://arxiv.org/pdf/1911.11929.pdf">CSPNet</a></strong>将DenseBlock的输入特征图分成了两个部分，如下图所示：</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201127175739.png" /></p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201128205324.png" /></p><p>YOLOv4 使用了上面的 CSP 与下面的 Darknet-53 作为特征提取的骨干。</p><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201128205547.png" /></p><p>相比于基于 ResNet 的设计，CSPDarknet53 模型的目标检测准确度更高，不过 ResNet 的分类性能更好一些。但是，借助后文将讨论的 Mish 和其它技术，CSPDarknet53 的分类准确度可以得到提升。因此，YOLOv4 最终选择了 CSPDarknet53。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>感性与理性</title>
      <link href="/2020/10/27/%E6%84%9F%E6%80%A7%E4%B8%8E%E7%90%86%E6%80%A7/"/>
      <url>/2020/10/27/%E6%84%9F%E6%80%A7%E4%B8%8E%E7%90%86%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="理性">理性</h2><p>记录人类思维底层所依赖的逻辑推理方式：</p><ol type="1"><li>演绎法。</li><li>归纳法。</li><li>类比法。</li><li>证伪法。</li></ol><h2 id="感性">感性</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>《亲密关系》阅读笔记</title>
      <link href="/2020/08/01/%E3%80%8A%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/08/01/%E3%80%8A%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/digital-art-398342_1280.png" /></p><blockquote><p>“在最黑暗的那段人生，是我自己把自己拉出深渊。没有那个人，我就做那个人。” ——中岛美嘉</p></blockquote><a id="more"></a><h3 id="目录">目录</h3><ul><li>第一章 人际关系的构成</li><li>第二章 研究方法</li><li>第三章 吸引力</li><li>第四章 社会认知</li><li>第五章 沟通</li><li>第六章 相互依赖</li><li>第七章 友谊</li><li>第八章 爱情</li><li>第九章 性爱</li><li>第十章 压力与紧张</li><li>第十一章 冲突</li><li>第十二章 权力和暴力</li><li>第十三章 亲密关系的解体与消亡</li><li>第十四章 亲密关系的维持和修复</li></ul><h3 id="第一章-人际关系的构成"><font color=#0052ff> 第一章 人际关系的构成 </font></h3><ul><li>人类是非常<strong>社会化</strong>的动物。如果剥夺了和他人的紧密接触，这会令人很痛苦，人类社会属性的核心部分正是对亲密关系的需要。</li><li>亲密关系和泛泛之交存在六个方面差异：了解（knowledge）、关心（care）、相互依赖性（interdependence）、相互一致性（mutuality）、信任（trust）以及承诺（commitment）。</li><li>当人们长期处在极度孤独的状态时，会表现出强烈的紧张应激反应。</li><li>在全世界，那些结婚并维持婚姻的人一般比缺乏亲密关系的人更加幸福。</li><li>总的来说，草率同居原本用来测试伴侣能否和睦共处，却好像会损害人们对婚姻的积极态度和维持婚姻的决心，这种态度和决心是幸福婚姻的支柱。</li><li>西方文化更倡导个人主义，而东方文化更倡导集体主义。</li><li>安全型的人一般对自己和他人都有积极的看法，记忆中父母也是充满爱心、提供支持的人。相反，不安全类型的人认为他人不靠谱或者不能信任，记忆中的父母也是矛盾或冷漠的。</li><li>一次悲痛欲绝的分手会让原本安全型的人不再安全，一段如胶似漆的恋情也能慢慢让回避亲密的人不再怀疑和戒备亲密感情。</li><li>“性别差异”这种说法具有误导性，因为它只强调良性之间的差异性，而忽略相似性，这容易使人产生错误的认识。“男人来自地球，女人越来自地球，好好相处吧”</li><li>高自尊的人一般比低自尊的人活得更健康、更幸福，所以人们普遍认为自我感觉良好有益身心。</li><li>我们人类是高度社会化的动物：如果他人不喜欢我们，我们要喜欢自己非常困难。</li><li>低自尊的人有时低估伴侣对他们的爱，以致损害亲密关系，还觉知到根本就不存在的伴侣忽视。</li><li>自我评价低的人很难相信伴侣会真正深深地爱着自己，结果，他们往往都对持续的爱情不乐观。</li><li>高自尊的人因为对伴侣给自己的爱恋和关心充满信心，即使亲密关系出现困难也能和伴侣拉近距离。</li><li>信任是流动的过程而非静止不变的事物，它在你所有的人际关系中时起时落。</li></ul><h3 id="第二章-研究方法"><font color=#0052ff> 第二章 研究方法 </font></h3><ul><li>没有一项研究是完美的，各种不同的研究方法都是有价值的。</li><li>智慧需要时间的历练，但真理就在不远处，我们正不断地向它靠近。</li></ul><h3 id="第三章-吸引力"><font color=#0052ff> 第三章 吸引力 </font></h3><ul><li>临近：喜欢身边的人。一旦我们确定了居住、工作或上学的准确地点，我们大体上也就决定了哪些人将会成为我们生命中最重要的人。</li><li>在文字或声音中表达出的爱意远不如脸颊上真实的一吻那样打动人。</li><li>原本临近又便利的亲密关系如果因为距离变得疏远，这种伤害是任何人都难以预料的。</li><li>重复地接触他人（甚至只要看到他人照片）通常能增加我们对他们的喜欢程度，而不会导致厌烦，此即曝光效应。</li><li>我们倾向于认为外貌俊美的人更讨人喜欢，更好相处。</li><li>对美丽的偏见：“美的就是好的”。</li><li>然而我们并不会认为长相好看的陌生人十全十美，外貌越有吸引力的人我们越容易认为他们较放荡。</li><li>面容英俊的男性比面容丑陋的男性的精子更健康，更有活性。</li><li>现代男性普遍偏爱体型对称、娃娃脸面孔、腰腿比例低的女性，现代（受孕期内）女性普遍偏爱体型匀称、男子气、精力充沛的男性。</li><li>全世界的男性都比女性更为关注恋人的长相吸引力。</li><li>礼尚往来：喜欢那些喜欢我们的人。</li><li>相似性：喜欢与我们相像的人。</li><li>性格相似的人比性格不同的人婚姻更加幸福。</li><li>相异并不相吸。</li><li>障碍：得不到的就喜欢。</li><li>如果我们面临失去某种事物的危险时，我们可能反而想要得到更多。</li><li>罗密欧与朱丽叶效应：父母越是干涉子女的恋爱自由，他们彼此之间就会越加相爱。</li><li>大多数人都期望伴侣有以下的特点：热情和忠诚，值得信赖、亲切友善、给予支持、善解人意。吸引力和活力，长相俊美、性感、外向；社会地位和资源，经济宽裕，生活安心。</li><li>男女两性对短期性伙伴的要求，远不如长期伴侣的要求那么挑剔。</li><li>普通男性更喜欢没什么金钱、友善、漂亮的女子，而不是有钱但爱抱怨或温柔但丑陋的女子。</li><li>男人专注于长相，女人专注于资源，但人人似乎都期待伴侣友善、随和、可爱和亲切。</li></ul><h3 id="第四章-社会认知"><font color=#0052ff> 第四章 社会认知 </font></h3><ul><li>第一次与人短暂的谋面后，对别人所形成的印象深刻而持久，初期的认知在数月之后还影响着人们的判断。</li><li></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>R-CNN论文阅读笔记</title>
      <link href="/2020/07/28/R-CNN%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/07/28/R-CNN%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="大纲">大纲</h3><ol type="1"><li>什么是计算机视觉cv</li><li>应用范围</li><li>计算机视觉要解决哪些问题</li><li>近几年论文</li><li>本篇论文相较于以往提出哪些新的方法</li><li>R-CNN的流程</li><li>思考</li><li>疑问</li></ol><h3 id="什么是计算机视觉cv">什么是计算机视觉cv</h3><p>三个不同的教科书给出的定义：</p><ul><li><p>“the construction of explicit, meaningful descriptions of physical objects from images” (Ballard &amp; Brown, 1982)</p></li><li><p>“computing properties of the 3D world from one or more digital images” (Trucco &amp; Verri, 1998)</p></li><li><p>“to make useful decisions about real physical objects and scenes based on sensed images” (Sockman &amp; Shapiro, 2001)</p></li></ul><a id="more"></a><h3 id="应用范围">应用范围</h3><ul><li>人脸识别</li><li>图像检索</li><li>游戏和控制</li><li>监控</li><li>生物统计（指纹，虹膜，人脸匹配）</li><li>智能驾驶</li></ul><h3 id="近几年论文">近几年论文</h3><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200725143404.png" /> <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200728201516.png" /></p><h3 id="计算机视觉目前要解决哪些问题">计算机视觉目前要解决哪些问题</h3><ul><li>图像分类image classification</li><li>目标检测 object detection</li><li>语义分割 Semantic Segmentation</li><li>实例分割 Instance Segmentation</li><li>目标追踪 object tracking</li><li>姿态估计 Attitude estimation</li><li>等等 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200728194822.png" /></li></ul><h3 id="本篇论文相较于以往提出哪些新的方法">本篇论文相较于以往提出哪些新的方法</h3><ul><li>使用了CNN网络来提取特征，区别于传统从经验驱动的人造特征范式HOG、SIFT到数据驱动的表示学习范式，提高特征对样本的表示能力</li><li>采用大样本下有监督预训练+小样本微调的方式解决小样本难以训练甚至过拟合等问题。</li></ul><h3 id="r-cnn的流程">R-CNN的流程</h3><ul><li>输入一张多目标图像，采用selective search算法提取约2000个建议框。</li><li>先在每个建议框周围加上16个像素值为建议框像素平均值的边框，再直接变形为227×227的大小。</li><li>依次将每个227×227的建议框输入AlexNet CNN网络获取4096维的特征。</li><li>将2000×4096维特征与20个SVM组成的权值矩阵4096×20相乘，获得2000×20维矩阵表示每个建议框是某个物体类别的得分。</li><li>分别对上述2000×20维矩阵中每一列即每一类进行非极大值抑制剔除重叠建议框，得到该列即该类中得分最高的一些建议框。</li><li>分别用20个回归器对上述20个类别中剩余的建议框进行回归操作，最终得到每个类别的修正后的得分最高的bounding box。</li></ul><h3 id="思考">思考</h3><ol type="1"><li>信号分类的一个角度：时域、空域、频域</li><li>卷积：现实生活中，给定一个短时刺激，产生的影响往往持续一段时间。</li><li>卷积神经网络 不应该是卷积，应该是互相关 参考：《数字图像处理》</li><li>先用小的滤波器，再用大的滤波器，由小到大</li><li>时间域上卷积：系统（或者是滤波器）输入一个脉冲信号（刺激）后，系统将输出一个具有长时间输出的相应，而非短时（瞬时）输出。 空间域上卷积： 系统（数字滤波器或者核）输入一个脉冲信号（刺激）后，系统会在在某个空间域内做出相应，而非某一空间点上相应。</li><li>小卷积核识别出小视野的模型或者叫形状，把卷积后的图片叠加，形成更大的宏观图，然后在更大的图片上识别更宏观的形式，猜测：一个物体的真实标签即和微观的feature相关也和经过多次卷积运算后的feature也相关。</li><li>对于图像而言，离散卷积的计算过程是模板翻转，然后在原图像上滑动模板，把对应位置上的元素相乘后加起来，得到最终的结果。如果不考虑翻转，这个滑动-相乘-叠加的过程就是相关操作。事实上我也一直用相关来理解卷积。在时域内可以从两个角度来理解这样做的含义。一种是滤波，比如最简单的高斯模板，就是把模板内像素乘以不同的权值然后加起来作为模板的中心像素值，如果模板取值全为1，就是滑动平均；如果模板取值为高斯，就是加权滑动平均，权重是中间高，四周低，在频率上理解就是低通滤波器；如果模板取值为一些边缘检测的模板，结果就是模板左边的像素减右边的像素，或者右边的减左边的，得到的就是图像梯度，方向不同代表不同方向的边缘；另一种理解是投影，因为当前模板内部图像和模板的相乘累加操作就是图像局部patch和模板的内积操作，如果把patch和模板拉直，拉直的向量看成是向量空间中的向量，那么这个过程就是patch向模板方向上的投影，一幅图像和一个模板卷积，得到的结果就是图像各个patch在这个方向上的response map或者feature map；如果这样的模板有一组，我们可以把这一组看成一组基，得到的一组feature map就是原图像在这组基上的投影。常见的如用一组Garbor滤波器提取图像的特征，以及卷积神经网络中的第一层，图像在各个卷积核上的投影。 来自知乎https://www.zhihu.com/search?type=content&amp;q=%E5%9B%BE%E5%83%8F%E5%8D%B7%E7%A7%AF%E6%A0%B8 took的回答</li><li>https://qiyueliuhuo.github.io/2020/06/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/</li></ol><h3 id="疑问">疑问</h3><ol type="1"><li>现在计算机视觉方向cv是否需要花费大量时间去学习传统cv方向的知识和算法。</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>那些情话</title>
      <link href="/2020/07/28/%E9%82%A3%E4%BA%9B%E6%83%85%E8%AF%9D/"/>
      <url>/2020/07/28/%E9%82%A3%E4%BA%9B%E6%83%85%E8%AF%9D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul><li><p><font color=#7fccde> 我不是一个温柔的人，但是我为了你，可以做尽温柔的事。 </font></p></li><li><p><font color=#7fccde> 我当然爱你，没有让你感觉到，是我的不对。 </font></p></li><li><p><font color=#7fccde> 用爱这个词来形容我的感受太苍白了，我耐你，我中意你，我贼稀罕你。——《安妮•霍尔》 </font></p></li></ul><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/everton-vila-gS6mGS0SrNw-unsplash.jpg" /></p><ul><li><p><font color=#6698cb> 你说今晚的月亮很美，我嘴角上扬，眼睛还是没有看月亮。 </font></p></li><li><p><font color=#6698cb> 我看完所有的情话，都不及你对我笑。 </font></p></li><li><p><font color=#6698cb> 手我是有的，就是不知如何碰你。 </font></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SSH连接、远程上传下载文件</title>
      <link href="/2020/07/24/SSH%E8%BF%9E%E6%8E%A5%E3%80%81%E8%BF%9C%E7%A8%8B%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
      <url>/2020/07/24/SSH%E8%BF%9E%E6%8E%A5%E3%80%81%E8%BF%9C%E7%A8%8B%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><ul><li>ssh username@121.163.0.1 远程登陆121.163.0.1服务器</li><li>scp -r username@121.163.0.1:/home/username/remotefile.txt /home/username/ 将远程服务器上remotefile.txt文件拷贝到本机username目录下</li><li>scp -r localfile.txt username@192.168.0.1:/home/username/ 将本机上remotefile.txt文件拷贝到远程服务username目录下</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>碎碎念</title>
      <link href="/2020/07/20/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
      <url>/2020/07/20/%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/sunset-5455040_1920.jpg" /></p><p>我变成了以前自己讨厌的那一类人了┭┮﹏┭┮</p><p>2020.10.24 下午5:49</p><a id="more"></a><p>我和我的朋友一块丢了手机 我和我的朋友在打电话中... 我: 啊啊啊，我的手机被偷了，没在口袋也没在包里，等会再说啊，我先找一下我的手机 朋友：那你快找找，看看是不是落在什么地方了。咦，我的手机怎么也不在兜里，好像我的手机也丢了... 2020.12.21 下午5点 改编自b站评论</p><h4 id="成长">成长</h4><p>成长就是一次次丢掉幻想的过程。</p><h4 id="驾照">驾照</h4><p>科目三过了！！！！ 要拿到驾照了😁</p><p>2020.08.12</p><hr /><h4 id="考研">考研</h4><p>距离考研初试过去半年了。</p><p>从19年四五月份产生考研的想法，再加上公司里的mentor的读研建议和一些别的原因，总之，最后下定决心考研。想想从下定决定考研到拿到录取通知书，这中间经历了很多，尤其今年突然来到的疫情，让所有过程都变得更漫长。</p><h4 id="感情">感情</h4><p>真正的爱情是需要平等的，在两性关系中，它应该就像是一座天平，应该由双方共同努力去添加砝码保持平衡，而不是由一方用力去维护。 在这个世界上我们都只是沧海一粟，其实你我都一样，没有谁离不开谁的。</p><p>《致橡树》</p><pre><code>作者 舒婷</code></pre><p>我如果爱你——</p><p>绝不像攀援的凌霄花，</p><p>借你的高枝炫耀自己；</p><p>我如果爱你——</p><p>绝不学痴情的鸟儿，</p><p>为绿荫重复单调的歌曲；</p><p>也不止像泉源，</p><p>常年送来清凉的慰藉；</p><p>也不止像险峰，</p><p>增加你的高度，</p><p>衬托你的威仪。</p><p>甚至日光，</p><p>甚至春雨。</p><p>不，</p><p>这些都还不够！</p><p>我必须是你近旁的一株木棉，</p><p>作为树的形象和你站在一起。</p><p>根，</p><p>紧握在地下；</p><p>叶，</p><p>相触在云里。</p><p>每一阵风过，</p><p>我们都互相致意，</p><p>但没有人，</p><p>听懂我们的言语。</p><p>你有你的铜枝铁干，</p><p>像刀，</p><p>像剑，</p><p>也像戟；</p><p>我有我红硕的花朵，</p><p>像沉重的叹息，</p><p>又像英勇的火炬。</p><p>我们分担寒潮、</p><p>风雷、</p><p>霹雳；</p><p>我们共享雾霭、</p><p>流岚、</p><p>虹霓。</p><p>仿佛永远分离，</p><p>却又终身相依。</p><p>这才是伟大的爱情，</p><p>坚贞就在这里：</p><p>爱——</p><p>不仅爱你伟岸的身躯，</p><p>也爱你坚持的位置，</p><p>足下的土地。</p><p>高中时期接触到的诗，现在再读读，发现如此正确。</p><p>2020.08.11</p><hr /><h4 id="选择">选择</h4><p>一生中要面临许多选择，每一次的选择到底是对还是错，很难在做出选择时知道，或多或少每一次选择都有赌的成分，只能说在经过适当的考虑后，就要勇敢地做出选择。人是有主观能动性的，能够将自己的选择经过努力和长期坚持变成那个最好的选择，如果可以做到这样，当我们回首看看当初的选择时，我们会觉得自己当时的选择时是最好的，也是最幸运的。</p><p>成年后大多数选择中最大的成本就是时间成本，比如一个人应该选择什么样的行业；在哪个科研方向领域上深耕；选择什么样的伴侣，等等。时间成本不同于金钱等其他成本，当我们在网上看到自己较喜欢但是却比较昂贵的东西时，我们会犹豫到底买还是不买，在我们考虑了好几个星期而不做出决定时，我们的金钱还在自己的手上，并没有损失多少。然而，进入社会生活中，往往有很多重要的选择，这些选择是会付出巨大的时间成本（青春）。因此，时间成本有个特别不同于金钱成本的特点，就是时间成本经常会在你犹豫不决时慢慢损失掉。</p><p>生活中，常常有人去了解（羡慕）那些成功的人（马云？）是如何成功的。我想，决定一个人是否会取得较大成就取决于两个方面：一个是当前时代的趋势，有一句话叫“站在风口上猪也能飞起来”；另一个是个人努力，不论你处在什么行业当你是这个行业中的前5%，一定不会过得很差。一旦处在时代的趋势上，并且付出巨大的个人的努力，往往就有很大的可能性取得巨大成功，所谓“时势造英雄”，既要有时势，也要是个英雄。然而，取得像马云等那样的成功，这其中往往还加上更大的运气成分。毕竟，当互联网时代来临时，如果不是马云成功登上中国互联网的宝座时，也会其他一个叫马龙、李云之类的人登上宝座，那这就需要看这些人中那个人运气更加好了。</p><p>对于我过去人生中大多数选择，我还是感到比较幸运的，当中还有一些选择感到较为后悔，常常在想当初如果选择了另一个，那么会是什么样的结果，我想大多数人可能会在某一时刻想象一下如果当初做出不同的选择会有什么结果。</p><p>2020.08.10</p><hr /><h4 id="写作">写作</h4><p>现在变得特别想写一些东西，有些想法在脑子里还是很模糊，需要通过写作的方式整理思维。</p><p>2020.08.06</p><hr /><h4 id="博客">博客</h4><p>想写些东西又不知道写什么，一会想写这个，一会又想写那个。有一句话叫“当你真正去写作时，才会发现自己的思维有多么混乱”，大概就是我现在的状态吧。</p><h4 id="人性">人性</h4><p>看了关于杭州失踪女子的案件和b站一个关于网恋的故事（标题：网恋 不可取？通过知乎，我和北大小姐姐谈恋爱了！），深深感受到人性是多么复杂。</p><p>2020.07.24</p><hr /><h4 id="碎碎念">碎碎念</h4><p>黄金时代的我。</p><p>2020.07.20</p><hr />]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>机器学习之支持向量机</title>
      <link href="/2020/07/14/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/"/>
      <url>/2020/07/14/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20201203171952.png" /></p><h2 id="前言">前言</h2><p>支持向量机即Support Vector Machine，简称SVM。我最开始听说这个机器的时候，一头雾水，“支持”，“向量”，“机”，这三个词组合在一起让我在一开始觉得这个东西好抽象。首先，SVM实际上是一个二分类模型，也可以用来解决回归问题。了解过一些原理后，我觉得这种模型（方法）被称为Vector Support Machine更好一些，简单且不严谨的理解是这种模型通过某些向量（高维空间中的点）支持（支撑）而形成的一种机器，或者称之为模型。</p><p>引用<a href="https://blog.pluskid.org/">Free Mind</a>在介绍SVM中一句话：“SVM 一直被认为是效果最好的现成可用的分类算法之一（其实有很多人都相信，“之一”是可以去掉的）”。刚开始接触机器学习（大半年🤦‍♂️），目前没有做太多实践，并不清楚SVM的效果有多好，后面应该多了解些SVM的实际应用。</p><h2 id="支持向量机原理">支持向量机原理</h2><h2 id="现有的一些支持向量机软件包">现有的一些支持向量机软件包</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络之反向传播算法</title>
      <link href="/2020/06/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/"/>
      <url>/2020/06/13/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%B9%8B%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="前言">前言</h3><p>人工神经网络（Artificial Neural Network，ANN）是一门重要的机器学习技术。它是目前最为火热的研究方向--深度学习（Deep Learning）的基础。学习神经网络不仅可以让你掌握一门强大的机器学习方法，同时也可以更好地帮助你理解深度学习技术。</p><p>四年前，韩国围棋九段棋手李世石与谷歌人工智能 AlphaGo 之间的围棋比赛，最终 AlphaGo 以四比一取胜，这让人工智能 AlphaGo 背后的技术——深度学习算法大火，笔者也是从这个时候开始关注深度学习，对计算机领域产生了兴趣。此后一年，谷歌又推出 AlphaGo 围棋升级版，并邀请世界围棋冠军、中国棋手柯洁于 2017 年 5 月份与之进行围棋大战，笔者全程直播观看了 AlphaGo 与柯洁人机围棋大战，在看到作为人类智慧的顶峰柯洁含泪认输后，笔者被 AlphaGo 背后的技术神经网络所深深震撼（还包括另一种技术：蒙特卡洛树搜索）。围棋不同于其他棋，计算机目前无法遍历围棋的所有可能的下法，所以算法必须尝试模拟人类大脑的下棋，根据以往学习到的经验判断落棋点，而不是暴力遍历所有可能性后选择最佳的下棋点，从而取胜。</p><a id="more"></a><p>这篇文章试图介绍深度学习中很重要的技术——神经网络，并重点介绍神经网络中运用到反向传播算法。</p><blockquote><p>在笔者大学期间，除了两场围棋人机大战外，还有一场比较有意思的大型实验：大贝尔实验——关于验证基础物理量子力学中非常有名且重要的贝尔不等式的实验。所谓“遇事不决，量子力学”，这个梗就表示了量子力学中存在一些无法解释（宏观世界难以理解）的现象，若有兴趣可以再了解下。</p></blockquote><h3 id="感知机">感知机</h3><h4 id="感知机介绍">感知机介绍</h4><p>首先让我们先来了解下神经网络中最简单也是最基础的一种结构——感知机（Perceptron），如下图： <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Ncell.png" alt="感知机" /></p><p>研究者模拟生物神经网络中的一个简单的<strong>神经元</strong>的行为——神经元兴奋过程，与之对应的感知机基础概念被提出，这里我们可以把<strong>权重</strong>当作突触、把<strong>偏置</strong>当作阈值以及把<strong>激活函数</strong>当作细胞体，当经过突触的信号总和超过了某个阈值（偏置项），细胞体就会兴奋（激活函数），产生电脉冲（输出 1），而当信号量总和未超过阈值，不产生电脉冲（输出 0）。它可以被视为一种最简单形式的前馈神经网络，是一种二元线性分类器。感知机（单个神经元）代表了从输入空间到输出空间的如下函数： <span class="math display">\[ y = f(\sum_{i=1}^{n}w_ix_i + b) \]</span> 理想中的激活函数<span class="math inline">\(f(·)\)</span>是下图 a 所示的阶跃函数，输出“1”对应神经元兴奋，输出“0”对应神经元抑制，然而阶跃函数具有不连续、不光滑等不太好的数学性质，因此实际常用 Sigmoid 函数作为激活函数，如下图 b 所示，该函数将实域范围的输出挤压到（0，1）范围输出，也被称为“挤压函数”。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200614130934.png" alt="阶跃函数和Sigmoid函数" /> 对于<strong>感知机模型</strong>的<strong>理解</strong>：感知机模型的假设空间（容量）是定义在特征空间中的所有线性分类模型或线性分类器。感知机对应函数值为 0，即<span class="math inline">\(w·x + b = 0\)</span>，对应于特征空间<span class="math inline">\(R^n\)</span>中的一个超平面<span class="math inline">\(S\)</span>，其中<span class="math inline">\(w\)</span>是超平面的法向量，<span class="math inline">\(b\)</span>是超平面的截距，这个超平面将特征空间划分为两个部分，位于两部分空间中的点分别被分为正、负两类。</p><h4 id="感知机学习策略">感知机学习策略</h4><p>感知机学习以<strong>最小化</strong>误分类点到超平面<span class="math inline">\(S\)</span>的总距离为<strong>目标</strong>，因此感知机学习算法是<strong>误分类驱动</strong>的，具体使用时采用<strong>随机梯度下降法</strong>。 误分类点到超平面的总距离为 <span class="math display">\[ -\frac{1}{||w||}\sum_{x_i\in M}y_i(w·x_i + b) \]</span> 其中<span class="math inline">\((x_i, y_i)\)</span>为样本点，<span class="math inline">\(M\)</span>为误分类点的集合，对于误分类点来说<span class="math inline">\(-y_i(w·x_i + b) &gt; 0\)</span>成立，且当<span class="math inline">\((w·x_i + b) &gt; 0\)</span>时，<span class="math inline">\(y_i = -1\)</span>，当<span class="math inline">\((w·x_i + b) &lt; 0\)</span>时，<span class="math inline">\(y_i = +1\)</span>。 不考虑<span class="math inline">\(\frac{1}{||w||}\)</span>，就得到感知机学习的损失函数为 <span class="math display">\[ L(w, b) = -\sum_{x_i\in M}y_i(w·x_i + b) \]</span> 损失函数的梯度为 <span class="math display">\[ \nabla_w L(w, b) = - \sum_{x_i\in M}y_ix_i\]</span> <span class="math display">\[ \nabla_b L(w, b) = - \sum_{x_i\in M}y_i\]</span></p><p>采用随机梯度下降法，随机选取一个误分类点<span class="math inline">\((x_i, y_i)\)</span>，对<span class="math inline">\(w, b\)</span>进性更新： <span class="math display">\[ w \leftarrow w + \eta y_ix_i \]</span> <span class="math display">\[ b \leftarrow b + \eta y_i \]</span></p><p>具体推导过程及算法迭代过程参见李航《统计学习方法》，代码实现参见<a href="https://github.com/fengdu78/lihang-code/blob/master/%E7%AC%AC02%E7%AB%A0%20%E6%84%9F%E7%9F%A5%E6%9C%BA/2.Perceptron.ipynb">此 github</a>。</p><h4 id="感知机模型存在的问题">感知机模型存在的问题</h4><p>感知机的学习能力非常有限，与、或、非问题都是线性可分的，所以感知机可以处理，但是感知机却不能解决异或简单的非线性可分问题。 异或问题暴露出这样一个问题，即在现实任务中，原始样本空间内也许并不存在一个能正确划分两类样本的超平面，对于这样的问题，一种方法，<strong>1)</strong> 可将样本从原始空间<strong>映射</strong>到一个<strong>更高维</strong>的特征空间（或者不用更高维也可以），所谓的核函数<span class="math inline">\(\phi\)</span>，使得样本在这个特征空间内线性可分，幸运的是，如果原始空间是有限维，那么一定存在一个高维特征空间使得样本线性可分。<strong>2)</strong> 另一种方法，通过增加感知机的层数，使得形成一个神经网络，其中输入层神经元接受外界输入，隐层与输出层神经元对信号进行加工，最终结果由输出层神经元输出。（花书理解：深层神经网络中的隐藏层即代表输入经过了一个核函数<span class="math inline">\(\phi\)</span>变换，那么以上两种方式都是在寻找一个<strong>恰当的核函数<span class="math inline">\(\phi\)</span></strong>，神经网络的方式是通过网络自主学习学到恰当的核函数）</p><h3 id="神经网络">神经网络</h3><h4 id="神经网络介绍">神经网络介绍</h4><p>考虑到感知机模型存在的问题，即只能解决线性可分问题，我们将感知机进行连接，形成多层感知机——神经网络，如下图 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200625230159.png" alt="单隐层神经网络" /> 用矩阵形式表示神经网络运算过程，如下： 第一层加权和为 <span class="math display">\[ A^{(1)} = XW^{(1)} + B^{(1)} \]</span> 其中，<span class="math inline">\(X\)</span>为<span class="math inline">\(N\times2\)</span>大小矩阵，<span class="math inline">\(N\)</span>代表输入神经网络的数据有<span class="math inline">\(N\)</span>个样本，<span class="math inline">\(2\)</span>代表每个样本有两个特征值；<span class="math inline">\(W\)</span>为<span class="math inline">\(2\times3\)</span>大小的矩阵代表输入层到中间层的线性变换权重矩阵；<span class="math inline">\(B\)</span>为偏置项。 第一层激活后为 <span class="math display">\[ Z^{(1)} = sigmoid(A^{(1)}) \]</span> 其中 sigmoid 函数作用于<span class="math inline">\(A^{(1)}\)</span>中的每一个元素。将第一层的输出<span class="math inline">\(Z^{(1)}\)</span>作为第二层的输入，同理得： <span class="math display">\[ A^{(2)} = Z^{(1)}W^{(2)} + B^{(2)} \]</span> <strong>注意：</strong> 因为单隐层神经网络只经过两层传播，那么第二层的输出就是网络的输出，这里一般（1）回归问题使用恒等函数作为激活函数，（2）分类问题可以使用 softmax 函数。我们把此神经网络看作是分类采用 softmax 函数： <span class="math display">\[ y_k = \frac{exp(a_k)}{\sum_{i=1}^{n}exp(a_i)} \]</span> 那么神经网络的输出为 <span class="math display">\[ Y = softmax(A^{(2)}) \]</span> 其中<span class="math inline">\(Y\)</span>为<span class="math inline">\(N\times2\)</span>矩阵，形如：</p><p><span class="math display">\[\left[    \begin{array}{ccc}        0.2650877&amp; 0.7349123\\\\        \vdots &amp; \vdots\\\\        0.8987211 &amp; 0.1012788\\\\    \end{array}\right]\]</span></p><p>代表第一个样本预测为第二个分类概率为 0.7349123，大于 0.5，可以认为预测为第二个分类；最后一个样本预测为第一个分类概率为 0.8987211，可以认为预测为第一个分类。（当然只有两个样本的情况下一般看作正类和负类，只需要一个输出神经元，使用 sigmoid 函数激活即可。）该模型使用 softmax 函数作为激活函数，可以推广到多分类情况下。</p><h4 id="神经网络学习策略">神经网络学习策略</h4><p>神经网络的学习中使用的指标为<strong>损失函数（loss function）</strong>，即以最小化损失函数为目标，理论上，损失函数可以使用任意函数，但实际中一般用<strong>均方误差</strong>和<strong>交叉熵误差</strong>等。 均方误差为 <span class="math display">\[ E = \frac{1}{2}\sum_{k}(y_k - t_k)^2 \]</span> 交叉熵误差为 <span class="math display">\[ E = -\sum_{k}t_k\log_ey_k \]</span> 其中<span class="math inline">\(y_k\)</span>表示神经网络的输出，<span class="math inline">\(t_k\)</span>表示监督数据，k 表示数据的维度，如在手写数字识别例子中，<span class="math inline">\(y_k\)</span>、<span class="math inline">\(t_k\)</span>如下 10 个元素构成的数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y = [<span class="number">0.1</span>, <span class="number">0.05</span>, <span class="number">0.6</span>, <span class="number">0.0</span>, <span class="number">0.05</span>, <span class="number">0.1</span>, <span class="number">0.0</span>, <span class="number">0.1</span>, <span class="number">0.0</span>, <span class="number">0.0</span>]</span><br><span class="line">t = [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><p>在批量样本学习中，可以将对所有的样本的单个误差求和，然后再除以样本数 N，求得单个数据的“平均损失函数”，将它作为<strong>损失函数</strong>。 神经网络学习的策略和感知机学习策略都是一个最优化问题，神经网络学习中也是采用<strong>随机梯度下降法</strong>，与感知机学习策略更新参数类似，对于神经网络任意参数（线性权重、线性偏置等需要学习参数）更新估计式如下 <span class="math display">\[ v \leftarrow v + \Delta v \]</span> 更新参数为<strong>线性连接权重参数</strong>时 <span class="math display">\[ w_{hj} \leftarrow w_{hj} + \Delta w_{hj} \]</span> 采用梯度下降法，有 <span class="math display">\[ w_{hj} \leftarrow w_{hj} - \eta  \frac{\partial E}{\partial w_{hj}} \]</span> 对于梯度求解，一般有<strong>解析法</strong>和<strong>数值法</strong>两种方法，随着神经网络神经元增加和层数增加，直接求上万，甚至上亿个参数的解析导数变得不现实，计算量非常大。下面将介绍两种数值方式计算梯度方法：<strong>导数定义法和反向传播法</strong>。</p><h3 id="梯度计算">梯度计算</h3><p>梯度在直角坐标系下计算公式为 <span class="math display">\[ \nabla f(x) = (\frac{\partial f(x)}{\partial x_1}, \frac{\partial f(x)}{\partial x_2}, ...) \]</span> 梯度计算的结果是一个向量，并且可以看到计算梯度需要求函数对于各个自变量的偏导数。 对于多元函数，偏导表示自变量某个瞬间的变化量。定义为如下： <span class="math display">\[ \frac{\partial f(x_1, x_2, x_3...x_i...)}{\partial x_i}  = \lim_{h \to 0} \frac{f(x_1, x_2, x_3...x_i + h, ...)}{h} \]</span> 偏导的定义和导数的定义类似，表示自变量上“微小的变化”将导致函数<span class="math inline">\(f(x)\)</span>的值在多大程度上发生变化。我们可以直接用程序实现上面的计算方式，程序中无法表示 h 趋近 0，我们使用一个微小值代替，计算近似解。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数值梯度</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">numerical_gradient</span>(<span class="params">f, x</span>):</span></span><br><span class="line">    h = <span class="number">1e-4</span> <span class="comment"># 0.0001</span></span><br><span class="line">    grad = np.zeros_like(x)  <span class="comment"># 生成和x形状相同的数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(x.size):</span><br><span class="line">        tmp_val = x[idx]</span><br><span class="line">        <span class="comment"># 计算f(x+h)</span></span><br><span class="line">        x[idx] = tmp_val + h</span><br><span class="line">        fxh1 = f(x)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算f(x-h)</span></span><br><span class="line">        x[idx] = tmp_val - h</span><br><span class="line">        fxh2 = f(x)</span><br><span class="line"></span><br><span class="line">        grad[idx] = (fxh1 - fxh2) / (<span class="number">2</span>*h)</span><br><span class="line">        x[idx] = tmp_val <span class="comment"># 还原x的值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> grad</span><br></pre></td></tr></table></figure><p>上面程序实现的偏导数方式和上面公式稍有不同，使用中心差分，误差比<strong>前向差分</strong>小，学过微积分的同学应该能够明白。虽然上面求偏导数看着很方便很简单，但是根据上面的方式计算梯度在面对神经网络这种具有很大规模输入和很大规模参数时，计算效率相当慢。下面将重点介绍反向传播算法计算梯度。（介绍完反向传播算法后，还会再介绍两者求解方式差异，为什么上面方式求解梯度速度在神经网络应用上效率太慢）</p><h3 id="计算图">计算图</h3><p>为了更精确地描述反向传播算法，我们使用计算图（computational graph）语言来描述一系列操作。《深度学习》花书和斯坦福李飞飞 cs231n 课程对于计算图表示上有些区别，但都表示同一个含义，即用图的方式形式化地将操作次序表示出来，方便理解。这里我们介绍 cs231n 课程对于计算图的画法。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/simple_compute_graph.png" alt="简单计算图示例" /> 使用圆圈代表操作节点，指向节点的箭头代表输入变量，从节点指出的箭头代表操作完后输出的变量。上面计算图即表示了<span class="math inline">\(f(x,y,z) = (x + y)z\)</span>。</p><h3 id="反向传播算法">反向传播算法</h3><h4 id="简单标量反向传播算法">简单标量反向传播算法</h4><p>上面计算图真实值计算线路展示了计算的视觉化过程。前向传播从输入计算到输出（绿色），反向传播从尾部开始，根据链式法则递归地向前计算梯度（显示为红色），一直到网络的输入端。可以认为，梯度是从计算链路中回流。 如上图计算过程，可以用下面几个中间过程合成： <span class="math display">\[ q = x + y \]</span> <span class="math display">\[ f = q \times z \]</span> 在输入<span class="math inline">\(x = -2, y = 5, z = -4\)</span>情况下，箭头下面红色数字代表 f 对该处变量的偏导，即 <span class="math display">\[ \frac{\partial f}{\partial f} = 1 \]</span> <span class="math display">\[ \frac{\partial f}{\partial q} = \frac{\partial (q \times z)}{\partial q} = z\vert_{z=-4}=-4 \]</span> <span class="math display">\[ \frac{\partial f}{\partial z} = \frac{\partial (q \times z)}{\partial z} = q\vert_{q=3}=3 \]</span> 根据求导的链式法则得 <span class="math display">\[ \frac{\partial f}{\partial x} = \frac{\partial f}{\partial q}\frac{\partial q}{\partial x}=1 \cdot (-4) \cdot 1 = -4 \]</span> <span class="math display">\[ \frac{\partial f}{\partial y} = \frac{\partial f}{\partial q}\frac{\partial q}{\partial y}=1 \cdot (-4) \cdot 1 = -4 \]</span> 结合上面计算图和求导的链式法则可以有以下结论： “<span class="math inline">\(输出结果对某一变量的偏导 = 反向传播时上游传递下来的偏导数 \times 本地偏导数（该变量输入的计算节点偏导数）\)</span>” 下面介绍稍微复杂的计算图，如下图。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/compute_graph.png" alt="计算图" /> 利用上面得到的结论就可以得到每个遍历的偏导数，这个计算图和上面计算图区别之处在于：在乘法节点的结果输出到两个节点，分别是除法节点和减法节点，导数反向传播时，需要将上游传递的两个导数相加，即-0.25 + 1 = 0.75 这是基于下面的定理：</p><blockquote><p>定理：若函数<span class="math inline">\(u=\varphi(t), v=\psi(t)\)</span>在点 t 可导，<span class="math inline">\(z=f(u,v)\)</span>在点(u,v)处偏导连续，则复合函数<span class="math inline">\(z=f(\varphi(t),\psi(t))\)</span>在点 t 可导，则有链式法则 <span class="math display">\[ \frac{\mathrm{d} z }{\mathrm{d} t} = \frac{\partial z}{\partial u} \cdot \frac{\mathrm{d} u }{\mathrm{d} t} + \frac{\partial z}{\partial v} \cdot \frac{\mathrm{d} v }{\mathrm{d} t} \]</span></p></blockquote><h4 id="矩阵形式反向传播算法">矩阵形式反向传播算法</h4><p>下面介绍矩阵形式计算图及反向传播公式，如下图神经网络 Affine 层。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200628140209.png" alt="Affine层" /></p><blockquote><p>Affine 层：神经网络在正向传播中进行的矩阵的乘积运算在几何学领域被称为“仿射变换”。因此，这里将进行的仿射变换的处理称为“Affine 层”。</p></blockquote><p>神经网络中还有其他比较复杂的层，梯度推导比上面 Affine 层线性偏导数推导更为复杂，在此略过介绍及推导，但运用到的知识与上面方式类似，强烈建议自己手动推导下 Affine 层反向传播，对自己理解有帮助。</p><p>前面介绍神经网络学习策略也是一个最优化问题，即 <span class="math display">\[ loss \ function = E = \varphi(y, t) \]</span> 损失函数/目标函数为预测值<span class="math inline">\(y\)</span>和监督数据<span class="math inline">\(t\)</span>的函数，其中<span class="math inline">\(y\)</span>是经过神经网络正向传播得到的预测值，所以<span class="math inline">\(y\)</span>是神经网络所有参数<span class="math inline">\(W\)</span>的函数，那么目标函数是关于参数<span class="math inline">\(W\)</span>的函数（凸函数），即 <span class="math display">\[ loss \ function = \psi(\textbf{W}) \]</span> 根据梯度下降法，需要求得 <span class="math display">\[ \frac{\partial L}{\partial \textbf{W}} \]</span> 这里的<span class="math inline">\(L\)</span>表示<span class="math inline">\(loss function\)</span>，也即是<span class="math inline">\(E\)</span>。根据上面的神经网络反向传播算法逐层传播梯度，即可以高效地求解损失函数对参数的梯度，再根据随机梯度下降法，不断更新权重参数<span class="math inline">\(W\)</span>，最小化目标函数，完成简单神经网络的训练学习。</p><h3 id="反向传播算法特别之处">反向传播算法特别之处</h3><p>现代的神经网络规模和层数不断增加，一个复杂的深度学习模型，可能每一层有成百量级神经元，有上百层深度，下图显示一个较复杂的神经网络。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snipaste_2020-06-28_15-24-37.png" alt="深层神经网络" /> 如果采用导数定义方式，即<span class="math inline">\(\frac{\partial L(w)}{\partial w} = \lim_{w \to 0} \frac{f(w + h)}{w}\)</span>求解，那么在求解每一个权重（即一条连接边）参数的偏导数时神经网络都需要向前传递一次，可以看到因为越靠后的神经元被重复计算的次数就越多，随着神经元个数和层数的增加，这将会是个<strong>指数增加</strong>的<strong>时间复杂度</strong>。然而，利用了函数求导的链式法则，从输出层到输入层逐层计算模型参数的梯度值，可以看到按照这个方向计算梯度，各个神经单元只计算了一次，没有重复计算。这个计算方向能够高效的根本原因是：在计算梯度时前面的单元是依赖后面的单元的计算，而“从后向前”的计算顺序正好“解耦”了这种依赖关系，先算后面的单元，并且<strong>记住后面单元的梯度值</strong>，计算前面单元的梯度时就可以充分利用已经计算出来的结果，避免了重复计算。</p><h3 id="总结与思考">总结与思考</h3><p>如今人工智能领域中最重要的算法——反向传播算法其主要思想本质也是利用了<strong>动态规划</strong>，这种方法结合了<strong>解析法</strong>计算梯度和<strong>数值法</strong>计算梯度，利用空间换取时间，缩短求解大量参数梯度的时间，从而加速神经网络的训练。反向传播算法看上去高大上，但也不见得是用了多高级的方法和高深的知识。</p><p>参考资料： <a href="https://zh.wikipedia.org/wiki/%E6%84%9F%E7%9F%A5%E5%99%A8" class="uri">https://zh.wikipedia.org/wiki/%E6%84%9F%E7%9F%A5%E5%99%A8</a> <a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C" class="uri">https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C</a> <a href="https://www.cnblogs.com/subconscious/p/5058741.html" class="uri">https://www.cnblogs.com/subconscious/p/5058741.html</a> 《Deep Learning form Scratch》 《深度学习》 周志华《机器学习》 《深度学习[花书]》 李航《统计学习方法》</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我使用的 macOS 应用</title>
      <link href="/2020/05/31/%E6%88%91%E4%BD%BF%E7%94%A8%E7%9A%84-macOS-%E5%BA%94%E7%94%A8/"/>
      <url>/2020/05/31/%E6%88%91%E4%BD%BF%E7%94%A8%E7%9A%84-macOS-%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/office-581131_1280.jpg" /></p><p>使用macbook pro已经有三年了，不得不说mac下的很多功能和操作都非常方便。下面列举下我在macOS上常使用到的软件，整理下，也借这个机会给刚开始接触macOS的朋友一个参考。 <a id="more"></a></p><h3 id="microsoft-edge">Microsoft Edge</h3><p>目前的主力游览器。微软基于Chromium开源项目开发的一款游览器，非常好用，我觉得可以媲美Google Chrome了，基本上从Chrome游览器换成Edge不会觉得不习惯，而且微软的UI设计很简约，看着很舒服，目前（2020.05.31）更新频率挺高，加入很多功能也挺喜欢的，值得下载并跟着更新体验体验。值得一说的是，edge游览器可以在国内不用科学上网就可以登录，包括应用商店、书签同步等，这样在不同设备上不用翻墙就可以同步了，还是挺方便的。</p><h3 id="google-chrome">Google Chrome</h3><p>以前常用的游览器，不多说，开发几乎都在用。</p><h3 id="visual-studio-code">Visual Studio Code</h3><p>一款轻量化、简洁、好看、跨平台、免费的编辑器。同时支持Windows 、 Linux和macOS等操作系统且开放源代码的代码编辑器，它支持测试，并内置了Git版本控制功能，同时也具有开发环境功能，例如代码补全、代码片段和代码重构等，可以说是微软的良心之作。 我用它来写博客，非常方便、舒服。</p><h3 id="bitwarden密码管理器">Bitwarden密码管理器</h3><p>妈妈再也不用担心我记不住密码啦~~ 灰常好用的密码管理工具，可以让我们大脑不用记住那么多密码了。</p><h3 id="picgo">PicGo</h3><p>一个用于快速上传图片并获取图片URL链接的工具。</p><h3 id="bob">Bob</h3><p>桌面翻译工具。</p><h3 id="snipaste">Snipaste</h3><p>小巧而且功能强大的截图工具，不仅可以快速截图，还集成了标注和贴图功能。</p><h3 id="xmind">Xmind</h3><p>思维导图，帮助我们更好更轻松梳理阅读或者大脑的思路。</p><h3 id="typora">typora</h3><p>好用简洁的markdown工具。</p><h3 id="wiresshark">WiresShark</h3><p>一个强大的网络封包分析软件。</p><h3 id="intellij-idea">IntelliJ IDEA</h3><p>JetBrains为java开发者打造最高效智能的java IDE开发工具，IntelliJ在业界被公认为最好的java开发工具。</p><h3 id="clion">Clion</h3><p>JetBrains 推出的全新的 C/C++ 跨平台集成开发环境。</p><h3 id="postman">Postman</h3><p>一款简单实用的接口测试工具。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>科学上网:谷歌免费云服务器Google Cloud 搭建v2ray服务器详细教程</title>
      <link href="/2020/05/02/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-%E8%B0%B7%E6%AD%8C%E5%85%8D%E8%B4%B9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8Google-Cloud-%E6%90%AD%E5%BB%BAv2ray%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
      <url>/2020/05/02/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-%E8%B0%B7%E6%AD%8C%E5%85%8D%E8%B4%B9%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8Google-Cloud-%E6%90%AD%E5%BB%BAv2ray%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="你需要准备">你需要准备</h3><ul><li>一台可以翻墙的电脑。（需要的流量并不多，推荐蓝灯，目前2020.05.02还能用，速度也可以）</li><li>一张全币种信用卡，谷歌云注册的时候，会从你的信用卡收取一美金证明你不是机器人。（推荐招行信用卡）</li><li>linux系统命令行基础知识。 <a id="more"></a></li></ul><hr /><h3 id="vpnv2raybbr介绍可以跳过">vpn、v2ray、bbr介绍（可以跳过）</h3><h4 id="vpn介绍">vpn介绍</h4><blockquote><p>虚拟私人网络（英语：Virtual Private Network，缩写：VPN）是一种常用于连接中、大型企业或团体与团体间的私人网络的通讯方法。它利用隧道协议（Tunneling Protocol）来达到发送端认证、消息保密与准确性等功能。 来自 <a href="https://zh.wikipedia.org/wiki/%E8%99%9B%E6%93%AC%E7%A7%81%E4%BA%BA%E7%B6%B2%E8%B7%AF">维基百科-vpn</a></p></blockquote><h4 id="v2ray介绍">v2ray介绍</h4><blockquote><p>v2ry是一款非常优秀的跨境上网工具，性能更好，支持多协议，传输层支持TCP、mKCP、WebSocket等， v2ry 的节点可以伪装成正常的网站，将其流量与正常的网页流量混淆，以避开第三方干扰，所以具有更强的隐蔽性，从而实现稳如狗的跨境上网体验，再也不用担心被封ip了。</p></blockquote><h4 id="bbr介绍">bbr介绍</h4><blockquote><p>TCP使用多种拥塞控制策略来避免雪崩式拥塞。TCP会为每条连接维护一个“拥塞窗口”来限制可能在端对端间传输的未确认分组总数量。这类似TCP流量控制机制中使用的滑动窗口。TCP在一个连接初始化或超时后使用一种“慢启动”机制来增加拥塞窗口的大小。TCP BBR（Bottleneck Bandwidth and Round-trip propagation time）是由Google设计，于2016年发布的拥塞算法。以往大部分拥塞算法是基于丢包来作为降低传输速率的信号，而BBR则基于模型主动探测。 来自 <a href="https://zh.wikipedia.org/wiki/TCP%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6#TCP_BBR">维基百科-TCP拥塞控制</a></p></blockquote><h4 id="ssh介绍">ssh介绍</h4><blockquote><p>Secure Shell（安全外壳协议，简称SSH）是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境[1]。SSH通过在网络中创建安全隧道来实现SSH客户端与服务器之间的连接[2]。虽然任何网络服务都可以通过SSH实现安全传输，SSH最常见的用途是远程登录系统，人们通常利用SSH来传输命令行界面和远程执行命令。SSH以非对称加密实现身份验证。来自<a href="https://zh.wikipedia.org/wiki/Secure_Shell">维基百科-Secure Shell</a></p></blockquote><hr /><h3 id="申请免费云">申请免费云</h3><ol type="1"><li>找个<strong>临时科学上网</strong>的工具，保证可以使用三小时，尽量选择稳定一些，推荐<a href="https://github.com/getlantern/lantern">github-lantern</a>，蓝灯可以给用户免费流量和时长，并且不用注册就可以使用。</li><li>申请google账号。小米手机在应用商店下载<strong>谷歌安装器</strong>，安装器会自动下载google框架，比较方便，注册google账号。(笔者一开始用电脑注册谷歌账号，但是谷歌需要手机号来验证，试了三个手机号都显示已经使用过了，没法通过验证。根据v友提示，使用带<strong>Google框架的Android机注册</strong>，可以成功。)</li><li>使用可以科学上网的电脑，登陆<a href="https://console.cloud.google.com/">谷歌云</a>，点击<strong>免费试用</strong>。</li><li>可以看看google新账号获得300赠金并且在你没有升级账号前是不会收取其他费用的。 <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snip20200505_1.png" alt="免费声明" /></li><li>选择<strong>国家/地区</strong>，这里google已经不在提供china选项了，所以国内的支付方式已经没办法使用了，这也是为什么需要准备一张全币信用卡的原因，这里选择<strong>美国</strong>。（截止2020.05.05双币信用卡也不能使用了）<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snip20200505_2.png" alt="免费试用第一步" /></li><li>填写个人信息，这里因为之前选择的地区是美国，所以要填写<strong>美国地址</strong>，可以使用这个<a href="http://www.shenfendaquan.com/">工具</a>生成虚拟美国地址。添加全币信用卡，信用卡验证码为信用卡背面最后三位。<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/Snipaste_2020-05-05_20-56-00.png" alt="免费试用第二步" /></li><li>如果成功确认后，可以看到下面的提示：<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505231521.png" alt="免费试用确认成功" /></li></ol><h3 id="申请虚拟机vps">申请虚拟机vps</h3><ol type="1"><li>按照下图进入虚拟机实例界面，点击<strong>创建</strong>：<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505232148.png" alt="创建实例第一步" /> <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505232413.png" alt="创建实例第二步" /></li><li>实例名默认就行，选择<strong>台湾节点</strong>（根据测试台湾节点速度比较快些），选择<strong>最小内存</strong>（图中不是最小内存）就够了，google虚拟机流量单独收费，300￥中需要有相当一部分用作购买流量。<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505232645.png" alt="实例配置一" /> <img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505233341.png" alt="实例配置二" /></li><li>配置<strong>静态ip</strong>，静态ip在创建实例时可以配置或者实例创建完后配置，如下图：<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505233506.png" alt="静态ip配置一" /> 进入外部ip列表，<strong>类型</strong>如果是临时ip会有选项选择<strong>静态</strong>。<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505233956.png" alt="静态ip配置二" /></li><li>配置<strong>防火墙规则</strong>，配置如下图两条规则，<strong>注意：</strong>ip范围为：0.0.0.0/0。<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200505234534.png" alt="配置防火墙规则" /></li><li><strong>重要！重要！重要！</strong> 注意：申请完静态ip，并且成功绑定到实例上后，过上大概三五分钟，测试下ip地址是否可用，这个可用指的是有没有被封掉，通过ping能否成功可以检测，推荐<a href="http://ping.pe/">ping工具</a>进行检测（可能需要科学上网才可以进）。如果全报红，过一段时间再测试，可能刚绑定到实例上不稳定；如果显示中国地区无法ping通，则很可能被封掉了。</li><li><strong>重要！！！</strong> 如果静态ip被封掉，可以根据申请虚拟机的1-5步骤重新申请虚拟机绑定静态ip，一定要让申请到的静态ip可以使用。最后将不需要的虚拟机实例删掉就好。</li></ol><h3 id="ssh远程登陆">ssh远程登陆</h3><ol type="1"><li>先使用google提供的<strong>游览器ssh</strong>登陆，如下图：<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200506095444.png" alt="游览器ssh登陆" /></li><li>找到本机ssh的<strong>公钥</strong>复制，即将下面打码的长字符串部分复制：<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200506095820.png" alt="复制本机公钥" /></li><li>编辑vps上的<strong>authorized_keys</strong>，将上面复制的公钥添加到里面。<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200506100256.png" alt="配置vps公钥" /></li><li>正确保存后，本机就可以直接使用ssh登陆了，非常方便不需要输入密码，如下图：<img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/20200506100823.png" alt="远程登陆" /></li></ol><h3 id="注册域名">注册域名</h3><p>用v2ray的节点伪装正常的网站，所以需要有域名了，不过这个域名随便注册一个即可，有域名可以直接使用已有的，建议在<a href="https://www.namesilo.com/">namesilo</a>购买，不需要实名认证。 注册域名略过，不同网站注册域名大同小异，<strong>记着一定要将域名解析到申请的虚拟机的静态ip</strong>。</p><h3 id="v2ray部署">v2ray部署</h3><p>使用一键安装脚本安装v2ray</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh) | tee v2ray_ins.log</span><br></pre></td></tr></table></figure><p>安装过程及客户端安装参考<a href="https://www.ectrv.com/?p=153">此教程</a></p><h3 id="bbr加速">bbr加速</h3><p>仅仅安装v2ray，跨境上网的速度并不快，比如看youtube视频会卡，所以请务必再安装谷歌开发的<strong>加速器BBR</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 下载bbr安装脚本</span></span><br><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将脚本变成可执行</span></span><br><span class="line">chmod +x bbr.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行脚本</span></span><br><span class="line">./bbr.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看bbr是否安装成功</span></span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><h3 id="总结">总结</h3><p>将v2ray部署完成后并且将其中的url链接导入到v2ray客户端，连接就可以使用了。速度还可以，看看视频，游览网页完全可以满足。将客户端设置成PAC模式，可以判断访问外网还是国内网站，智能分流。</p><p>友情链接：<a href="https://dlj.tf/fvS3In">付费机场推荐</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> 谷歌 </tag>
            
            <tag> 云服务器 </tag>
            
            <tag> 外网 </tag>
            
            <tag> 免费 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo编辑实时游览器显示插件browsersync</title>
      <link href="/2020/04/04/hexo%E7%BC%96%E8%BE%91%E5%AE%9E%E6%97%B6%E6%B8%B8%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BA%E6%8F%92%E4%BB%B6browsersync/"/>
      <url>/2020/04/04/hexo%E7%BC%96%E8%BE%91%E5%AE%9E%E6%97%B6%E6%B8%B8%E8%A7%88%E5%99%A8%E6%98%BE%E7%A4%BA%E6%8F%92%E4%BB%B6browsersync/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>用VScode编辑文章虽然很方便，但是VScode里面自带的实时显示文章（所谓的所见即所得）总觉得不怎么好看，想起来之前在公司里面偶尔修改些前端代码，好像有办法实时显示修改。现在前端开发有很多好用的工具，可以一边修改代码一边运行，实时显示在游览器。于是，网上搜索了下就找到这个插件，非常好用。 <a id="more"></a></p><h3 id="browsersync介绍及作用">browsersync介绍及作用</h3><p>browsersync能让浏览器实时、快速响应您的文件更改（html、js、css、sass、less等）并自动刷新页面。更重要的是Browsersync可以同时在PC、平板、手机等设备下进项调试。官网 <a href="http://www.browsersync.cn/">browsersync</a>，省时的浏览器同步测试工具，确实很方便很强大。</p><h3 id="如何在-hexo-中使用-browsersync">如何在 Hexo 中使用 browsersync</h3><p>我是在VScode中编辑文章，安装browsersync直接在任何一个命令行中运行以下：</p><ul><li>第一步<ul><li>打开 cmd 或 git 切换到你的 blog 主目录下</li></ul></li><li>第二步<ul><li>执行 $ npm install hexo-browsersync --save</li></ul></li><li>第三步<ul><li>执行 $ hexo server</li></ul></li><li>第四步<ul><li>访问 <a href="http://localhost:4000/" class="uri">http://localhost:4000/</a> ,开始编写你的代码或文档</li></ul></li></ul><p>执行完上述步骤,你可以一边编写源文档,一边查看编译后的文档</p><p>当你编写并调试完后，关闭 <a href="http://localhost:4000/" class="uri">http://localhost:4000/</a> 之后,还需要执行 $ hexo deploy --generate,刷新你的博客页面,这样你的文章就上传了。</p><p>参考： <a href="https://www.dazhuanlan.com/2019/12/26/5e04219a60b20/" class="uri">https://www.dazhuanlan.com/2019/12/26/5e04219a60b20/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《人性的弱点》笔记</title>
      <link href="/2019/05/19/%E3%80%8A%E4%BA%BA%E6%80%A7%E7%9A%84%E5%BC%B1%E7%82%B9%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/05/19/%E3%80%8A%E4%BA%BA%E6%80%A7%E7%9A%84%E5%BC%B1%E7%82%B9%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/children-5411350_1280.jpg" /></p><h3 id="第一章-待人处世的基本技巧"><font color=#0052ff> 第一章 待人处世的基本技巧 </font></h3><blockquote><p>只有那些不够明智的人才会去批评、职责和抱怨他人。的确，很多蠢人都这么做。与其抱怨、责备，不如多一些理解，设身处地地为他们想想，为什么他们会这么做，这样做比批评更加有益，而且这样，就会使我们产生同情、容忍、仁慈之心。</p></blockquote><a id="more"></a><ul><li>无端指责别人并不能解决问题</li><li>批评是徒劳的，因为它会使人过于保守，并常使他竭力的证明自己。批评也是危险的，因为它伤害一个人宝贵的自尊心，伤害他的自重感，并激起他的反抗。</li><li>人类的天性就是如此，做错事的人只会责备别人而不会责备自己。</li><li>我们要明白批评就好像是家鸽，它们总会飞回家。我们应该明白我们要矫正及谴责的人都会为他自己辩护，从而反过来谴责我们。</li><li>每个人都喜欢被人恭维。</li><li>寻求自重感的欲望是人类与动物的主要差别之一。</li><li>有的人甚至用装病来得到别人的同情、注意及自重感。</li><li>如果有所谓的成功的秘诀的话，那就是你站在对方的立场，由他的观点看事，同时兼顾自己的观点。</li><li>能设身于他人处境的人，能了解他们心理活动的人是不必为他们的前途顾虑的。</li></ul><h3 id="第二章-如何使人喜欢你"><font color=#0052ff> 第二章 如何使人喜欢你 </font></h3><blockquote><p>关于成功的商业交往，没有什么神秘的——专心注意对你讲话的人、静静地倾听、记得比人的名字、没有别的东西会让人如此开心。当然，你也应该意识到，我们经常是因为自身的特点而不是优点招人喜欢。</p></blockquote><ul><li>我们都知道，有的人，这一生都在错误地让别人对他们自己感兴趣。当然，这是不行的。他们对你不感兴趣，他们对我也不感兴趣。他们只对他们自己感兴趣，不论早晨、中午，还是晚饭后。</li><li>对别人不感兴趣的人，生活中遭遇的困难最大，对别人造成的损害也最大，所有的人类失败，都在这些人身上发生。</li><li>我们对别人的事情感兴趣，别人才会对我们的事情感兴趣。</li><li>真诚是必不可少的，要培养真正的友谊，或是帮助别人又帮助自己，那么就要记着，对你身边的人和事表现出足够的关心。</li><li>世界上每个人都在寻求快乐——但是只有一个方法可以确实地得到快乐，那就是自己控制自己的思想。</li><li>如果你不照着去做，阅读是不会给你带来任何效果的。</li><li>思想是至高无上的。保持一个良好的心态——勇敢、诚实、乐观的态度。</li><li>微笑表明心境很好。面露平和欢愉的微笑，说明充实满足，能善待别人。这样的人一定会感染别人，别人自然乐于与之交往。</li><li>在谈话中，他会费劲心思将别人的名字反复记忆，并在脑海中试着把这人的姓名与这人的面孔、神色及外观联系起来记忆。</li><li>所有这些事都需要花心思。艾默生说“良好的礼貌修养是从小事中积累起来的。”</li><li>记住，把这个人的名字当做是人类语言中最甜美最重要的声音来记忆。</li><li>静听是我们对别人的一种最高的恭维。</li><li>讨厌的人，他们就是——被他们自私的心及他们自重感麻痹了的讨厌的人。他们只谈论自己，只为自己设想。</li><li>如果你希望成为一个善于谈话的人，要先学会做一个注意静听的人。要使人对你感兴趣，先激发那人的兴趣。问别人喜欢回答的问题，鼓励他谈论他自己及他的成就。</li><li>通到人心的大路就是跟对方谈论他最以为宝贵的事情。</li><li>无论面对什么样的人物，一定要找到他所感兴趣的事，让他先高兴起来，这样你就比较容易接近他了。</li><li>自重的欲望是人类天性中最深刻的冲动。</li><li>曾统治过大英帝国的迪拜累利说道：“同人们谈谈他们自己，他们会愿意听上好几个钟头。”如果你真诚地这样做，你就赢得了别人的尊重。</li></ul><h3 id="第三章-如何使人信服你"><font color=#0052ff> 第三章 如何使人信服你 </font></h3><blockquote><p>如果你想赢得人心，首先要让他人相信你是他最真诚的朋友。就像有一滴蜂蜜吸引住他的心，通往他的理性。使人信服于你，你就一定要让他人感受到你的真诚。</p></blockquote><ul><li>恨不能止恨，爱能止恨。</li><li>永远不要用辩论来停止误会，应该用一些技巧、外交来和解，还要兼顾对方的观点，用恰当的方式使辩论停止。</li><li>当你指出对方的错误时，对方会因此同意你的观点吗？绝对不会！因为你直接打击了他们的智慧、判断、尊荣和自尊。</li><li>记住那句古老的谚语：“用争夺的方法，你将永远得不到满足，但用让步的方法，你可得到比你期望的更多。”如果你错了，就迅速而真诚地承认。</li><li>太阳能比风更快地使老人脱下外套，温和、友善和赞赏的态度也能使人改变心意，这是咆哮和猛烈攻击所难以奏效的。请记住林肯所说的话：“一滴蜂蜜要比一加仑的胆汁招引更多的苍蝇。”</li><li>如果你想说服别人，又不想让人感觉你是把你的观点强加给他的，那么，记住苏格拉底的话，向对方发一个温柔的问题，得到“是”的回应。</li><li>法国哲学家罗素说：“如果你想与人结仇，那你就胜过你的朋友；但如果你要得到朋友，那就让你的朋友胜过你。”</li><li>没有人喜欢强迫接受推销，或被人强迫去做一件事。我们都喜欢按照自己的想法购买东西，或按照自己的想法做事，我们很高兴别人征询我们的愿望、需求和意见。</li><li>这是一个充满戏剧化的时代，仅仅陈述事实是不够的，还需要把事实生动化、趣味化、戏剧化。你必须学会表演。电影这样做，电视这样做，如果你像被人注意，你也必须这样做。</li></ul><h3 id="第四章-如何更好地说服他人"><font color=#0052ff> 第四章 如何更好地说服他人 </font></h3><blockquote><p>称赞是温暖他人心灵的阳光，没有阳光，我们就没有花儿和收成。称赞会给他一种自重感，这样他就会与你保持合作，而不是背叛。</p></blockquote><ul><li>从赞扬和欣赏开始，就像理发师在替人修面之前，要先把涂上肥皂一样，可以减少被划破的可能，而赞扬和欣赏可以更好地改变和说服一个人。</li><li>对那些非常敏感的人，用巧妙的暗示，让他们改正自己的错误，会收到奇妙的效果。</li><li>在批评对方以前，首先陈述你自己的错误，比你直接批评他会产生更神奇的效果。</li><li>有时即使我们是对的，别人是错的，如果让他过于丢面子的话，只会让事情变得更糟。所以，无论何时，我们都要记住：使对方保持他的面子。这也是你有修养的体现。</li><li>当一个人收到批评时，他的能力就会降低，而当他受到鼓励时，他就会精神焕发。要“诚于嘉许，宽于称道”。</li></ul><h3 id="第五章-如何让你的家庭幸福快乐"><font color=#0052ff> 第五章 如何让你的家庭幸福快乐 </font></h3><blockquote><p>在地狱中，魔鬼为了破坏爱情而发明的一定会成功而恶毒的方法中，唠叨就是很厉害的了。它永远不会失败，就像眼镜蛇咬人一样，总是具有破坏性，总是会置于人于死命。用宽容、爱和欣赏代替唠叨，才会让你的家庭更幸福。</p></blockquote><ul><li>当婚姻出现裂痕时，一定要让自己冷静下来，问问自己，是不是自己也有过错。</li><li>如果你要维持家庭生活的幸福快乐，一定要记住：“绝对绝对不可以唠叨”</li><li>如果你要家庭生活幸福快乐，一定要记住“不要想按着你的意思，来改变你的伴侣。”</li><li>和别人相处要学的第一件事，就是对于他们寻求快乐的特别方式不要加以干涉，如果这些方式并没有强烈妨碍到我们的话。</li><li>夫妻相处之道在于坦诚与体谅，世界上没有完美的配偶，但你一定要懂得经营，聪明的人懂得怎样使不可能完美的婚姻变得尽可能的完美。</li><li>多些信任和接纳，给予空间，并以行动表示谅解；多包容，多忍耐，多欣赏，少批评，少抱怨。</li><li>相互信任和包容，才是幸福婚姻的良方。</li><li>许多罗曼蒂克的梦想破灭了！50%以上的婚姻不幸福。原因之一是：毫无用处却令人心碎的批评。</li><li>对于女人在打扮美丽和穿着入时方面所花去的心思，男人应该表示出他的激赏。所有的男人，都知道女人非常注意衣着，但也常常忘记这件事。</li><li>我们男人真应该认清这点，法国上层阶级的男人，在这方面很有教养，不但对女人穿戴的衣帽表示赞美，并且在一个晚上不止赞美一次，而是好几次。五千万个法国男人都这么做，一定有他们的道理。</li><li>如果女人要从她的丈夫之处得到快乐，那一定是得自他赞赏和忠实的热爱。</li><li>无论男人或女人，都希望获得赞美和热爱。如果能够真心地表示赞赏和热爱，就会得到幸福快乐。</li><li>女人对生日，或是什么纪念日，会很重视！那是什么原因？那该是女人心理上的一个神秘的谜！</li><li>成功的关系是建立于日常的关心和爱护的基础上。所以，要想保持家庭生活快乐，一定要记住注重那些看似小事的事情。</li><li>有千万个家庭，就有千万种生活方式。虽然生活方式各不相同，但有一个准则在生活中要注意，这是生活安定平和的保证：不要忽视生活小节。</li><li>不讲理是吞食爱情的癌细胞。虽然我们都知道这一点，但糟糕的是，我们对待自己的亲人，居然赶不上对待陌生人那样有礼。</li></ul><h3 id="第六章-经营好自己的人生"><font color=#0052ff> 第六章 经营好自己的人生</font></h3><blockquote><p>我们已经在美好的童话国度生活了许多年，可我们一无所知，被蒙蔽住了双眼，拥有得太多，却忽略了生活真正乐趣。重启这些美妙的东西，我们的人生就会更美好。</p></blockquote><ul><li>如果碰到必须马上做决定的问题，要坚决果断，千万不要拖延。（理解：如果某件事情必须要做，那么往往早一点做比晚一点做，要获得的收益多很大。）</li><li>让自己学着只看事物好的一面并养成习惯，这会比你每年多赚1000英镑更有价值。</li><li>人在生活中应该有两个目标：第一个目标是努力得到你想要的。第二就是要在得到后满足而快乐，这一点唯有最具有智慧的人才可以做到。</li><li>如果我们想停止忧虑，塑造快乐人生，多想想你得意的事——而不是烦恼。</li><li>要想成为一个真正的人，你必须先是个不盲从的人。你心灵的完整性不可侵犯，当你放弃自己的立场，而想用别人的观点去看一件事，错误便就发生了。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 人生 </tag>
            
            <tag> 社交 </tag>
            
            <tag> 生活 </tag>
            
            <tag> 智慧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书籍</title>
      <link href="/2019/05/04/%E4%B9%A6%E7%B1%8D/"/>
      <url>/2019/05/04/%E4%B9%A6%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/tea-time-3240766_1280.jpg" /></p><blockquote><p>如今你的气质里，藏着你走过的路，读过的书和爱过的人。 —— 《卡萨布兰卡》</p></blockquote><p>闲来无事，把自己从高中、大学和毕业一年看过的书做一个统计，方便自己有空余时间可以将一些好的书籍反复看，毕竟有太多书籍值得反复研读，另外，也是对自己看书历程的记录，希望不断鞭策自己多读书，读好书，当然，也是方便别人对自己的了解。 记录必读书籍，分为已读完、正在读、未读、未读完 <a id="more"></a></p><h2 id="技术与算法">技术与算法</h2><p>心得：实践、做题</p><h3 id="已读书籍">已读书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《精通Spring 4.x 企业应用开发实战》</td><td style="text-align: center;">一本比较全面且易学的spring书籍</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《鸟哥的Linux私房菜-基础学习篇》</td><td style="text-align: center;">最具知名度的Linux入门书</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《架构探险：从零开始写JavaWeb框架》</td><td style="text-align: center;">step by step，值得实践的好书</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《淘宝技术这十年》</td><td style="text-align: center;">淘宝从小到大的技术发展历程</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《Java核心技术-卷一》</td><td style="text-align: center;">系统全面讲解了Java语言</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《C++Primer第5版》</td><td style="text-align: center;">C++初学者的最佳指南</td><td style="text-align: center;">已读</td></tr></tbody></table><h3 id="正在读书籍">正在读书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《深入理解Java虚拟机 JVM高级特性与最佳实践(第二版)》</td><td style="text-align: center;">java学习进阶</td><td style="text-align: center;">已读2/5</td></tr><tr class="even"><td style="text-align: center;">《大型分布式网站架构》</td><td style="text-align: center;">原理与实践结合、分布式网站技术的全貌</td><td style="text-align: center;">已读3/5</td></tr></tbody></table><h3 id="未读未读完书籍">未读、未读完书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《算法导论》</td><td style="text-align: center;">严谨性和全面性融为一体</td><td style="text-align: center;">未读完</td></tr><tr class="even"><td style="text-align: center;">《机器学习》周志华</td><td style="text-align: center;">西瓜书机器学习领域全面的中文入门教材</td><td style="text-align: center;">未读完</td></tr><tr class="odd"><td style="text-align: center;">《SQL学习指南（第2版 修订版）》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr></tbody></table><h2 id="小说人文励志">小说、人文、励志</h2><p>心得：认同、生活指导</p><h3 id="已读书籍-1">已读书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《平凡的世界》</td><td style="text-align: center;">苦难转化为前行的精神动力</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《三体》</td><td style="text-align: center;">仰望星空才知道自己多么渺小</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《大漠苍狼》</td><td style="text-align: center;">黑洞、虫洞、穿越、时间循环</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《鬼吹灯》</td><td style="text-align: center;">人点烛，鬼吹灯</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《盗墓笔记》</td><td style="text-align: center;">最大的敌人不是粽子或机关，而是自身的恐惧</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《上帝掷骰子吗》</td><td style="text-align: center;">与最伟大的物理学家们并肩作战，经历一次量子之旅</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《就喜欢你看不惯我又干不掉我的样子》</td><td style="text-align: center;">一只叫“吾皇”的胖猫、一只叫“巴扎黑”的萌狗以及少年主人的生活趣事</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《我不喜欢这世界，我只喜欢你》</td><td style="text-align: center;">一本让你相信爱情的治愈书籍</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《穆斯林的葬礼》</td><td style="text-align: center;">人可以失落一切，唯独不应该失落自己。</td><td style="text-align: center;">已读</td></tr><tr class="even"><td style="text-align: center;">《撒哈拉的故事》</td><td style="text-align: center;">撒哈拉生活的点点滴滴，三毛与荷西的真挚的爱情</td><td style="text-align: center;">已读</td></tr><tr class="odd"><td style="text-align: center;">《天才在左，疯子在右》</td><td style="text-align: center;"></td><td style="text-align: center;">已读</td></tr></tbody></table><h3 id="正在读书籍-1">正在读书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《人性的弱点》</td><td style="text-align: center;">自我教育与人际交往的人生准则</td><td style="text-align: center;">已读4/5</td></tr><tr class="even"><td style="text-align: center;">《非暴力沟通》</td><td style="text-align: center;">观察、感受、需要、请求</td><td style="text-align: center;">已读2/5</td></tr><tr class="odd"><td style="text-align: center;">《羊皮卷》</td><td style="text-align: center;">超越自我，砥砺前行</td><td style="text-align: center;">已读0/5</td></tr></tbody></table><h3 id="未读未读完书籍-1">未读、未读完书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《金字塔原理》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr><tr class="even"><td style="text-align: center;">《三体Ⅱ·黑暗森林》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr><tr class="odd"><td style="text-align: center;">《少有人走的路》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr><tr class="even"><td style="text-align: center;">《哲学家们都干了些什么》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr><tr class="odd"><td style="text-align: center;">《佛祖都说了些什么》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr><tr class="even"><td style="text-align: center;">《学会提问》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr><tr class="odd"><td style="text-align: center;">《经济学原理》曼昆版本</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr></tbody></table><h2 id="理财">理财</h2><p>心得：长期</p><h3 id="已读书籍-2">已读书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《小狗钱钱》</td><td style="text-align: center;">财富启蒙读物，改变自己对于财富的观念</td><td style="text-align: center;">已读4/5</td></tr></tbody></table><h3 id="未读未读完书籍-2">未读、未读完书籍</h3><table><thead><tr class="header"><th style="text-align: center;">书名</th><th style="text-align: center;">介绍</th><th style="text-align: center;">阅读进度</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;">《漫步华尔街》</td><td style="text-align: center;"></td><td style="text-align: center;">未读</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>阅读书籍应该有的态度</title>
      <link href="/2019/03/31/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D%E5%BA%94%E8%AF%A5%E6%9C%89%E7%9A%84%E6%80%81%E5%BA%A6/"/>
      <url>/2019/03/31/%E9%98%85%E8%AF%BB%E4%B9%A6%E7%B1%8D%E5%BA%94%E8%AF%A5%E6%9C%89%E7%9A%84%E6%80%81%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/qiyueliuhuogitee/blogimages/raw/master/img/person-690157_1280.jpg" /></p><p>忘记在哪本书上看到的，当时保存了图片，觉得很有道理，现在摘抄下，也提醒自己。</p><h3 id="慢一点你理解的越多需要记的就越少">1. 慢一点，你理解的越多，需要记的就越少</h3><blockquote><p>不要光是看看就行了。停下来，好好想一想。书中提出问题的时候，你不要直接去翻答案。可以假想真的有人在问你这个问题。你让大脑想得越深入，就越有可能学会并记住它。</p></blockquote><h3 id="做练习自己记笔记">2. 做练习，自己记笔记</h3><blockquote><p>不要只是坐在那里看着练习发呆。拿出笔来，写一写画一画。大量研究都证实，学习过程中如果能实际动动手，将改善你的学习。</p></blockquote><h3 id="阅读没有傻问题部分">3. 阅读“没有傻问题”部分</h3><blockquote><p>顾明思义。这些问题不是可有可无的旁注，它们绝对是核心内容的一部分！千万不要跳过去不看。</p></blockquote><h3 id="上床睡觉之前不要再看别的书至少不要看其他有难度的东西">4. 上床睡觉之前不要再看别的书，至少不要看其他有难度的东西</h3><blockquote><p>学习中有一部分是在你合上书之后完成的（特别是，要把学到的知识长久地记住，这往往无法在看书的过程中做到）。你的大脑也需要有自己的时间，这样才能再做一些处理。如果在这段处理时间内你又往大脑里灌输了新的知识。那么你刚才学的一些东西就会丢掉。</p></blockquote><h3 id="要喝水而且要多喝一点水">5. 要喝水，而且要多喝一点水</h3><blockquote><p>能提供充足的液体，你的大脑才能有最佳表现。如果缺水（可能在你感觉到口渴之前就已经缺水了），学习能力就会下降。</p></blockquote><h3 id="讲出来而且要大声讲出来">6. 讲出来，而且要大声讲出来</h3><blockquote><p>说话可以刺激大脑的另一部分。如果你想看懂什么，或者想更牢地记住它，就要大声地说出来。更好的办法是，大声地解释给别人听。这样你会学得更快，而且可能会新的发现，这是以前光看不说的时候所没有的。</p></blockquote><h3 id="听听你的大脑怎么说">7. 听听你的大脑怎么说</h3><blockquote><p>注意一下你的大脑是不是负担太重了。如果发现自己开始浮光</p></blockquote><h3 id="要有点感觉">8. 要有点感觉</h3><blockquote><p>你的大脑需要知道这是很重要的东西。要真正融入到书中的故事里。为书里的照片加上你自己的图题。你可能觉得一个笑话很蹩脚，不太让人满意，但这总比根本无动于衷要好。</p></blockquote><h3 id="真正做些工作">9. 真正做些工作</h3><blockquote><p>把这些知识应用到你的日常工作中去，利用你所学的方法完成项目决策。具体做些工作，你会得到书中练习和活动以外的经验。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm之Matplotlib不显示图像(for Mac)</title>
      <link href="/2019/03/23/PyCharm%E4%B9%8BMatplotlib%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F-for-Mac/"/>
      <url>/2019/03/23/PyCharm%E4%B9%8BMatplotlib%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F-for-Mac/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>问题：python virtualenv创建独立环境中 Matplotlib不显示图像(for Mac) ### 系统版本 MacOS Mojave 10.14.1 ### 解决 试了上面文章的几种解决方法后还是没法解决，网上找了一大堆文章，还是没有解决，之后还是在stackoverflow中看到一种可能的问题，附上链接https://stackoverflow.com/questions/22304215/gtk-backend-requires-pygtk-to-be-installed，当看到有答主给出这个解决方式$ virtualenv --system-site-packages ~/.virtualenvs/my_env 才想起来之前创建python运行环境时运行了这个virtualenv -p /usr/bin/python --no-site-packages venv，参数--no-site-packages 代表系统Python环境中的所有第三方包都不会复制过来，删掉venv目录，重新运行 virtualenv -p /usr/bin/python --system-site-packages venv 后，再安装matplotlib库可以显示图片 ### 总结 - <strong>继承本机的pyhon环境后不用再装matplotlib了</strong><br />- <strong>猜测：virtualenv中如果在装matplotlib会覆盖mac预装好的matplotlib</strong> - <strong>注意：安装其他包时不要在venv环境下site-package目录下引入matplotlib</strong></p><h3 id="自己维护python包版本还是太麻烦了所以最后还是安装anaconda了">自己维护python包版本还是太麻烦了，所以最后还是安装anaconda了。</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。</title>
      <link href="/2019/03/04/%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E6%95%B0%E7%BB%84-nums-%E5%92%8C%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%E5%80%BC-target%EF%BC%8C%E8%AF%B7%E4%BD%A0%E5%9C%A8%E8%AF%A5%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%BE%E5%87%BA%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E9%82%A3%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E4%BB%96%E4%BB%AC%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%8B%E6%A0%87%E3%80%82/"/>
      <url>/2019/03/04/%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E6%95%B0%E7%BB%84-nums-%E5%92%8C%E4%B8%80%E4%B8%AA%E7%9B%AE%E6%A0%87%E5%80%BC-target%EF%BC%8C%E8%AF%B7%E4%BD%A0%E5%9C%A8%E8%AF%A5%E6%95%B0%E7%BB%84%E4%B8%AD%E6%89%BE%E5%87%BA%E5%92%8C%E4%B8%BA%E7%9B%AE%E6%A0%87%E5%80%BC%E7%9A%84%E9%82%A3%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%EF%BC%8C%E5%B9%B6%E8%BF%94%E5%9B%9E%E4%BB%96%E4%BB%AC%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%8B%E6%A0%87%E3%80%82/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="题目描述">题目描述</h3><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><h3 id="思路">思路：</h3><ol type="1"><li>题目是要求nums中有两个数和是target，那么就应该是nums中会存在一个target - nums[i]的数，这种变换思维是要具备，即当题目需要得到什么结果，将这个结果推到出等价的描述，得到一些充分条件或者必要条件，在想办法（算法）去得到这些条件，当然也要具备一些基础知识，比如hash思想，知道hash方法它有哪些应用场景和它还有可能解决什么问题。</li><li>题目转换为nums中找到一个target - nums[i]的数，那么可以先得到这些target - nums[i]，即得到两个nums.length大小的数组，再去找到两个数组中相同的数，找到相同的数，最容易的方法就是通过hash思想，有很多类似找相同数或者元素都有借助hash思想。 ### 答案 #### java代码 <figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    *  题目1：给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。</span></span><br><span class="line"><span class="comment">    *  你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素</span></span><br><span class="line"><span class="comment">    *  注：此解决方法有问题，会申请大量内存，优化方向为动态hash表即官方解法。</span></span><br><span class="line"><span class="comment">    *  e.g: 给定 nums = [2, 7, 11, 15], target = 9</span></span><br><span class="line"><span class="comment">    *       因为 nums[0] + nums[1] = 2 + 7 = 9</span></span><br><span class="line"><span class="comment">    *       所以返回 [0, 1]</span></span><br><span class="line"><span class="comment">    * @param nums</span></span><br><span class="line"><span class="comment">    * @param target</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] solution01(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">       <span class="keyword">int</span> length = nums.length;</span><br><span class="line">       <span class="keyword">if</span> (length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 先找到nums中最小值和最大值</span></span><br><span class="line">       <span class="keyword">int</span> <span class="built_in">min</span> = nums[<span class="number">0</span>], <span class="built_in">max</span> = nums[<span class="number">0</span>];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (nums[i] &gt; <span class="built_in">max</span>) &#123;</span><br><span class="line">               <span class="built_in">max</span> = nums[i];</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (nums[i] &lt; <span class="built_in">min</span>) &#123;</span><br><span class="line">               <span class="built_in">min</span> = nums[i];</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">int</span> offset = -<span class="built_in">min</span>, tableSize = <span class="built_in">max</span> - <span class="built_in">min</span> + <span class="number">1</span>;</span><br><span class="line">       <span class="keyword">int</span>[] <span class="built_in">map</span> = <span class="keyword">new</span> <span class="keyword">int</span>[tableSize];</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tableSize; i++) &#123;</span><br><span class="line">           <span class="built_in">map</span>[i] = <span class="number">-1</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length * <span class="number">2</span>; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span> (i &lt; length) &#123;</span><br><span class="line">               <span class="comment">// 在map中记录下nums的位置信息</span></span><br><span class="line">               <span class="built_in">map</span>[nums[i] + offset] = i;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">int</span> index = target - nums[i - length] + offset;</span><br><span class="line">               <span class="keyword">if</span> (<span class="number">0</span> &lt;= index &amp;&amp; index &lt; tableSize &amp;&amp; <span class="built_in">map</span>[index] != <span class="number">-1</span> &amp;&amp; <span class="built_in">map</span>[index] != i - length) &#123;</span><br><span class="line">                   <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i - length, <span class="built_in">map</span>[index]&#125;;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 题目1 官方解答</span></span><br><span class="line"><span class="comment">    * @param nums</span></span><br><span class="line"><span class="comment">    * @param target</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] solution02(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">       Map&lt;Integer, Integer&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">           <span class="keyword">int</span> complement = target - nums[i];</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">map</span>.containsKey(complement)) &#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="built_in">map</span>.<span class="built_in">get</span>(complement), i &#125;;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="built_in">map</span>.<span class="built_in">put</span>(nums[i], i);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;No two sum solution&quot;</span>);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure> #### 算法复杂度 solution01算法时间复杂度为O(n)，但空间复杂度根据nums的元素决定可能会特别大，该方法不可取。 solution02算法时间leetCode上说是复杂度是O(n)，但我认为应该是大于O(n)，因为map.put(nums[i], i);这个操作时间复杂度可能会是log(n)，所以整体复杂度应该略大于O(n)。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给定一个字符串s，请计算输出含有连续两个s作为子串的最短字符串-Java版本</title>
      <link href="/2019/02/27/%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2s%EF%BC%8C%E8%AF%B7%E8%AE%A1%E7%AE%97%E8%BE%93%E5%87%BA%E5%90%AB%E6%9C%89%E8%BF%9E%E7%BB%AD%E4%B8%A4%E4%B8%AAs%E4%BD%9C%E4%B8%BA%E5%AD%90%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%97%E7%AC%A6%E4%B8%B2-Java%E7%89%88%E6%9C%AC/"/>
      <url>/2019/02/27/%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2s%EF%BC%8C%E8%AF%B7%E8%AE%A1%E7%AE%97%E8%BE%93%E5%87%BA%E5%90%AB%E6%9C%89%E8%BF%9E%E7%BB%AD%E4%B8%A4%E4%B8%AAs%E4%BD%9C%E4%B8%BA%E5%AD%90%E4%B8%B2%E7%9A%84%E6%9C%80%E7%9F%AD%E5%AD%97%E7%AC%A6%E4%B8%B2-Java%E7%89%88%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="题目描述">题目描述</h3><p>给定一个字符串s，请计算输出含有连续两个s作为子串的最短字符串 ### 思路：</p><ol type="1"><li>从特殊到一般 abc -&gt; abcabc，aba -&gt; ababa，aaa -&gt; aaaa，abcdab -&gt; abcdabcdab</li><li>论证确实是寻找包含s中最后一个字符的s的子串与包含s中第一个字符的s的子串相等的最长子串。</li></ol><ul><li>显然result.length &gt; s.length</li><li>abcdab -&gt; abcdabcd 不能是 abcdabcddc非最短字符串</li></ul><ol start="3" type="1"><li>证明</li></ol><ul><li>若result[0...r]为输出的最短字符串， 因r &lt;= s.length时，不可能出现两个s作为子串， 则r &gt; s.length。</li><li><h2 id="其他证明略比较明显">其他证明略，比较明显。</h2><h3 id="答案">答案</h3><h4 id="java代码">java代码</h4><h2 id="section"><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 题目：给定一个字符串s，请计算输出含有连续两个s作为子串的最短字符串</span></span><br><span class="line"><span class="comment">   * e.g：1. 输入abc，输出abcabc  2. 输入abcdab，输出abcdabcd，3. 输入aaa，输出aaaa</span></span><br><span class="line"><span class="comment">   * @param s</span></span><br><span class="line"><span class="comment">   * @return result</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> static <span class="built_in">char</span><span class="literal">[]</span> solution01(<span class="built_in">char</span><span class="literal">[]</span> s) &#123;</span><br><span class="line">      <span class="built_in">int</span> length = s.length;</span><br><span class="line">      <span class="comment">// 记录上一次迭代s(0...i-1)字符串头尾有相同的字符串的字符个数</span></span><br><span class="line">      <span class="built_in">int</span> dp = <span class="number">0</span>;</span><br><span class="line">      <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span> (i &lt; length) &#123;</span><br><span class="line">          <span class="keyword">if</span> (s<span class="literal">[<span class="identifier">dp</span>]</span><span class="operator"> == </span>s<span class="literal">[<span class="identifier">i</span>]</span>) dp++;</span><br><span class="line">          <span class="keyword">else</span> dp = <span class="number">0</span>;</span><br><span class="line">          i++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (dp<span class="operator"> == </span>length - <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="comment">// s = &quot;a&quot; 或者 s = &quot;aaaa&quot;</span></span><br><span class="line">          <span class="built_in">char</span><span class="literal">[]</span> result = <span class="keyword">new</span> <span class="built_in">char</span><span class="literal">[<span class="identifier">length</span> + <span class="number">1</span>]</span>;</span><br><span class="line">          <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>arraycopy(s, <span class="number">0</span>, result, <span class="number">0</span>, length);</span><br><span class="line">          result<span class="literal">[<span class="identifier">length</span>]</span> = s<span class="literal">[<span class="number">0</span>]</span>;</span><br><span class="line">          return result;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">char</span><span class="literal">[]</span> result = <span class="keyword">new</span> <span class="built_in">char</span><span class="literal">[<span class="number">2</span> <span class="operator">*</span> <span class="identifier">length</span> - <span class="identifier">dp</span>]</span>;</span><br><span class="line">          <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>arraycopy(s, <span class="number">0</span>, result, <span class="number">0</span>, length);</span><br><span class="line">          <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>arraycopy(s, dp, result, length, length - dp);</span><br><span class="line">          return result;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 只满足s中只有26个英文字母</span></span><br><span class="line"><span class="comment">   * @param s</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> static <span class="built_in">char</span><span class="literal">[]</span> solution02(<span class="built_in">char</span><span class="literal">[]</span> s) &#123;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">int</span> length = s.length;</span><br><span class="line">      <span class="built_in">int</span> i = <span class="number">0</span>, j = length - <span class="number">1</span>;</span><br><span class="line">      <span class="built_in">int</span> head = <span class="number">0</span>, tail = <span class="number">0</span>, dp = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> (i &lt; length - <span class="number">1</span>) &#123;</span><br><span class="line">          head = head<span class="operator"> * </span><span class="number">26</span> + (s<span class="literal">[<span class="identifier">i</span>]</span> - <span class="character">&#x27;a&#x27;</span> + <span class="number">1</span>);</span><br><span class="line">          tail = tail + (s<span class="literal">[<span class="identifier">j</span>]</span> - <span class="character">&#x27;a&#x27;</span> + <span class="number">1</span>)<span class="operator"> * </span>(<span class="built_in">int</span>)<span class="module-access"><span class="module"><span class="identifier">Math</span>.</span></span>pow(<span class="number">26</span>, i);</span><br><span class="line">          <span class="keyword">if</span> (head<span class="operator"> == </span>tail) &#123;</span><br><span class="line">              dp = i + <span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          i++; j--;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (dp<span class="operator"> == </span>length - <span class="number">1</span>) &#123;</span><br><span class="line">          <span class="comment">// s = &quot;a&quot; 或者 s = &quot;aaaa&quot;</span></span><br><span class="line">          <span class="built_in">char</span><span class="literal">[]</span> result = <span class="keyword">new</span> <span class="built_in">char</span><span class="literal">[<span class="identifier">length</span> + <span class="number">1</span>]</span>;</span><br><span class="line">          <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>arraycopy(s, <span class="number">0</span>, result, <span class="number">0</span>, length);</span><br><span class="line">          result<span class="literal">[<span class="identifier">length</span>]</span> = s<span class="literal">[<span class="number">0</span>]</span>;</span><br><span class="line">          return result;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">char</span><span class="literal">[]</span> result = <span class="keyword">new</span> <span class="built_in">char</span><span class="literal">[<span class="number">2</span> <span class="operator">*</span> <span class="identifier">length</span> - <span class="identifier">dp</span>]</span>;</span><br><span class="line">          <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>arraycopy(s, <span class="number">0</span>, result, <span class="number">0</span>, length);</span><br><span class="line">          <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>arraycopy(s, dp, result, length, length - dp);</span><br><span class="line">          return result;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> static <span class="built_in">char</span><span class="literal">[]</span> solution03(<span class="built_in">char</span><span class="literal">[]</span> s) &#123;</span><br><span class="line">      return <span class="keyword">new</span> <span class="built_in">char</span><span class="literal">[<span class="number">2</span>]</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">      public static void main(String<span class="literal">[]</span> args) &#123;</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;----------solution01-------------&quot;</span>);</span><br><span class="line">      <span class="comment">// a</span></span><br><span class="line">      <span class="built_in">char</span><span class="literal">[]</span> s1 = <span class="string">&quot;a&quot;</span>.<span class="keyword">to</span><span class="constructor">CharArray()</span>;</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s1</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution01</span>(<span class="params">s1</span>)</span>));</span><br><span class="line">      <span class="comment">// aaa</span></span><br><span class="line">      <span class="built_in">char</span><span class="literal">[]</span> s2 = <span class="string">&quot;aaa&quot;</span>.<span class="keyword">to</span><span class="constructor">CharArray()</span>;</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s2</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution01</span>(<span class="params">s2</span>)</span>));</span><br><span class="line">      <span class="comment">// abc</span></span><br><span class="line">      <span class="built_in">char</span><span class="literal">[]</span> s3 = <span class="string">&quot;abc&quot;</span>.<span class="keyword">to</span><span class="constructor">CharArray()</span>;</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s3</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution01</span>(<span class="params">s3</span>)</span>));</span><br><span class="line">      <span class="comment">// abcdabc</span></span><br><span class="line">      <span class="built_in">char</span><span class="literal">[]</span> s4 = <span class="string">&quot;abcdabc&quot;</span>.<span class="keyword">to</span><span class="constructor">CharArray()</span>;</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s4</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution01</span>(<span class="params">s4</span>)</span>));</span><br><span class="line"></span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;----------solution02-------------&quot;</span>);</span><br><span class="line">      <span class="comment">// a</span></span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s1</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution02</span>(<span class="params">s1</span>)</span>));</span><br><span class="line">      <span class="comment">// aaa</span></span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s2</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution02</span>(<span class="params">s2</span>)</span>));</span><br><span class="line">      <span class="comment">// abc</span></span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s3</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution02</span>(<span class="params">s3</span>)</span>));</span><br><span class="line">      <span class="comment">// abcdabc</span></span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;输入: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">s4</span>)</span></span><br><span class="line">              + <span class="string">&quot;, 输出: &quot;</span> + <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>value<span class="constructor">Of(<span class="params">solution02</span>(<span class="params">s4</span>)</span>));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></h2><h4 id="算法复杂度">算法复杂度</h4>solution01和solution02算法复杂度都是O(n)。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo学习实践:Hexo github搭建个人博客</title>
      <link href="/2019/02/01/hexo%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5/"/>
      <url>/2019/02/01/hexo%E5%AD%A6%E4%B9%A0%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="地址">地址</h3><p>学习地址：<a href="https://hexo.io/zh-cn/docs/" class="uri">https://hexo.io/zh-cn/docs/</a> 博客地址：<a href="https://qiyueliuhuo.github.io/" class="uri">https://qiyueliuhuo.github.io/</a></p><h3 id="配置环境">配置环境</h3><ul><li>Node</li><li>Git</li><li>GitHub</li></ul><h3 id="安装hexo">安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="初始化">初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在一个空文件夹，如blog中执行</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="生成静态页面">生成静态页面</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate  (hexo g 也阔以)</span><br></pre></td></tr></table></figure><h3 id="本地启动">本地启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问http://localhost:4000/</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo server --drafts</span><br><span class="line">同时访问草稿</span><br></pre></td></tr></table></figure><h3 id="将此博客目录与远程github仓库建立关联">将此博客目录与远程github仓库建立关联</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim _config.yml</span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: https://github.com/qiyueliuhuo/qiyueliuhuo.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h3 id="执行如下命令才能使用git部署">执行如下命令才能使用git部署</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3 id="将.deploy目录部署到github上">将.deploy目录部署到github上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="部署步骤">部署步骤</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="常用命令">常用命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;postName&quot;  # 新建文章</span><br><span class="line">hexo new draft &quot;draftName&quot; # 新建草稿</span><br><span class="line">hexo new page &quot;pageName&quot;  # 新建页面</span><br><span class="line">hexo publish &quot;title&quot; # 发布title文章  Moves a draft post from _drafts to _posts folder.</span><br><span class="line">hexo generate  # 生成静态页面至public目录中</span><br><span class="line">hexo clean # 清除缓存</span><br><span class="line">hexo server  # 开启本地预览端口</span><br><span class="line">hexo deploy  # 部署到github</span><br><span class="line">hexo version # 查看hexo版本</span><br></pre></td></tr></table></figure><h3 id="编辑文章">编辑文章</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">文章头部加</span><br><span class="line">---</span><br><span class="line">title: //此处填写文章名</span><br><span class="line">date: //此处填写发布日期</span><br><span class="line">tags:</span><br><span class="line">  - //此处填写标签名(可多个)</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="文章在source_posts">文章在source/_posts</h3><h3 id="修改头像友情链接等在_config.yml中">修改头像、友情链接等在_config.yml中</h3><h3 id="修改名字在publicindex里修改">修改名字在public/index里修改</h3><h3 id="查看npm安装各hexo插件情况">查看npm安装各Hexo插件情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm ls --depth 0</span><br><span class="line"><span class="meta">#</span><span class="bash"> 缺少的插件需要安装上</span></span><br><span class="line">npm install hexo-renderer-ejs --save</span><br></pre></td></tr></table></figure><h3 id="通过-description-和---more---使得文章在首页只显示部分内容">通过 description 和 &lt;!--more--&gt; 使得文章在首页只显示部分内容</h3><hr /><h3 id="todo-list-2020.04.03">todo list 2020.04.03</h3><ul class="task-list"><li><input type="checkbox" disabled="" checked="" />评论系统 采用valine评论系统，无需后端实现。 —— 2020.07.10</li><li><input type="checkbox" disabled="" checked="" />访问次数，使用百度统计：tongji.baidu.com，注：百度统计接入成功后，因为数据延迟，需要等待一天才能看到百度统计上汇报的数据。 —— 2020.06.01</li><li><input type="checkbox" disabled="" checked="" />文章分类 —— 2019.10.01</li><li><input type="checkbox" disabled="" checked="" />文章目录git管理。 —— 2020.07.01 参考：<a href="https://www.jianshu.com/p/8814ce1da7a4" class="uri">https://www.jianshu.com/p/8814ce1da7a4</a> <a href="https://www.imooc.com/article/9707?block_id=tuijian_wz" class="uri">https://www.imooc.com/article/9707?block_id=tuijian_wz</a><br /></li><li><input type="checkbox" disabled="" checked="" />文章配图 gitee作为图床，macOS使用PicGo上传图片 —— 2020.05.29</li><li><input type="checkbox" disabled="" checked="" />google搜索检索博客。 —— 2020.05.29 参考：<a href="https://liwengo.top/2019/10/11/google-search-console/" class="uri">https://liwengo.top/2019/10/11/google-search-console/</a></li></ul><hr /><h3 id="问题记录">问题记录</h3><ol type="1"><li>设置 SSH 使用 hexo deploy 时<strong>免输</strong>用户名密码 <a href="https://segmentfault.com/a/1190000005125610" class="uri">https://segmentfault.com/a/1190000005125610</a></li><li>gitee + PicGo + snipaste 使用方案存在问题：gitee限制超过1M图片需要登录后才可以查看，然而snipaste自动保存到剪贴板中的图片时png格式（似乎未经过压缩），容易超过1M。目前github上传存在服务端出错的问题（未解决），临时解决方案：snipaste自动保存到本地目录下为.jpg格式，图片大小可以小于1M，然后手动cmd + c，然后再上传使用</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[JavaWeb]SSM框架整合 idea+spring+springMVC+Mybatis框架搭建教程</title>
      <link href="/2018/12/24/JavaWeb-SSM/"/>
      <url>/2018/12/24/JavaWeb-SSM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><strong>若图片显示有问题 请跳转此链接<a href="https://www.jianshu.com/p/68012afb5ddb">查看全文</a> 查看</strong></p><h2 id="预备知识及工具">1、预备知识及工具</h2><ul><li>掌握java语言基础知识。</li><li>了解基本的MySQL相关知识。</li><li>了解http协议。</li><li>了解Jdbc技术。</li><li>了解maven项目管理工具。</li></ul><h2 id="开发环境">2、开发环境</h2><ul><li>操作系统：macOS 10.13.4</li><li>IDE：IntelliJ IDEA</li><li>JDK版本：jdk1.7</li><li>Web服务器：tomcat 8.5.242</li><li>版本控制工具：git 2.15.1</li><li>项目管理工具：maven 3.5.2</li><li>数据库：mysql 14.14 <strong>开发环境配置可以按照上面的顺序在网上搜索相应的安装配置教程。</strong></li></ul><h2 id="搭建过程">3、搭建过程</h2><h3 id="框架搭建前先在mysql创建我们需要查询的数据库">3.1 框架搭建前，先在MySQL创建我们需要查询的数据库</h3><ol type="1"><li>打开数据库，并连接到数据中。 <img src="https://upload-images.jianshu.io/upload_images/13242528-17182d00a7cd088c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" /></li><li>新建一个名为demo的数据库。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE demo DEFAULT CHARACTER SET utf8;</span><br></pre></td></tr></table></figure><ol start="3" type="1"><li>在demo数据库下，新建名为t_user数据表。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_user (</span><br><span class="line">  <span class="keyword">id</span>    <span class="built_in">BIGINT</span>       <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">name</span>  <span class="built_in">VARCHAR</span>(<span class="number">50</span>)  <span class="keyword">COMMENT</span> <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">  age   <span class="built_in">INTEGER</span>      <span class="keyword">COMMENT</span> <span class="string">&#x27;年龄&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol start="4" type="1"><li>给t_user表中插入测试数据。 <img src="https://upload-images.jianshu.io/upload_images/13242528-dcc7f2b3a84946be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" /></li></ol><h3 id="使用idea新建maven项目并对项目运行环境进行配置">3.2 使用idea新建maven项目，并对项目运行环境进行配置</h3><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-1cf0827463fe0260.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="01.png" /><figcaption aria-hidden="true">01.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-ca09a78503cda8ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="02.png" /><figcaption aria-hidden="true">02.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-d1815c48f83a23cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="03.png" /><figcaption aria-hidden="true">03.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-2a23cea9db541bab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="05.png" /><figcaption aria-hidden="true">05.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-49b72e118d3570ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="06.png" /><figcaption aria-hidden="true">06.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-9dac31c84d982cc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="07.png" /><figcaption aria-hidden="true">07.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-91dfd6808205070a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="08.png" /><figcaption aria-hidden="true">08.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-dbb879acbc36774d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="09.png" /><figcaption aria-hidden="true">09.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-ba1e0a6a4c07fe2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="10.png" /><figcaption aria-hidden="true">10.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-4dbede943076bbce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="11.png" /><figcaption aria-hidden="true">11.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-aa2ff6dd877a050b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="12.png" /><figcaption aria-hidden="true">12.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-3b5ee67e44a2ee17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="13.png" /><figcaption aria-hidden="true">13.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-aca80207420da3d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="14.png" /><figcaption aria-hidden="true">14.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-c53d1ca43bb76fb2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="15.png" /><figcaption aria-hidden="true">15.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-7f5278598385a147.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="16.png" /><figcaption aria-hidden="true">16.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-489b98155f3eb255.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="17.png" /><figcaption aria-hidden="true">17.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-3bb2bf3103b3abee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="18.png" /><figcaption aria-hidden="true">18.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-d1738f61cefcc5eb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="19.png" /><figcaption aria-hidden="true">19.png</figcaption></figure><p><img src="https://upload-images.jianshu.io/upload_images/13242528-40bc448a8d4e355a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="20.png" /> ### 3.3 建立maven项目的目录结构，并在maven的pom.xml配置文件中添加项目所需要的依赖包。（注意：尽量和我的pom.xml保持一样，避免因为版本问题，出现错误） <img src="https://upload-images.jianshu.io/upload_images/13242528-d9e8f84582e88291.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="21.png" /></p><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-d9b53c7772b0c7e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="22.png" /><figcaption aria-hidden="true">22.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-3316ef6e2cc1e6de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="23.png" /><figcaption aria-hidden="true">23.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-4bae803e27fa1ac4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="24.png" /><figcaption aria-hidden="true">24.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-54888901893f3251.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="25.png" /><figcaption aria-hidden="true">25.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-a70d55976b27177b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="26.png" /><figcaption aria-hidden="true">26.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-e0187c3c2005458f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="27.png" /><figcaption aria-hidden="true">27.png</figcaption></figure><p><img src="https://upload-images.jianshu.io/upload_images/13242528-291c3a99041f33fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="28.png" /> - 完整pom.xml文件在下面文件给出，可复制。 <img src="https://upload-images.jianshu.io/upload_images/13242528-7f287b538fc2308f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="29.png" /></p><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-28439347f208cb12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="30.png" /><figcaption aria-hidden="true">30.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-72c01c34d4a97d4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="31.png" /><figcaption aria-hidden="true">31.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-f94e646310070d3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="32.png" /><figcaption aria-hidden="true">32.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-c47519b7b89332f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="33.png" /><figcaption aria-hidden="true">33.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-a5b82da5e3932301.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="34.png" /><figcaption aria-hidden="true">34.png</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-c9acde2fcb67a17e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="35.png" /><figcaption aria-hidden="true">35.png</figcaption></figure><h3 id="编写demo项目类文件">3.4 编写demo项目类文件。</h3><h4 id="类文件分为三层">类文件分为三层：</h4><ul><li>dao即Data Access Object，数据访问对象。</li><li>controller，控制层，用来接收http请求。</li><li>service，业务逻辑层，用来处理与业务相关的逻辑。 <img src="https://upload-images.jianshu.io/upload_images/13242528-2ee5f8da23b4ef37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="36.png" /></li><li>完整项目结构如下图。 <img src="https://upload-images.jianshu.io/upload_images/13242528-66a66da4039034ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="41.png" /> <img src="https://upload-images.jianshu.io/upload_images/13242528-c10b5187eebddba7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="UserControll.java" /></li></ul><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-9a100f5eaa83fe51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="UserDao.java" /><figcaption aria-hidden="true">UserDao.java</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-3ea04a7e5342abcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="UserEntity.java" /><figcaption aria-hidden="true">UserEntity.java</figcaption></figure><figure><img src="https://upload-images.jianshu.io/upload_images/13242528-3165f6f6d08b074c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="UserService.java" /><figcaption aria-hidden="true">UserService.java</figcaption></figure><p><img src="https://upload-images.jianshu.io/upload_images/13242528-1a3622942965c3f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="37.png" /> <img src="https://upload-images.jianshu.io/upload_images/13242528-c3556ddeb59d2b75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="38.png" /> - 配置文件及类文件如下，文件中注释对配置进行了说明。 - pom.xml <figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span></span><br><span class="line"><span class="xml">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>site.wzhe.spring<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.3.16.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">mysql-connector-java.version</span>&gt;</span>5.1.17<span class="tag">&lt;/<span class="name">mysql-connector-java.version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">mybatis.version</span>&gt;</span>3.4.4<span class="tag">&lt;/<span class="name">mybatis.version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">mybatis-spring.version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">mybatis-spring.version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">c3p0.version</span>&gt;</span>0.9.1.2<span class="tag">&lt;/<span class="name">c3p0.version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">jackson.version</span>&gt;</span>2.9.5<span class="tag">&lt;/<span class="name">jackson.version</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;mysql-connector-java.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;mybatis.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;mybatis-spring.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;c3p0.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;jackson.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure> - .gitignore <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Maven #</span></span><br><span class="line">target/</span><br><span class="line"></span><br><span class="line"><span class="comment"># IDEA #</span></span><br><span class="line"><span class="string">.idea/</span></span><br><span class="line">*<span class="string">.iml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Eclipse #</span></span><br><span class="line"><span class="string">.settings/</span></span><br><span class="line"><span class="string">.metadata/</span></span><br><span class="line"><span class="string">.classpath</span></span><br><span class="line"><span class="string">.project</span></span><br><span class="line">Servers/</span><br></pre></td></tr></table></figure> - web.xml文件 <figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span></span><br><span class="line"><span class="xml">         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line"><span class="xml">         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span><br><span class="line"><span class="xml">         version=&quot;3.1&quot;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- 加载Spring容器配置 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- Spring容器加载所有bean的配置文件的路径 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring/applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- 配置SpringMVC核心控制器,将所有的请求(除了刚刚Spring MVC中的静态资源请求)都交给Spring MVC --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- DispatcherServlet上下文在初始化的时候会建立自己的IoC上下文，用以持有spring mvc相关的bean。 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring/applicationContext-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--用来标记是否在项目启动时就加在此Servlet,0或正数表示容器在应用启动时就加载这个Servlet,</span></span></span><br><span class="line"><span class="xml">    当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载.正数值越小启动优先值越高  --&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!--为DispatcherServlet建立映射--&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 拦截所有请求,千万注意是(/)而不是(/*) --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- 设置编码过滤器 --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span></span><br></pre></td></tr></table></figure> - jdbc.properties文件 <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jdbc.driverClassName</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">jdbc.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/demo?characterEncoding=UTF-<span class="number">8</span></span><br><span class="line"><span class="attr">jdbc.username</span>=root</span><br><span class="line"><span class="attr">jdbc.password</span>=<span class="number">123456</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jdbc.initialPoolSize</span>=<span class="number">20</span></span><br><span class="line"><span class="attr">jdbc.maxPoolSize</span>=<span class="number">100</span></span><br><span class="line"><span class="attr">jdbc.minPoolSize</span>=<span class="number">10</span></span><br><span class="line"><span class="attr">jdbc.maxIdleTime</span>=<span class="number">600</span></span><br><span class="line"><span class="attr">jdbc.acquireIncrement</span>=<span class="number">5</span></span><br><span class="line"><span class="attr">jdbc.maxStatements</span>=<span class="number">50</span></span><br><span class="line"><span class="attr">jdbc.idleConnectionTestPeriod</span>=<span class="number">60</span></span><br></pre></td></tr></table></figure> - UserDaoMapper.xml文件 <figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;site.wzhe.spring.demo.dao.UserDao&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Long&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        SELECT id, username, age</span></span><br><span class="line"><span class="xml">        FROM t_user</span></span><br><span class="line"><span class="xml">        WHERE id = #</span><span class="template-variable">&#123;id, jdbcType=BIGINT&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure> - mybatis-config.xml文件 <figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD SQL Map Config 3.0//EN&quot;</span></span></span></span><br><span class="line"><span class="xml">        &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--实体类匹配成XXXMapper.xml中可以直接使用的类型，相当于一个别名，在XXXMapper.xml中就无需再写完整的实体类全路径，直接用alias的值来代替--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;site.wzhe.spring.demo.entity.UserEntity&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></span><br></pre></td></tr></table></figure> - applicationContext.xml文件 <figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span></span><br><span class="line"><span class="xml">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="line"><span class="xml">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="line"><span class="xml">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- ===============spring容器(父容器)的配置文件 ================== --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;site.wzhe.spring.demo.service&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 加载jdbc.properties配置文件 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc/jdbc.properties&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--数据源-链接数据库的基本信息--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;jdbc.driverClassName&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;jdbc.url&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;jdbc.username&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$</span></span></span><span class="template-variable">&#123;jdbc.password&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--mybatis的配置文件--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis/mybatis-config.xml&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--扫描 XXXDaoMapper.xml映射文件,配置扫描的路径--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mappers/*.xml&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- DAO接口所在包名，Spring会自动查找之中的类 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;site.wzhe.spring.demo.dao&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--事务管理--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span></span></span></span><br><span class="line"><span class="xml">          class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!--注入dataSource--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--开启事务注解扫描--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:annotation-driven</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span></span><br></pre></td></tr></table></figure> - applicationContext-mvc.xml文件 <figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span></span><br><span class="line"><span class="xml">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="line"><span class="xml">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="line"><span class="xml">       xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot; xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span></span><br><span class="line"><span class="xml">       xmlns:util=&quot;http://www.springframework.org/schema/util&quot;</span></span><br><span class="line"><span class="xml">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd&quot;&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- ===============spring web容器(子容器)的配置文件 ================== --&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，</span></span></span><br><span class="line"><span class="xml">    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，</span></span><br><span class="line"><span class="xml">    就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 --&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 告知Spring，会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--SpringMVC相关如下配置，经过验证，这个是SpringMVC必须要配置的，因为它声明了@RequestMapping、@RequestBody、@ResponseBody等。并且，该配置默认加载很多的参数绑定方法，比如json转换解析器等。--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- json请求无法通过@RequestBody转为对象，添加这个就可以解决--&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.ResourceHttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 指定要扫描的包的位置 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;site.wzhe.spring.demo.controller&quot;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 对静态资源文件的访问,因为Spring MVC会拦截所有请求,导致jsp页面中对js和CSS的引用也被拦截,配置后可以把对资源的请求交给项目的默认servlet而不是Spring MVC--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">&quot;/static/**&quot;</span> <span class="attr">location</span>=<span class="string">&quot;/WEB-INF/static/&quot;</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 为RequestMappingHandlerAdapter装配可处理JSON格式的请求/响应消息的HttpMessage Converter--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;</span> <span class="attr">p:messageConverters-ref</span>=<span class="string">&quot;messageConverters&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">util:list</span> <span class="attr">id</span>=<span class="string">&quot;messageConverters&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.BufferedImageHttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.ByteArrayHttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.StringHttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.http.converter.json.MappingJackson2HttpMessageConverter&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">util:list</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置Spring MVC的视图解析器 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 有时我们需要访问JSP页面,可理解为在控制器controller的返回值加前缀和后缀,变成一个可用的URL地址 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/jsp/&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span></span><br></pre></td></tr></table></figure> - UserController.java 文件 <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">site</span><span class="selector-class">.wzhe</span><span class="selector-class">.spring</span><span class="selector-class">.demo</span><span class="selector-class">.controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.beans</span><span class="selector-class">.factory</span><span class="selector-class">.annotation</span><span class="selector-class">.Autowired</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.stereotype</span><span class="selector-class">.Controller</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.PathVariable</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestMapping</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestMethod</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.ResponseBody</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">site</span><span class="selector-class">.wzhe</span><span class="selector-class">.spring</span><span class="selector-class">.demo</span><span class="selector-class">.entity</span><span class="selector-class">.UserEntity</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">site</span><span class="selector-class">.wzhe</span><span class="selector-class">.spring</span><span class="selector-class">.demo</span><span class="selector-class">.service</span><span class="selector-class">.UserService</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @author: andup.</span></span><br><span class="line"><span class="comment"> * @description:</span></span><br><span class="line"><span class="comment"> * @date: 2018/7/21.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@Controller</span></span><br><span class="line">public class UserController &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@Autowired</span></span><br><span class="line">    private UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">@RequestMapping</span>(value = <span class="string">&quot;/api/user/&#123;id&#125;&quot;</span>, method = RequestMethod.GET)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    UserEntity getById(@PathVariable Long id) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">userService</span><span class="selector-class">.getById</span>(<span class="selector-tag">id</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> - UserDao.java文件 <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> site.wzhe.spring.demo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> site.wzhe.spring.demo.entity.UserEntity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: andup.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2018/7/21.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function">UserEntity <span class="title">getById</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> - UserEntity.java文件 <figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">package site.wzhe.spring.demo.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: andup.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2018/7/21.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserEntity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">String</span> userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Long <span class="function"><span class="title">getId</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setId</span>(<span class="params">Long id</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">String</span> <span class="function"><span class="title">getUserName</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setUserName</span>(<span class="params"><span class="built_in">String</span> userName</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="function"><span class="title">getAge</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="function"><span class="title">setAge</span>(<span class="params">Integer age</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> - UserService.java文件 <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> site.wzhe.spring.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> site.wzhe.spring.demo.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> site.wzhe.spring.demo.entity.UserEntity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: andup.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2018/7/21.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserEntity getById(<span class="built_in">Long</span> id) &#123;</span><br><span class="line">        <span class="keyword">return</span> userDao.getById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> - 后面四个类文件对应项目中类位置如下。 <img src="https://upload-images.jianshu.io/upload_images/13242528-699d9d00dbfc2f59.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="39.png" /> ### 3.5 通过游览器输入地址，测试项目是否运行成功。 - 在游览器地址栏输入：localhost:8080/api/user/1 <img src="https://upload-images.jianshu.io/upload_images/13242528-44dba67df9bc96ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="40.png" /> - 后端返回数据。目前大多数项目都是前后端分离项目，后端返回数据，前端进行渲染，展示给用户。所以，游览器从后端返回Json格式的数据即可。</p><p><strong>如果对你有帮助，可以关注我，后续有更多详细教程。</strong></p><h5 id="原创文章请勿用于商业用途转载请著名出处">原创文章,请勿用于商业用途,转载请著名出处。</h5><p>up</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> javaWeb </tag>
            
            <tag> 后端 </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Double Checked locking 模式存在的问题</title>
      <link href="/2018/12/09/Double-Checked-locking-%E6%A8%A1%E5%BC%8F%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/12/09/Double-Checked-locking-%E6%A8%A1%E5%BC%8F%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="问题">问题</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SettingsDbHelper sInst = <span class="keyword">null</span>;  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SettingsDbHelper <span class="title">getInstance</span><span class="params">(Context context)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (sInst == <span class="keyword">null</span>) &#123;                              <span class="comment">// 1</span></span><br><span class="line">        <span class="keyword">synchronized</span> (SettingsDbHelper.class) &#123;       <span class="comment">// 2</span></span><br><span class="line">            SettingsDbHelper inst = sInst;            <span class="comment">// 3</span></span><br><span class="line">            <span class="keyword">if</span> (inst == <span class="keyword">null</span>) &#123;                       <span class="comment">// 4</span></span><br><span class="line">                inst = <span class="keyword">new</span> SettingsDbHelper(context); <span class="comment">// 5</span></span><br><span class="line">                sInst = inst;                         <span class="comment">// 6</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sInst;                                     <span class="comment">// 7</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Double Checked locking 模式，保证多线程安全，Coverity 是静态代码分析工具，它会模拟其实际运行情况。 原因：new SettingsDbHelper(context)并不是一个原子操作，编译后可能会因为与下面的语句发生指令重排， 既是没有下面sInst = inst，也会因为先给sInst初始化，而构造函数并没有执行完，这样在另一个线程中，调用 该函数时，确实返回了初始化的sInst(不为null)，但因为构造函数没有执行完，仍然会出现线程问题。</p><h3 id="解决方法一">解决方法一</h3><p>在 Java 5 之后，引入扩展关键字 volatile 的功能，它能保证：对 volatile 变量的写操作，不允许和它之前的读写操作打乱顺序；对 volatile 变量的读操作，不允许和它之后的读写乱序。所以，上面的操作，只需要对 sInst 变量添加 volatile 关键字修饰即可。 即</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> SettingsDbHelper sInst = <span class="keyword">null</span>;  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SettingsDbHelper <span class="title">getInstance</span><span class="params">(Context context)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (sInst == <span class="keyword">null</span>) &#123;                              <span class="comment">// 1</span></span><br><span class="line">        <span class="keyword">synchronized</span> (SettingsDbHelper.class) &#123;       <span class="comment">// 2</span></span><br><span class="line">            SettingsDbHelper inst = sInst;            <span class="comment">// 3</span></span><br><span class="line">            <span class="keyword">if</span> (inst == <span class="keyword">null</span>) &#123;                       <span class="comment">// 4</span></span><br><span class="line">                inst = <span class="keyword">new</span> SettingsDbHelper(context); <span class="comment">// 5</span></span><br><span class="line">                sInst = inst;                         <span class="comment">// 6</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sInst;                                     <span class="comment">// 7</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决方法二">解决方法二</h3><p>对 volatile 变量的读写操作是一个比较重的操作，所以上面的代码还可以优化一下，如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> SettingsDbHelper sInst = <span class="keyword">null</span>;  <span class="comment">// &lt;&lt;&lt; 这里添加了 volatile  </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SettingsDbHelper <span class="title">getInstance</span><span class="params">(Context context)</span> </span>&#123;  </span><br><span class="line">    SettingsDbHelper inst = sInst;  <span class="comment">// &lt;&lt;&lt; 在这里创建临时变量</span></span><br><span class="line">    <span class="keyword">if</span> (inst == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">synchronized</span> (SettingsDbHelper.class) &#123;</span><br><span class="line">            inst = sInst;</span><br><span class="line">            <span class="keyword">if</span> (inst == <span class="keyword">null</span>) &#123;</span><br><span class="line">                inst = <span class="keyword">new</span> SettingsDbHelper(context);</span><br><span class="line">                sInst = inst;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> inst;  <span class="comment">// &lt;&lt;&lt; 注意这里返回的是临时变量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mac系统快捷键</title>
      <link href="/2018/10/04/mac%E7%B3%BB%E7%BB%9F%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2018/10/04/mac%E7%B3%BB%E7%BB%9F%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="按键">按键</h4><ul><li>⌘ == Command</li><li>⇧ == Shift</li><li>⇪ == Caps Lock</li><li>⌥ == Option/Alt</li><li>⌃ == Control</li><li>⌫ == Delete(win上back space)</li><li>⏏ == 电源开关键</li></ul><p>辅助软件：CheatSheet 长按Command键提示当前应用的快捷键</p><h4 id="系统">系统</h4><ul><li>Command + 空格键 : 切换输入法</li></ul><h4 id="常用">常用</h4><ul><li>Command + X : <strong>剪切</strong>所选项并拷贝到剪切板。</li><li>Command + C : <strong>拷贝</strong>到剪切板，适用于访达中的文件。</li><li>Command + V : 将剪切板中的内容<strong>粘贴</strong>到文稿或访达中。</li><li>Command + Z : <strong>撤销</strong>前一个命令。</li><li>Command + Shift + Z : <strong>反撤销</strong>前一个撤销。</li><li>Command + A : <strong>全选</strong>各项。</li><li>Command + F : <strong>查找</strong>文稿中内容或者打开“查找”窗口。</li><li>Command + O : <strong>打开</strong>所选项，或打开一个对话框以选择要打开的文件。</li><li>Command + N : <strong>新建</strong>文稿或窗口。</li><li>Command + I : 显示选中文件的<strong>简介</strong>。</li><li>Command + S : <strong>存储</strong>当前文稿。</li><li>Command + Shift + S : <strong>另存为</strong>。</li><li>Command + W : <strong>关闭</strong>。</li><li>Command + Q : <strong>退出</strong>应用。</li><li>Command + Control + F : <strong>应用全屏</strong>。</li><li>Command + Tab : <strong>切换应用</strong>，在打开的应用中切换到下一个最近使用的应用。</li><li>Command + Shift + Tab : 在<strong>应用程序</strong>间反向切换。</li><li>Command + 逗号（，）: 打开最前面的应用的<strong>偏好设置</strong>。</li><li>Control + 左键/右键 ： <strong>切换桌</strong>面。</li><li>Command + + : <strong>放大</strong>。</li><li>Command + - : <strong>缩小</strong>。</li></ul><h4 id="移动">移动</h4><ul><li>Command + 左键 : 移动到行首。</li><li>Command + 右键 : 移动到行尾。</li><li>Option + 左键 : 向左移动一个单词。</li><li>Option + 右键 : 向右移动一个单词。</li></ul><h4 id="截屏-基于qq应用qq退出后截图录屏保持运行">截屏 基于qq应用（qq退出后，截图录屏保持运行）</h4><ul><li>Command + Control + A : 截屏。</li><li>Command + Control + R : 录屏。</li></ul><h4 id="截屏-系统自带">截屏 系统自带</h4><ul><li>Command + Shift + 3 : 截取全屏</li><li>Command + Shift + 4 : 截取任意窗口</li><li>Command + Shift + 4，之后再按空格键 : 截图窗口</li><li>$: defaults write com.apple.screencapture location ~/Desktop/截图图库 ： 设置默认截屏保存路径</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker学习</title>
      <link href="/2018/10/04/docker%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/10/04/docker%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="参考地址">参考地址</h3><ul><li><a href="http://www.docker.org.cn/book/docker/docker-getting-started-14.html" class="uri">http://www.docker.org.cn/book/docker/docker-getting-started-14.html</a><br /></li><li><a href="http://guide.daocloud.io/dcs/3-9152643.html" class="uri">http://guide.daocloud.io/dcs/3-9152643.html</a><br /></li><li><a href="https://cloud.docker.com/repository/list" class="uri">https://cloud.docker.com/repository/list</a></li></ul><h3 id="指令">指令</h3><ul><li>docker pull tomcat # 拉取tomcat镜像</li><li>sudo service docker start # 启动docker daemon</li><li>docker search tutorial #搜索镜像</li><li>docker run learn/tutorial echo "hello word" # 在容器中运行echo命令</li><li>docker run learn/tutorial apt-get install -y ping #在镜像容器learn/tutorial中安装ping命令</li><li>docker ps -l # 获得安装完ping命令之后容器的id。</li><li>docker ps -a # 查看所有的容器</li><li>docker commit 8c6 learn/ping #保存对容器的修改，会返回新版本镜像的id号</li><li>docker search tomcat</li><li>docker images 查看本地镜像</li><li>docker run -i -t -d -v ~/download:/home/hello python3-env /bin/bash</li><li>docker rm Name/ID # 删除单个容器</li><li>docker rmi Name/ID # 删除镜像</li><li>docker attach 8704a9700502 # 进入一个正在运行的docker容器</li><li>docker run -d # 后台模式运行</li><li>Control + Q + P # 在docker中退出后容器在后台运行</li><li>docker start b750bbbcfd88 # 启动已停止运行的容器</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库之索引</title>
      <link href="/2018/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%B4%A2%E5%BC%95/"/>
      <url>/2018/07/11/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B9%8B%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="概念要点">概念、要点</h2><h3 id="概念">概念：</h3><ul><li>索引（在MySQL中也叫键）是存储引擎用于快速找到记录的一种数据结构。 ### 索引的类型 ##### 不同的存储引擎的索引的工作方式并不一样，也不是所有的存储引擎都支持所有类型的索引，即使类型一样，底层实现也可能不同。</li><li>B-Tree索引</li><li>哈希索引</li><li>空间数据索引（R-Tree)</li><li>全文索引</li><li>其他类型索引 ### 要点</li><li>表中数据量非常大时，索引对性能的影响非常重要。</li><li>索引应该是对查询性能优化最有效的手段了。</li><li>索引可以包含一个或多个列的值。如果索引包含多个列，那么列的顺序十分重要，因为MySQL<strong>只能</strong>高效地使用索引的<strong>最左前缀列</strong>。</li></ul><h3 id="索引的原理">索引的原理</h3><h4 id="b-tree索引">1. B-Tree索引</h4><p>若没说索引类型，一般指的是B-Tree索引，使用B-Tree数据结构来存储数据，意味着所有的值都是按顺序存储的（很适合查找范围数据），并且每一个叶子页到根的距离相同。 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 若有如下数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> People &#123;</span><br><span class="line">    last_name  <span class="built_in">varchar</span>(<span class="number">50</span>)     <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    first_name <span class="built_in">varchar</span>(<span class="number">50</span>)     <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    dob        <span class="built_in">date</span>            <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    gender     enum(<span class="string">&#x27;m&#x27;</span>, <span class="string">&#x27;f&#x27;</span>)  <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">key</span>(last_name, first_name, dob)</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure> - 索引对多个值进行排序的依据是create table语句中定义索引时列的顺序。 - MySQL适用的查找类型为 <strong>全值匹配</strong>、<strong>匹配最左前缀</strong>、<strong>匹配列前缀</strong>、<strong>匹配范围值</strong>、<strong>精确匹配某一列并范围匹配另外一列</strong>、<strong>只访问索引的查询</strong>。 #### 2. 哈希索引 哈希索引（hash index）基于哈希表实现，只有<strong>精确匹配</strong>索引所有列的查询才有效。哈希索引将所有的哈希码存储在索引中，同时在哈希表中保存指向每个数据行的指针。 - 只有Memory引擎<strong>显式</strong>支持哈希索引。 #### 3. 空间数据索引 空间索引会从所有维度来索引数据。MySQL的GIS支持并不完善，所以大部分人都不会使用这个特性。 #### 4. 全文索引 ### 索引的应用 #### 1. B-Tree索引 - 创建数据库并建立如下数据表<br /><img src="https://note.youdao.com/yws/api/personal/file/WEB922cbab210055a33e4d0a75dc5e91b42?method=download&amp;shareKey=8a5c080d8328af950e3675bbe70a9661" alt="image" /> - 给表中插入数据<br /><img src="https://note.youdao.com/yws/api/personal/file/WEB703e816606fc6e8c94234b98c08ae3fb?method=download&amp;shareKey=20761849af4525d32683b5c91da77443" alt="image" /> ##### 使用索引的几种情况 ##### 1. 全值匹配 <figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> high_performance_mysql.People <span class="keyword">WHERE</span> last_name = <span class="string">&quot;Allen&quot;</span> <span class="keyword">AND</span> first_name = <span class="string">&quot;Cuba&quot;</span> <span class="keyword">AND</span> dob = <span class="string">&quot;1960-01-01&quot;</span>; </span><br></pre></td></tr></table></figure> <img src="https://note.youdao.com/yws/api/personal/file/WEBe698c99c31388695771f6287f45ece4f?method=download&amp;shareKey=6f4ce5e1ebb158187c223f41bcc2c115" alt="image" /> ##### 2. 匹配最左前缀 <figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> high_performance_mysql.People <span class="keyword">WHERE</span> last_name = <span class="string">&quot;Allen&quot;</span>;</span><br></pre></td></tr></table></figure> <img src="https://note.youdao.com/yws/api/personal/file/WEB89813d2d5dfcefb62ed6646f8134e933?method=download&amp;shareKey=508947b940032039f148bf9fc22175ef" alt="image" /> ##### 3. 匹配列前缀 <figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> high_performance_mysql.People <span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">&#x27;J%&#x27;</span>;</span><br></pre></td></tr></table></figure> 有问题 TODO ##### 4. 匹配范围值</p><h5 id="精确匹配某一列并范围匹配另外一列">5. 精确匹配某一列并范围匹配另外一列</h5><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXPLAIN</span> <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> high_performance_mysql.People <span class="keyword">WHERE</span> last_name = <span class="string">&quot;Allen&quot;</span> <span class="keyword">AND</span> first_name <span class="keyword">LIKE</span> <span class="string">&quot;K%&quot;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/api/personal/file/WEB65154b6e2bd0f3c5f79e0138b3007863?method=download&amp;shareKey=76b5576a55d1b26d2e2a9b476fcf6303" alt="image" /> ##### B-Tree索引的限制 ###### 根据索引的底层原理使用，就很容易想通为什么有这些限制了。 - 如果不是按照索引的最左前列开始查找，则无法使用索引。 - 不能跳过索引中的列。如果跳过，则只是用索引的第一列。 - 如果查询中有某个列的范围查询，则其右边所有列都无法使用索引优化查找。</p><h3 id="问题记录">问题记录</h3><ol type="1"><li>like 'A%' 和 like 'J%'<br />EXPLAIN SELECT * FROM high_performance_mysql.People WHERE last_name LIKE 'A%' 当数据库中A%数据占数据表很大部分时，走索引和不走索引效率区别不大，索引没有走索引。 一种情况使用到索引，一种情况没有使用到索引，猜测是否用索引可能和结果集大小也有关，mysql内部做优化。 在表数据量足够大情况下，才走索引。</li><li>底层实现原理弄懂，才能真正明白一些应用和限制的原因。</li><li>SQL 查询性能分析 https://blog.csdn.net/moqiang02/article/details/42433525</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LNMP分布式集群搭建</title>
      <link href="/2018/06/16/LNMP%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/06/16/LNMP%E5%88%86%E5%B8%83%E5%BC%8F%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://note.youdao.com/yws/api/personal/file/WEB1c22ac7bb353014a01f3f91485cfaaa0?method=download&amp;shareKey=0f4ff9f8bdb82aaf871dc682b3fe8110" alt="image" />        一共需要9台服务器，程序部分由一台负载均衡和两台Nginx+PHP服务器组成，数据库部分由两台MySql服务器组成，文件存储部分由两台Nginx（其中一台是Nginx+PHP）和一台NFS服务器组成。还有一台Memcached服务器作为数据缓存，用于处理读写频繁的热门数据。</p><table><thead><tr class="header"><th>编号</th><th>服务器</th><th>硬件侧重点</th></tr></thead><tbody><tr class="odd"><td>1</td><td>Nginx（www.itshop.test）</td><td>网卡性能</td></tr><tr class="even"><td>2</td><td>Nginx（file.itshop.test)</td><td>内存容量、磁盘性能</td></tr><tr class="odd"><td>3</td><td>Nginx + PHP（upload.itshop.test）</td><td>网卡性能</td></tr><tr class="even"><td>4</td><td>Nginx + PHP</td><td>CPU性能</td></tr><tr class="odd"><td>5</td><td>Nginx + PHP</td><td>CPU性能</td></tr><tr class="even"><td>6</td><td>NFS</td><td>磁盘容量</td></tr><tr class="odd"><td>7</td><td>MySQL（主）</td><td>CPU、内存、磁盘整体性能</td></tr><tr class="even"><td>8</td><td>MySQL（从）</td><td>CPU、内存、磁盘整体性能</td></tr><tr class="odd"><td>9</td><td>Memcached</td><td>内存容量</td></tr></tbody></table><ol type="1"><li>部署Linux服务器</li></ol><ul><li>选择CentOS 7 系统最小化部署在vmware fusion虚拟机上。（root 19960621）（andy 19960621）</li><li>使用命令：ip addr查看网络信息。</li><li>使用命令：vi /etc/sysconfig/network-scripts/ifcfg-ens33修改网卡配置，修改或增加以下几项。 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ONBOOT</span>=<span class="string">&quot;yes&quot;</span>                 <span class="attribute">BOOTPROTO</span>=<span class="string">&quot;static&quot;</span>              <span class="attribute">IPADDR</span>=<span class="string">&quot;172.16.212.11&quot;</span></span><br><span class="line"><span class="attribute">NETMASK</span>=<span class="string">&quot;255.255.255.0&quot;</span>      <span class="attribute">GATEWAY</span>=<span class="string">&quot;172.16.212.1&quot;</span>          <span class="attribute">DNS1</span>=<span class="string">&quot;172.16.212.1&quot;</span></span><br></pre></td></tr></table></figure></li><li>确保在CentOS中可以ping通主机中的虚拟接口vmnet8地址。</li><li>编写脚本来改变各个克隆系统的地址。 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文件名：netconfig.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">ens33=<span class="regexp">/etc/</span>sysconfig<span class="regexp">/network-scripts/i</span>fcfg-ens33</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$1&quot;</span> = <span class="string">&quot;&quot;</span> ]; then <span class="keyword">exit</span> <span class="number">3</span>; fi</span><br><span class="line">sed -i <span class="string">&#x27;s/IPADDR=.*/IPADDR=172.16.212.1&#x27;</span><span class="variable">$1</span><span class="string">&#x27;/&#x27;</span> <span class="variable">$ens33</span></span><br><span class="line">sed -i <span class="string">&#x27;s/UUID=.*/UUID=&#x27;</span>`uuidgen`<span class="string">&#x27;/g&#x27;</span> <span class="variable">$ens33</span></span><br></pre></td></tr></table></figure></li><li>根据下图先从1号系统克隆出6、7和9号系统CentOS系统。 <img src="https://note.youdao.com/yws/api/personal/file/WEBd98e0ba8a718e76ce6e2f00d5d8eef70?method=download&amp;shareKey=60524d2f00b213d64115f8b882c1877d" alt="image" /></li><li>克隆后，运行脚本./netconfig.sh 6 改变系统ip地址。</li><li>启动sshd服务，方便主机通过ssh连接系统，命令：service sshd start。</li></ul><ol start="2" type="1"><li>安装Nginx</li></ol><ul><li>更新下yum源。</li><li>安装依赖包 <code>yum -y install gcc pcre-devel openssl-devel</code></li><li>下载安装包。 <code>wget http://nginx.org/download/nginx-1.14.0.tar.gz</code></li><li>解压文件。 <code>tar  zxvf nginx-1.14.0</code></li><li>编译安装，并增加http_realip_module模块。 <code>./configure --with-http_ssl_module --with-http_realip_module &amp;&amp; make &amp;&amp; make install</code></li><li>创建软链接到/usr/local/sbin目录中，该目录在PATH变量中，所以直接创建软链接之后，就可以直接使用nginx命令。 <code>ls -s /usr/local/nginx/sbin/nginx /usr/local/sbin/nginx</code></li><li>在CentOS中，service命令实际上是调用了/etc/init.d目录下的shell脚本。所以编写nginx的shell脚本，将脚本放在/etc/init.d/目录下。 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">DAEMON=/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Starting nginx daemon...&quot;</span></span><br><span class="line">        <span class="variable">$DAEMON</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;SUCCESS&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    stop)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Stopping nginx daemon...&quot;</span></span><br><span class="line">        <span class="variable">$DAEMON</span> -s quit &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;SUCCESS&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    reload)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Reloading nginx daemon...&quot;</span></span><br><span class="line">        <span class="variable">$DAEMON</span> -s reload &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;SUCCESS&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    restart)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Restarting nginx daemon...&quot;</span></span><br><span class="line">        <span class="variable">$DAEMON</span> -s quit</span><br><span class="line">        <span class="variable">$DAEMON</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;SUCCESS&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Usage: service nginx (start|stop|restart|reload)&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>设置开机启动：chkconfig --add nginx <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">报错：<span class="keyword">error</span> reading information <span class="keyword">on</span> service nginx: Invalid argument</span><br><span class="line">目前不知道如何解决。</span><br></pre></td></tr></table></figure></li><li>配置并启动Nginx。 <figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># useradd -s /sbin/nologin -M www</span></span><br><span class="line"><span class="meta"># mkdir -p /data/www</span></span><br><span class="line"><span class="meta"># cp ../html/* /data/www</span></span><br><span class="line"><span class="meta"># chown -R www:www /data/www</span></span><br><span class="line"><span class="meta"># vi ../conf/nginx.conf</span></span><br><span class="line">改动部分如下：</span><br><span class="line"><span class="meta"># configure user</span></span><br><span class="line">user  www www;</span><br><span class="line">worker_processes  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta"># modify server block:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">server</span> &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">root /data/www;</span><br><span class="line"><span class="keyword">index</span> <span class="keyword">index</span>.html <span class="keyword">index</span>.htm;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#location / &#123;</span></span><br><span class="line">        <span class="meta">#    root   html;</span></span><br><span class="line">        <span class="meta">#    index  index.html index.htm;</span></span><br><span class="line">        <span class="meta">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="meta"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="meta">#</span></span><br><span class="line">        <span class="meta">#error_page   500 502 503 504  /50x.html;</span></span><br><span class="line">        <span class="meta">#location = /50x.html &#123;</span></span><br><span class="line">        <span class="meta">#    root   html;</span></span><br><span class="line">        <span class="meta">#&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># firewall-cmd --zone=public --add-port=80/tcp --permanent # 开放80端口。</span></span><br></pre></td></tr></table></figure></li><li>查看nginx是否启动：ps -aux |grep nginx</li><li>查看nginx监听端口：netstat -an | grep 80</li><li>CentOS中，无netstat和ifconfig命令，需安装：yum install net-tools。</li><li>在游览器中访问地址，成功打开nginx欢迎页面。 <img src="https://note.youdao.com/yws/api/personal/file/WEB5c5cb87d060b173a95b4d4ff6b28ad66?method=download&amp;shareKey=77b7e46502ecf5851deafeec193416b0" alt="image" /></li><li>克隆虚拟机，基于1号服务器克隆出两台虚拟机，作为2、3号服务器使用。使用前面的netconfig.sh脚本进行网络配置。</li><li>配置物理机的hosts文件，完成配置后，在游览器中分别访问这几个域名。 <figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">172.16.212.11</span> itshop.test</span><br><span class="line"><span class="number">172.16.212.11</span> www.itshop.test</span><br><span class="line"><span class="number">172.16.212.12</span> file.itshop.test</span><br><span class="line"><span class="number">172.16.212.13</span> upload.itshop.test</span><br></pre></td></tr></table></figure></li></ul><ol start="3" type="1"><li>Nginx + PHP服务器搭建</li></ol><ul><li>在3号服务器上安装PHP。安装完后php -v显示php版本信息。</li><li>部署Nginx + PHP环境 <figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production /usr/local/php/<span class="class"><span class="keyword">lib</span>/<span class="title">php</span>.<span class="title">ini</span>  <span class="comment"># 复制php.ini配置你文件</span></span></span><br><span class="line">vi /usr/local/php/<span class="class"><span class="keyword">lib</span>/<span class="title">php</span>.<span class="title">ini</span>  <span class="comment"># 配置时区为PRC?</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建服务脚本、设置开机启动</span></span><br><span class="line">cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">chmod +x /etc/init.d/php-fpm</span><br><span class="line">chkconfig --add php-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制php-fpm配置文件、启动服务</span></span><br><span class="line">cd /usr/local/php/etc</span><br><span class="line">cp php-fpm.conf.default php-fpm.conf</span><br><span class="line">cd php-fpm.d</span><br><span class="line">cp www.conf.default www.conf</span><br><span class="line">vi www.conf</span><br><span class="line">更改如下:</span><br><span class="line">[www]</span><br><span class="line">user=www</span><br><span class="line">group=www</span><br><span class="line">listen=<span class="regexp">/tmp/php</span>-cgi.sock</span><br><span class="line">listen.owner=www</span><br><span class="line">listen.group=www</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动php-fpm</span></span><br><span class="line">service php-fpm start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在Nginx配置文件中加入PHP支持，server模块。</span></span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">        try_files $uri =<span class="number">404</span>;</span><br><span class="line">        fastcgi_pass   <span class="symbol">unix:</span>/tmp/php-cgi.sock;</span><br><span class="line">        <span class="keyword">include</span>        fastcgi.conf</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试，在/data/www下创建index.php内容如下：</span></span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在游览器中地址输入ip:/index.php</span></span><br></pre></td></tr></table></figure> <img src="https://note.youdao.com/yws/api/personal/file/WEBcacc65278849272bd250c13788d520c3?method=download&amp;shareKey=a262787ec230fc14cb2257fc34e18f88" alt="image" /></li><li>克隆虚拟机，基于3号服务器克隆出4号和5号虚拟机，并用脚本配置网络。</li><li>配合防火墙，4、5号服务器不需要被外部访问，只允许1号负载均衡服务器的IP地址进行访问。 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span> TODO  未完成</span><br></pre></td></tr></table></figure></li><li>配置反向代理和负载均衡 <img src="https://note.youdao.com/yws/api/personal/file/WEBc1fa6f184b9413cee095af0ba3c73911?method=download&amp;shareKey=6a33442152b2f0d02333cba283fc9612" alt="image" /></li><li>还需在后端服务器nginx中配置如下 <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">real_ip_header</span> X-Real-IP;</span><br><span class="line"><span class="attribute">set_real_ip_from</span> </span><br></pre></td></tr></table></figure></li><li>访问172.16.212.11/index.php查看其中的server_addr为后端服务器ip交替出现。</li></ul><ol start="4" type="1"><li>搭建NFS文件服务器。</li></ol><ul><li>为了使2、3号服务器能够同时访问6号服务器中的文件，就需要利用NFS实现文件共享。</li><li>在6号服务器中，执行命令：yum -y install nfs-utils，之后配置NFS端口号。 <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/sysconfig/nfs</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#找到如下一行，取消注释</span></span><br><span class="line"><span class="attr">MOUNTD_PORT</span>=<span class="number">892</span></span><br></pre></td></tr></table></figure></li><li>开启服务 <figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启rpcbind服务</span></span><br><span class="line"><span class="comment"># service rpcbind start</span></span><br><span class="line"><span class="comment"># 开启nfs服务</span></span><br><span class="line"><span class="comment"># service nfs start</span></span><br><span class="line"><span class="comment"># 配置NFS服务开机自动自启</span></span><br><span class="line">chkconfig nfs <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启与NFS相关的端口号 TODO 未成功</span></span><br><span class="line">iptables -I INPUT -p udp <span class="comment">--dport 111 -j ACCEPT</span></span><br><span class="line">iptables -I INPUT -p udp <span class="comment">--dport 892 -j ACCEPT</span></span><br><span class="line">iptables -I INPUT -p tcp <span class="comment">--dport 2049 -j ACCEPT</span></span><br><span class="line">iptables save  <span class="comment"># TODO 没用</span></span><br><span class="line">解决方法:</span><br><span class="line"><span class="keyword">http</span>://blog<span class="number">.163</span>.com/xavier_666/blog/static/<span class="number">25884000720163299503423</span>/</span><br></pre></td></tr></table></figure></li><li>配置共享目录 <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建用于共享的目录</span></span><br><span class="line">mkdir <span class="string">/share</span></span><br><span class="line">chmod 777 <span class="string">/share</span></span><br><span class="line"><span class="comment"># 配置/share为共享目录，语法是“路径 IP段(权限)”， 任意IP为*表示</span></span><br><span class="line"><span class="keyword">echo</span> &#x27;<span class="string">/share</span> *<span class="params">(rw)</span>&#x27; &gt; <span class="string">/etc/exports</span></span><br><span class="line">注： *号与<span class="params">(rw)</span>之间并没有空格</span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">service nfs <span class="keyword">reload</span></span><br></pre></td></tr></table></figure></li><li>在2号服务器中挂载NFS共享目录，实现远程文件的读写操作。 <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装NFS软件包</span></span><br><span class="line">yum -y install nfs-utils</span><br><span class="line"><span class="comment"># 查看NFS服务器中的共享目录</span></span><br><span class="line">showmout -e 172.16.212.16</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将NFS服务器中的共享/share目录挂载到本地目录&quot;/data/share&quot;（也可以是其他目录）</span></span><br><span class="line">mkdir <span class="string">/data/share</span></span><br><span class="line">mount 172.15.212.15:<span class="string">/share</span> <span class="string">/data/share</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读写文件测试</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/data/share</span></span><br><span class="line"><span class="keyword">echo</span> Hello  &gt;test.txt</span><br><span class="line">cat test.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使2号服务器开启自动挂载NFS目录</span></span><br><span class="line"><span class="keyword">echo</span> &#x27;172.16.212.16:<span class="string">/share</span> <span class="string">/data/share</span> nfs defaults 0 0&#x27; &gt;&gt; <span class="string">/etc/fstab</span></span><br></pre></td></tr></table></figure></li><li>在2号服务器中配置文件缓存。通过部署文件缓存服务器降低后端文件存储服务器的压力。 <img src="https://note.youdao.com/yws/api/personal/file/WEBb66f7180d6ba8085b9832efe20000900?method=download&amp;shareKey=0eb6d6d844c9ab099aaf94c748765dcd" alt="image" /></li></ul><ol start="5" type="1"><li>配置文件上传服务器，3号服务器。</li></ol><ul><li>挂载NFS共享目录</li><li>配置Nginx对请求数据量的限制。 <figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在server块中</span></span><br><span class="line">client_max_body_size <span class="number">20</span>m;</span><br><span class="line">另外，在php.ini中对于上传文件的限制，增加到<span class="number">10</span>M.</span><br><span class="line"><span class="comment"># vi /usr/local/php/lib/php.ini</span></span><br><span class="line"><span class="attr">post_max_size=20M</span>  <span class="comment"># 通过POST提交的最大限制</span></span><br><span class="line"><span class="attr">file_uploads=On</span>    <span class="comment"># 是否允许文件上传</span></span><br><span class="line"><span class="attr">upload_max_filesize=10M</span>    <span class="comment"># 上传文件最大限制</span></span><br><span class="line">;<span class="attr">upload_tmp_dir=</span>           <span class="comment"># 上传文件临时保存目录，默认为/tmp目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">service php-fpm reload</span><br><span class="line">servcie nginx reload</span><br></pre></td></tr></table></figure></li><li>上传文件测试 在第三个服务器上编写如下脚本页面： <figure class="highlight php-template"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;up&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;up&#x27;</span>])&amp;&amp;<span class="variable">$_FILES</span>[<span class="string">&#x27;up&#x27;</span>][<span class="string">&#x27;error&#x27;</span>] == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="php">    <span class="variable">$savepath</span>=<span class="string">&#x27;uploads/&#x27;</span>.time().<span class="string">&#x27;.dat&#x27;</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;up&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&quot;/data/share/<span class="subst">$savepath</span>&quot;</span>)) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">&quot;File:&lt;a href=\&quot;http://file.itshop.test/<span class="subst">$savepath</span>\&quot;&gt;Download&lt;/a&gt;&quot;</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure></li><li>测试后，发现6号文件服务器中/share/upload/目录下存在上传的文件。</li></ul><ol start="6" type="1"><li>搭建MySQL数据库服务器。</li></ol><ul><li>安装依赖包 yum -y install gcc-c++ cmake ncurses-devel</li><li>下载免安装的mysql，解压文件到/usr/local。</li><li>在/etc/bashrc中设置环境变量添加指向Mysql下bin目录。</li><li>配置MySQL。 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/etc/my</span>.cnf</span><br><span class="line"><span class="comment">#找到如下配置进行更改</span></span><br><span class="line">datadir=<span class="regexp">/data/my</span>sql</span><br><span class="line">socket=<span class="regexp">/tmp/my</span>sql.sock</span><br><span class="line">user=mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据my.cnf中的配置，创建mysql用户</span></span><br><span class="line">useradd -s <span class="regexp">/sbin/</span>nologin -M mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行mysql_install_db程序初始化数据库，初始化后将会在数据库中保存目录中生成的数据库文件</span></span><br><span class="line">.<span class="regexp">/scripts/my</span>sql_install_db  [ 未完成 ]</span><br><span class="line"><span class="comment">#启动MySql</span></span><br><span class="line">在mysql目录的bin目录下启动mysqld</span><br><span class="line"><span class="comment">#配置防火墙允许3306端口访问。</span></span><br><span class="line">iptables -I INPUT -p tcp --dport <span class="number">3306</span> -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动mysql后修改密码</span></span><br><span class="line">./mysqladmin -uroot -pCcRH<span class="comment">#UK2Nztn password 123456</span></span><br></pre></td></tr></table></figure></li><li>实现MySQL主从复制</li><li>基于7号服务器克隆出8号服务器，配置网络信息。</li><li>主数据库服务器开启bin日志 <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.conf</span></span><br><span class="line"><span class="attr">log-bin</span>=mysqlbin-log</span><br><span class="line"><span class="attr">server-id</span>=<span class="number">17</span></span><br></pre></td></tr></table></figure></li><li>创建用于从数据库登录主数据库的用户 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;172.16.212.18&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li>配置从服务器。 <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER <span class="keyword">TO</span> <span class="attribute">master_host</span>=<span class="string">&#x27;172.16.212.17&#x27;</span>, <span class="attribute">master_user</span>=<span class="string">&#x27;slave&#x27;</span>, \</span><br><span class="line">-&gt; <span class="attribute">master_password</span>=<span class="string">&#x27;123456&#x27;</span>, <span class="attribute">master_log_file</span>=<span class="string">&#x27;mysqlbin-log.000002&#x27;</span>, <span class="attribute">master_log_pos</span>=639;</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若要停止从服务器同步，在从服务器mysql中执行</span></span><br><span class="line">slave stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测 TODO 主从数据库  相关命令</span></span><br><span class="line">在主数据库中插入数据，从数据库中同样也插入数据。</span><br><span class="line">在从数据库中插入数据，在主数据库中并不能看到数据。</span><br><span class="line">成功。</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><ol start="7" type="1"><li>搭建Memcached缓存服务器。</li></ol><ul><li>安装依赖包：yum -y install gcc libevent-devel</li><li>编译安装Memcached <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf memcached-<span class="number">1.5</span>.<span class="number">8</span>.tar.gz</span><br><span class="line"><span class="keyword">cd</span> memcached-<span class="number">1.5</span>.<span class="number">8</span></span><br><span class="line">./configure</span><br><span class="line"><span class="keyword">make</span> &amp;&amp; <span class="keyword">make</span> install</span><br></pre></td></tr></table></figure></li><li>添加系统服务、配置开机自启 <figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> scripts</span><br><span class="line">cp memcached-init <span class="string">/etc/init.d/memcached</span></span><br><span class="line">chkconfig <span class="params">--add</span> memcached</span><br></pre></td></tr></table></figure></li><li>在memcached服务脚本中还调用了start-memcached脚本，需拷贝 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="regexp">/usr/</span>share<span class="regexp">/memcached/</span>scripts</span><br><span class="line">cp start-memcached <span class="regexp">/usr/</span>share<span class="regexp">/memcached/</span>scripts/</span><br></pre></td></tr></table></figure></li><li>为start-memcached脚本创建连接 <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="regexp">/usr/</span>local<span class="regexp">/bin/m</span>emcached <span class="regexp">/usr/</span>bin/memcached</span><br></pre></td></tr></table></figure></li><li>目前还不能通过service命令启动memcached服务，因为memcached中的脚本依赖于perl和start-stop-daemon，需单独下载。 <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf dpkg_1.<span class="number">13.11</span>.tar.gz </span><br><span class="line"><span class="keyword">cd</span> dpkg-<span class="number">1.13</span>.<span class="number">11</span>/</span><br><span class="line">./configure --without-libselinux &amp;&amp; <span class="keyword">make</span></span><br><span class="line"><span class="keyword">cp</span> utils/start-<span class="keyword">stop</span>-daemon /usr/local/sbin/</span><br></pre></td></tr></table></figure></li><li>启动Memcached服务。 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/etc/m</span>emcached.conf 创建配置文件，内容如下：</span><br><span class="line">-m <span class="number">512</span>      <span class="comment"># 分配的内存大小，单位是MB，默认为64MB</span></span><br><span class="line">-p <span class="number">11211</span>    <span class="comment"># 配置监听的TCP端口，默认为11211</span></span><br><span class="line">-u nobody   <span class="comment"># 配置Memcached的工作用户</span></span><br><span class="line">-c <span class="number">1024</span>     <span class="comment"># 配置最高并发连接数，默认1024</span></span><br><span class="line">-t <span class="number">16</span>       <span class="comment"># 配置使用的线程数，默认为4</span></span><br><span class="line"></span><br><span class="line">注：可以通过：<span class="regexp">/usr/</span>local<span class="regexp">/bin/m</span>emcached -H 查看说明，根据服务器的硬件配置。</span><br><span class="line"></span><br><span class="line">service memcached start</span><br><span class="line">iptables -I INPUT -p tcp --dport <span class="number">11211</span> -j ACCEPT</span><br></pre></td></tr></table></figure></li><li>PHP访问Memcached。 <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">将PHP的Memcached扩展和libmemcached下载到<span class="number">3</span>、<span class="number">4</span>、<span class="number">5</span>号服务器中，进行以下安装过程:</span><br><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">yum -y install cyrus-sasl-devel</span><br><span class="line"><span class="comment"># 编译安装libmemcached</span></span><br><span class="line">tar -zxvf libmemcached-<span class="number">1.0</span>.<span class="number">18</span>.tar.gz </span><br><span class="line">cd libmemcached-<span class="number">1.0</span>.<span class="number">18</span></span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install &amp;&amp; cd ..</span><br><span class="line"></span><br><span class="line"><span class="comment"># php7 这种方法不行</span></span><br><span class="line"><span class="comment"># 为PHP的Memcached扩展生成configure文件</span></span><br><span class="line">tar -zxvf memcached-<span class="number">2.2</span>.<span class="number">0</span>.tgz</span><br><span class="line">cd memcached-<span class="number">2.2</span>.<span class="number">0</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/php/</span>bin/phpize</span><br><span class="line"><span class="comment"># 编译安装PHP的Memcached扩展</span></span><br><span class="line">.<span class="regexp">/configure --with-php-config=/u</span>sr<span class="regexp">/local/</span>php<span class="regexp">/bin/</span>php-config</span><br><span class="line">make &amp;&amp; make install &amp;&amp; cd ..</span><br><span class="line"></span><br><span class="line">https:<span class="regexp">//</span>blog.csdn.net<span class="regexp">/xahuo/</span>article<span class="regexp">/details/</span><span class="number">50372736</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在PHP配置文件php.ini中加载Memcached扩展</span></span><br><span class="line">vi <span class="regexp">/usr/</span>local<span class="regexp">/php/</span>lib/php.ini</span><br><span class="line">; memcached extension</span><br><span class="line">extension=usr<span class="regexp">/local/</span>php<span class="regexp">/lib/</span>php<span class="regexp">/extensions/</span>no-debug-non-zts-<span class="number">20151012</span>/memcached.so</span><br><span class="line"><span class="comment"># PHP_FPM重新加载配置</span></span><br><span class="line">service php-fpm reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在/data/www下编写测试页面test.php</span></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$mem</span>=new Memcached();</span><br><span class="line"><span class="variable">$mem</span>-&gt;addServer(<span class="string">&#x27;172.16.212.19&#x27;</span>, <span class="number">11211</span>);</span><br><span class="line"><span class="variable">$mem</span>-&gt;set(<span class="string">&#x27;UserName&#x27;</span>, <span class="string">&#x27;James&#x27;</span>);</span><br><span class="line">echo <span class="variable">$mem</span>-&gt;get(<span class="string">&#x27;UserName&#x27;</span>);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用telnet测试端口是否可以访问: telnet 172.16.212.19 11211</span></span><br><span class="line"><span class="comment"># 9号服务器需要打开端口</span></span><br><span class="line">iptables -I INPUT -p tcp --dport <span class="number">11211</span> -j ACCEPT</span><br><span class="line"><span class="comment"># 访问成功</span></span><br></pre></td></tr></table></figure></li></ul><ol start="8" type="1"><li>ThinkPHP项目部署</li></ol><ul><li>创建MySQL独立数据库用户 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在7号服务器中启动MySql客户端，登录MySql服务器</span></span><br><span class="line">mysql -uroot -p123456</span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> itshop;</span><br><span class="line"><span class="comment"># 为4、5号服务器创建无权限用户itshop，密码为123456</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;itshop&#x27;</span>@<span class="string">&#x27;172.16.212.14&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;itshop&#x27;</span>@<span class="string">&#x27;172.16.212.15&#x27;</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="comment"># 为用户分配指定数据库的权限</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VIM 快捷键</title>
      <link href="/2018/05/04/VIM-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2018/05/04/VIM-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="map-可以将功能键映射为命令组合不同模式不同含义">map 可以将功能键映射为命令组合，不同模式不同含义</h3><h3 id="录制宏重复工作自动化完成">录制宏，重复工作自动化完成</h3><h3 id="一正常模式normal-mode">一、正常模式(Normal-mode)</h3><p>用户刚启动进入正常模式下，其他模式下按下Esc键/Control + [（更方便）进入再次正常模式。</p><ul><li>r : <strong>替换</strong>当前光标下字符。</li><li>R : <strong>一直替换</strong>光标所在的文字，直到按下Esc键/Control + [ （常用）。</li></ul><h4 id="移动光标">1. 移动光标</h4><h5 id="字符">字符</h5><ul><li>h : 左。</li><li>l : 右。 # w更常用。</li><li>j : 下。</li><li>k : 上。</li></ul><h5 id="单词">单词</h5><ul><li>w : 移至下一个单词的词首。</li><li>e : 移至当前或下一个单词的词尾。</li><li>b : 光标向前移动一个词。</li></ul><h5 id="行间">行间</h5><ul><li>gg : 移至第一行。</li><li>G : 移至最后一行。</li></ul><h5 id="定位">定位</h5><ul><li>fx ：移动光标到当前行的下一个x处,x可以是任意一个字母，使用;来重复你的上一个f命令。</li><li>Fx ：类似fx，反向。</li><li>tx ：移动光标到当前行的下一个x处的左边一个位置。</li></ul><h4 id="删除">2. 删除</h4><ul><li>x : <strong>删除</strong>当前光标所在处的单个<strong>字符</strong>。</li><li>dd : <strong>删除</strong>当前光标所在处的行。</li><li>dw : <strong>删除</strong>当前光标所在处的单词。</li><li>D : 删除到行尾的内容。</li></ul><h4 id="复制">3. 复制</h4><ul><li>y命令 : 用法同删除d命令。</li></ul><h4 id="粘贴">4. 粘贴</h4><ul><li>p : 粘贴到所在行的下一行或者所在字符的后面。</li><li>P : 粘贴到所在行的上一行或者所在字符的前面。</li></ul><h4 id="撤消">5. 撤消</h4><ul><li>u : 撤消前一次操作。</li><li>Control + r : 撤消最近一次撤消操作。</li></ul><h4 id="翻屏">6. 翻屏</h4><ul><li>Control + u ：向上翻半屏。</li><li>Control + d ：向下翻半屏。</li><li>Control + f ：向下翻一屏。</li><li>Control + b ：向上翻一屏。</li></ul><h4 id="正常模式转插入模式">7. 正常模式转插入模式</h4><ul><li>i : 在所在<strong>光标前</strong>，进入插入模式下。</li><li>I : 在当前光标所在行的<strong>行首</strong>，进入插入模式。</li><li>a : 在所在<strong>光标后</strong>，进入插入模式下。</li><li>A : 在当前光标所在行的<strong>行尾</strong>，进入插入模式。</li><li>o : 在当前光标所在行的下面，<strong>新建一行</strong>，进入插入模式。</li><li>O : 在当前光标所在行的上面，<strong>新建一行</strong>，进入插入模式。</li><li>c : 如同命令d删除功能，但可以直接进入插入模式下，配合Visual模式和fx命令更佳。</li><li>ci（ ：删除（）括号中的内容并直接进入插入模式下。</li><li>ci { ：删除{}括号中的内容并直接进入插入模式下。</li></ul><h4 id="正常模式转命令行模式">8. 正常模式转命令行模式</h4><ul><li>: : 进入<strong>命令行</strong>模式下。</li></ul><h4 id="避免重复">9. 避免重复</h4><ul><li>. ：重复上一个命令。如dw，之后按.再次删除一个单词。</li><li>数字 + 命令 : 重复命令。</li></ul><h4 id="vim写代码">10. vim写代码</h4><ul><li>&gt;&gt; ：缩进所有选择的代码。</li><li>&lt;&lt; ：反缩进所选择的代码。</li><li>gd ：到达光标所在处函数或者变量的定义处。</li><li>* ：跳转到下一个相同单词。</li></ul><h4 id="历史命令">11. 历史命令</h4><ul><li>q: ：进入历史命令。</li></ul><h3 id="二插入模式insert-mode">二、插入模式(Insert-mode)</h3><p>在正常模式下按下i键进入插入模式。</p><ul><li>Control + n : 向下寻找匹配的关键字，显示出代码补全框后使用。（idea中同样适用）</li><li>Control + p : 向上寻找匹配的关键字。（idea中同样适用）</li><li>control + h : 删除单个字符，挺好用的!</li><li>control + w : 删除单词，挺好用的!</li></ul><p>fdashahahhfdasf fdashahahhfdasf ### 三、命令行模式(Command-mode)</p><ul><li>q : 退出。</li><li>q! : 强制退出。</li><li>w : 保存。</li><li>wq : 保存并退出。</li></ul><h3 id="四可视模式visual-mode">四、可视模式(Visual-mode)</h3><ul><li>v ：按字符选择。</li><li>V ：按行选择。多行拷贝。</li><li>control + v : 块选择模式</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2009/06/05/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/data/cifar-10-batches-py/readme/"/>
      <url>/2009/06/05/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%AE%9E%E6%88%98/data/cifar-10-batches-py/readme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><meta HTTP-EQUIV="REFRESH" content="0; url=http://www.cs.toronto.edu/~kriz/cifar.html">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
